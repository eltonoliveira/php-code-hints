[
    {
        "stmtType": "Class",
        "name": "ImagickException",
        "fqn": "\\ImagickException",
        "type": 0,
        "extends": "Exception",
        "methods": [
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "message",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "code",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "previous",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Construct the exception\r\n * @link http:\/\/php.net\/manual\/en\/exception.construct.php\r\n * @param $message [optional]\r\n * @param $code [optional]\r\n * @param $previous [optional]\r\n *\/"
            },
            {
                "name": "getMessage",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the Exception message\r\n * @link http:\/\/php.net\/manual\/en\/exception.getmessage.php\r\n * @return string the Exception message as a string.\r\n *\/"
            },
            {
                "name": "getCode",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the Exception code\r\n * @link http:\/\/php.net\/manual\/en\/exception.getcode.php\r\n * @return mixed the exception code as integer in\r\n * <b>Exception<\/b> but possibly as other type in\r\n * <b>Exception<\/b> descendants (for example as\r\n * string in <b>PDOException<\/b>).\r\n *\/"
            },
            {
                "name": "getFile",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the file in which the exception occurred\r\n * @link http:\/\/php.net\/manual\/en\/exception.getfile.php\r\n * @return string the filename in which the exception was created.\r\n *\/"
            },
            {
                "name": "getLine",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the line in which the exception occurred\r\n * @link http:\/\/php.net\/manual\/en\/exception.getline.php\r\n * @return int the line number where the exception was created.\r\n *\/"
            },
            {
                "name": "getTrace",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the stack trace\r\n * @link http:\/\/php.net\/manual\/en\/exception.gettrace.php\r\n * @return array the Exception stack trace as an array.\r\n *\/"
            },
            {
                "name": "getPrevious",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.3.0)<br\/>\r\n * Returns previous Exception\r\n * @link http:\/\/php.net\/manual\/en\/exception.getprevious.php\r\n * @return Exception the previous <b>Exception<\/b> if available\r\n * or <b>NULL<\/b> otherwise.\r\n *\/"
            },
            {
                "name": "getTraceAsString",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the stack trace as a string\r\n * @link http:\/\/php.net\/manual\/en\/exception.gettraceasstring.php\r\n * @return string the Exception stack trace as a string.\r\n *\/"
            },
            {
                "name": "__toString",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * String representation of the exception\r\n * @link http:\/\/php.net\/manual\/en\/exception.tostring.php\r\n * @return string the string representation of the exception.\r\n *\/"
            }
        ],
        "properties": [
            {
                "name": "message",
                "doc": null
            },
            {
                "name": "code",
                "doc": null
            },
            {
                "name": "file",
                "doc": null
            },
            {
                "name": "line",
                "doc": null
            }
        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "ImagickDrawException",
        "fqn": "\\ImagickDrawException",
        "type": 0,
        "extends": "Exception",
        "methods": [
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "message",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "code",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "previous",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Construct the exception\r\n * @link http:\/\/php.net\/manual\/en\/exception.construct.php\r\n * @param $message [optional]\r\n * @param $code [optional]\r\n * @param $previous [optional]\r\n *\/"
            },
            {
                "name": "getMessage",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the Exception message\r\n * @link http:\/\/php.net\/manual\/en\/exception.getmessage.php\r\n * @return string the Exception message as a string.\r\n *\/"
            },
            {
                "name": "getCode",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the Exception code\r\n * @link http:\/\/php.net\/manual\/en\/exception.getcode.php\r\n * @return mixed the exception code as integer in\r\n * <b>Exception<\/b> but possibly as other type in\r\n * <b>Exception<\/b> descendants (for example as\r\n * string in <b>PDOException<\/b>).\r\n *\/"
            },
            {
                "name": "getFile",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the file in which the exception occurred\r\n * @link http:\/\/php.net\/manual\/en\/exception.getfile.php\r\n * @return string the filename in which the exception was created.\r\n *\/"
            },
            {
                "name": "getLine",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the line in which the exception occurred\r\n * @link http:\/\/php.net\/manual\/en\/exception.getline.php\r\n * @return int the line number where the exception was created.\r\n *\/"
            },
            {
                "name": "getTrace",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the stack trace\r\n * @link http:\/\/php.net\/manual\/en\/exception.gettrace.php\r\n * @return array the Exception stack trace as an array.\r\n *\/"
            },
            {
                "name": "getPrevious",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.3.0)<br\/>\r\n * Returns previous Exception\r\n * @link http:\/\/php.net\/manual\/en\/exception.getprevious.php\r\n * @return Exception the previous <b>Exception<\/b> if available\r\n * or <b>NULL<\/b> otherwise.\r\n *\/"
            },
            {
                "name": "getTraceAsString",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the stack trace as a string\r\n * @link http:\/\/php.net\/manual\/en\/exception.gettraceasstring.php\r\n * @return string the Exception stack trace as a string.\r\n *\/"
            },
            {
                "name": "__toString",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * String representation of the exception\r\n * @link http:\/\/php.net\/manual\/en\/exception.tostring.php\r\n * @return string the string representation of the exception.\r\n *\/"
            }
        ],
        "properties": [
            {
                "name": "message",
                "doc": null
            },
            {
                "name": "code",
                "doc": null
            },
            {
                "name": "file",
                "doc": null
            },
            {
                "name": "line",
                "doc": null
            }
        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "ImagickPixelIteratorException",
        "fqn": "\\ImagickPixelIteratorException",
        "type": 0,
        "extends": "Exception",
        "methods": [
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "message",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "code",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "previous",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Construct the exception\r\n * @link http:\/\/php.net\/manual\/en\/exception.construct.php\r\n * @param $message [optional]\r\n * @param $code [optional]\r\n * @param $previous [optional]\r\n *\/"
            },
            {
                "name": "getMessage",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the Exception message\r\n * @link http:\/\/php.net\/manual\/en\/exception.getmessage.php\r\n * @return string the Exception message as a string.\r\n *\/"
            },
            {
                "name": "getCode",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the Exception code\r\n * @link http:\/\/php.net\/manual\/en\/exception.getcode.php\r\n * @return mixed the exception code as integer in\r\n * <b>Exception<\/b> but possibly as other type in\r\n * <b>Exception<\/b> descendants (for example as\r\n * string in <b>PDOException<\/b>).\r\n *\/"
            },
            {
                "name": "getFile",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the file in which the exception occurred\r\n * @link http:\/\/php.net\/manual\/en\/exception.getfile.php\r\n * @return string the filename in which the exception was created.\r\n *\/"
            },
            {
                "name": "getLine",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the line in which the exception occurred\r\n * @link http:\/\/php.net\/manual\/en\/exception.getline.php\r\n * @return int the line number where the exception was created.\r\n *\/"
            },
            {
                "name": "getTrace",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the stack trace\r\n * @link http:\/\/php.net\/manual\/en\/exception.gettrace.php\r\n * @return array the Exception stack trace as an array.\r\n *\/"
            },
            {
                "name": "getPrevious",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.3.0)<br\/>\r\n * Returns previous Exception\r\n * @link http:\/\/php.net\/manual\/en\/exception.getprevious.php\r\n * @return Exception the previous <b>Exception<\/b> if available\r\n * or <b>NULL<\/b> otherwise.\r\n *\/"
            },
            {
                "name": "getTraceAsString",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the stack trace as a string\r\n * @link http:\/\/php.net\/manual\/en\/exception.gettraceasstring.php\r\n * @return string the Exception stack trace as a string.\r\n *\/"
            },
            {
                "name": "__toString",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * String representation of the exception\r\n * @link http:\/\/php.net\/manual\/en\/exception.tostring.php\r\n * @return string the string representation of the exception.\r\n *\/"
            }
        ],
        "properties": [
            {
                "name": "message",
                "doc": null
            },
            {
                "name": "code",
                "doc": null
            },
            {
                "name": "file",
                "doc": null
            },
            {
                "name": "line",
                "doc": null
            }
        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "ImagickPixelException",
        "fqn": "\\ImagickPixelException",
        "type": 0,
        "extends": "Exception",
        "methods": [
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "message",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "code",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "previous",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Construct the exception\r\n * @link http:\/\/php.net\/manual\/en\/exception.construct.php\r\n * @param $message [optional]\r\n * @param $code [optional]\r\n * @param $previous [optional]\r\n *\/"
            },
            {
                "name": "getMessage",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the Exception message\r\n * @link http:\/\/php.net\/manual\/en\/exception.getmessage.php\r\n * @return string the Exception message as a string.\r\n *\/"
            },
            {
                "name": "getCode",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the Exception code\r\n * @link http:\/\/php.net\/manual\/en\/exception.getcode.php\r\n * @return mixed the exception code as integer in\r\n * <b>Exception<\/b> but possibly as other type in\r\n * <b>Exception<\/b> descendants (for example as\r\n * string in <b>PDOException<\/b>).\r\n *\/"
            },
            {
                "name": "getFile",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the file in which the exception occurred\r\n * @link http:\/\/php.net\/manual\/en\/exception.getfile.php\r\n * @return string the filename in which the exception was created.\r\n *\/"
            },
            {
                "name": "getLine",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the line in which the exception occurred\r\n * @link http:\/\/php.net\/manual\/en\/exception.getline.php\r\n * @return int the line number where the exception was created.\r\n *\/"
            },
            {
                "name": "getTrace",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the stack trace\r\n * @link http:\/\/php.net\/manual\/en\/exception.gettrace.php\r\n * @return array the Exception stack trace as an array.\r\n *\/"
            },
            {
                "name": "getPrevious",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.3.0)<br\/>\r\n * Returns previous Exception\r\n * @link http:\/\/php.net\/manual\/en\/exception.getprevious.php\r\n * @return Exception the previous <b>Exception<\/b> if available\r\n * or <b>NULL<\/b> otherwise.\r\n *\/"
            },
            {
                "name": "getTraceAsString",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the stack trace as a string\r\n * @link http:\/\/php.net\/manual\/en\/exception.gettraceasstring.php\r\n * @return string the Exception stack trace as a string.\r\n *\/"
            },
            {
                "name": "__toString",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * String representation of the exception\r\n * @link http:\/\/php.net\/manual\/en\/exception.tostring.php\r\n * @return string the string representation of the exception.\r\n *\/"
            }
        ],
        "properties": [
            {
                "name": "message",
                "doc": null
            },
            {
                "name": "code",
                "doc": null
            },
            {
                "name": "file",
                "doc": null
            },
            {
                "name": "line",
                "doc": null
            }
        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "Imagick",
        "fqn": "\\Imagick",
        "type": 0,
        "extends": "",
        "methods": [
            {
                "name": "optimizeimagelayers",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Removes repeated portions of images to optimize\r\n * @link http:\/\/php.net\/manual\/en\/imagick.optimizeimagelayers.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "compareimagelayers",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "method",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the maximum bounding region between images\r\n * @link http:\/\/php.net\/manual\/en\/imagick.compareimagelayers.php\r\n * @param int $method <p>\r\n * One of the layer method constants.\r\n * <\/p>\r\n * @return Imagick <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "pingimageblob",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "image",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Quickly fetch attributes\r\n * @link http:\/\/php.net\/manual\/en\/imagick.pingimageblob.php\r\n * @param string $image <p>\r\n * A string containing the image.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "pingimagefile",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filehandle",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fileName",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Get basic image attributes in a lightweight manner\r\n * @link http:\/\/php.net\/manual\/en\/imagick.pingimagefile.php\r\n * @param resource $filehandle <p>\r\n * An open filehandle to the image.\r\n * <\/p>\r\n * @param string $fileName [optional] <p>\r\n * Optional filename for this image.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "transposeimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Creates a vertical mirror image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.transposeimage.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "transverseimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Creates a horizontal mirror image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.transverseimage.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "trimimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fuzz",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Remove edges from the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.trimimage.php\r\n * @param float $fuzz <p>\r\n * By default target must match a particular pixel color exactly.\r\n * However, in many cases two colors may differ by a small amount.\r\n * The fuzz member of image defines how much tolerance is acceptable\r\n * to consider two colors as the same. This parameter represents the variation\r\n * on the quantum range.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "waveimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "amplitude",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "length",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Applies wave filter to the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.waveimage.php\r\n * @param float $amplitude <p>\r\n * The amplitude of the wave.\r\n * <\/p>\r\n * @param float $length <p>\r\n * The length of the wave.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "vignetteimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "blackPoint",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "whitePoint",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Adds vignette filter to the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.vignetteimage.php\r\n * @param float $blackPoint <p>\r\n * The black point.\r\n * <\/p>\r\n * @param float $whitePoint <p>\r\n * The white point\r\n * <\/p>\r\n * @param int $x <p>\r\n * X offset of the ellipse\r\n * <\/p>\r\n * @param int $y <p>\r\n * Y offset of the ellipse\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "uniqueimagecolors",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Discards all but one of any pixel color\r\n * @link http:\/\/php.net\/manual\/en\/imagick.uniqueimagecolors.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimagematte",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Return if the image has a matte channel\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagematte.php\r\n * @return bool <b>TRUE<\/b> on success or <b>FALSE<\/b> on failure.\r\n *\/"
            },
            {
                "name": "setimagematte",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "matte",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image matte channel\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagematte.php\r\n * @param bool $matte <p>\r\n * True activates the matte channel and false disables it.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "adaptiveresizeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "bestfit",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Adaptively resize image with data dependent triangulation\r\n * @link http:\/\/php.net\/manual\/en\/imagick.adaptiveresizeimage.php\r\n * @param int $columns <p>\r\n * The number of columns in the scaled image.\r\n * <\/p>\r\n * @param int $rows <p>\r\n * The number of rows in the scaled image.\r\n * <\/p>\r\n * @param bool $bestfit [optional] <p>\r\n * Whether to fit the image inside a bounding box.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "sketchimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "angle",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Simulates a pencil sketch\r\n * @link http:\/\/php.net\/manual\/en\/imagick.sketchimage.php\r\n * @param float $radius <p>\r\n * The radius of the Gaussian, in pixels, not counting the center pixel\r\n * <\/p>\r\n * @param float $sigma <p>\r\n * The standard deviation of the Gaussian, in pixels.\r\n * <\/p>\r\n * @param float $angle <p>\r\n * Apply the effect along this angle.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "shadeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "gray",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "azimuth",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "elevation",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Creates a 3D effect\r\n * @link http:\/\/php.net\/manual\/en\/imagick.shadeimage.php\r\n * @param bool $gray <p>\r\n * A value other than zero shades the intensity of each pixel.\r\n * <\/p>\r\n * @param float $azimuth <p>\r\n * Defines the light source direction.\r\n * <\/p>\r\n * @param float $elevation <p>\r\n * Defines the light source direction.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getsizeoffset",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the size offset\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getsizeoffset.php\r\n * @return int the size offset associated with the Imagick object.\r\n *\/"
            },
            {
                "name": "setsizeoffset",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "offset",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the size and offset of the Imagick object\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setsizeoffset.php\r\n * @param int $columns <p>\r\n * The width in pixels.\r\n * <\/p>\r\n * @param int $rows <p>\r\n * The height in pixels.\r\n * <\/p>\r\n * @param int $offset <p>\r\n * The image offset.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "adaptiveblurimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_DEFAULT"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Adds adaptive blur filter to image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.adaptiveblurimage.php\r\n * @param float $radius <p>\r\n * The radius of the Gaussian, in pixels, not counting the center pixel.\r\n * Provide a value of 0 and the radius will be chosen automagically.\r\n * <\/p>\r\n * @param float $sigma <p>\r\n * The standard deviation of the Gaussian, in pixels.\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to <b>Imagick::CHANNEL_DEFAULT<\/b>. Refer to this list of channel constants\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "contraststretchimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "black_point",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "white_point",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_ALL"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Enhances the contrast of a color image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.contraststretchimage.php\r\n * @param float $black_point <p>\r\n * The black point.\r\n * <\/p>\r\n * @param float $white_point <p>\r\n * The white point.\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To\r\n * apply to more than one channel, combine channeltype constants using\r\n * bitwise operators. <b>Imagick::CHANNEL_ALL<\/b>. Refer to this\r\n * list of channel constants.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "adaptivesharpenimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_DEFAULT"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Adaptively sharpen the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.adaptivesharpenimage.php\r\n * @param float $radius <p>\r\n * The radius of the Gaussian, in pixels, not counting the center pixel. Use 0 for auto-select.\r\n * <\/p>\r\n * @param float $sigma <p>\r\n * The standard deviation of the Gaussian, in pixels.\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to <b>Imagick::CHANNEL_DEFAULT<\/b>. Refer to this list of channel constants\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "randomthresholdimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "low",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "high",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_ALL"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Creates a high-contrast, two-color image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.randomthresholdimage.php\r\n * @param float $low <p>\r\n * The low point\r\n * <\/p>\r\n * @param float $high <p>\r\n * The high point\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To\r\n * apply to more than one channel, combine channeltype constants using\r\n * bitwise operators. Refer to this\r\n * list of channel constants.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "roundcornersimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "xRounding",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "yRounding",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "strokeWidth",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "displace",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sizeCorrection",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * @param $xRounding\r\n * @param $yRounding\r\n * @param $strokeWidth [optional]\r\n * @param $displace [optional]\r\n * @param $sizeCorrection [optional]\r\n *\/"
            },
            {
                "name": "roundcorners",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x_rounding",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y_rounding",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "stroke_width",
                        "type": null,
                        "byRef": false,
                        "default": 10
                    },
                    {
                        "name": "displace",
                        "type": null,
                        "byRef": false,
                        "default": 5
                    },
                    {
                        "name": "size_correction",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Rounds image corners\r\n * @link http:\/\/php.net\/manual\/en\/imagick.roundcorners.php\r\n * @param float $x_rounding <p>\r\n * x rounding\r\n * <\/p>\r\n * @param float $y_rounding <p>\r\n * y rounding\r\n * <\/p>\r\n * @param float $stroke_width [optional] <p>\r\n * stroke width\r\n * <\/p>\r\n * @param float $displace [optional] <p>\r\n * image displace\r\n * <\/p>\r\n * @param float $size_correction [optional] <p>\r\n * size correction\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setiteratorindex",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "index",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Set the iterator position\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setiteratorindex.php\r\n * @param int $index <p>\r\n * The position to set the iterator to\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getiteratorindex",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the index of the current active image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getiteratorindex.php\r\n * @return int an integer containing the index of the image in the stack.\r\n *\/"
            },
            {
                "name": "transformimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "crop",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "geometry",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Convenience method for setting crop size and the image geometry\r\n * @link http:\/\/php.net\/manual\/en\/imagick.transformimage.php\r\n * @param string $crop <p>\r\n * A crop geometry string. This geometry defines a subregion of the image to crop.\r\n * <\/p>\r\n * @param string $geometry <p>\r\n * An image geometry string. This geometry defines the final size of the image.\r\n * <\/p>\r\n * @return Imagick <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimageopacity",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "opacity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image opacity level\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimageopacity.php\r\n * @param float $opacity <p>\r\n * The level of transparency: 1.0 is fully opaque and 0.0 is fully\r\n * transparent.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "orderedposterizeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "threshold_map",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_ALL"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.2.2)<br\/>\r\n * Performs an ordered dither\r\n * @link http:\/\/php.net\/manual\/en\/imagick.orderedposterizeimage.php\r\n * @param string $threshold_map <p>\r\n * A string containing the name of the threshold dither map to use\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To\r\n * apply to more than one channel, combine channeltype constants using\r\n * bitwise operators. Refer to this\r\n * list of channel constants.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "polaroidimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "properties",
                        "type": "ImagickDraw",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "angle",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Simulates a Polaroid picture\r\n * @link http:\/\/php.net\/manual\/en\/imagick.polaroidimage.php\r\n * @param ImagickDraw $properties <p>\r\n * The polaroid properties\r\n * <\/p>\r\n * @param float $angle <p>\r\n * The polaroid angle\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimageproperty",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the named image property\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimageproperty.php\r\n * @param string $name <p>\r\n * name of the property (for example Exif:DateTime)\r\n * <\/p>\r\n * @return string a string containing the image property, false if a\r\n * property with the given name does not exist.\r\n *\/"
            },
            {
                "name": "setimageproperty",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets an image property\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimageproperty.php\r\n * @param string $name\r\n * @param string $value\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimageinterpolatemethod",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "method",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image interpolate pixel method\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimageinterpolatemethod.php\r\n * @param int $method <p>\r\n * The method is one of the <b>Imagick::INTERPOLATE_*<\/b> constants\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimageinterpolatemethod",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the interpolation method\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimageinterpolatemethod.php\r\n * @return int the interpolate method on success.\r\n *\/"
            },
            {
                "name": "linearstretchimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "blackPoint",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "whitePoint",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Stretches with saturation the image intensity\r\n * @link http:\/\/php.net\/manual\/en\/imagick.linearstretchimage.php\r\n * @param float $blackPoint <p>\r\n * The image black point\r\n * <\/p>\r\n * @param float $whitePoint <p>\r\n * The image white point\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimagelength",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the image length in bytes\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagelength.php\r\n * @return int an int containing the current image size.\r\n *\/"
            },
            {
                "name": "extentimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Set image size\r\n * @link http:\/\/php.net\/manual\/en\/imagick.extentimage.php\r\n * @param int $width <p>\r\n * The new width\r\n * <\/p>\r\n * @param int $height <p>\r\n * The new height\r\n * <\/p>\r\n * @param int $x <p>\r\n * X position for the new size\r\n * <\/p>\r\n * @param int $y <p>\r\n * Y position for the new size\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimageorientation",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the image orientation\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimageorientation.php\r\n * @return int an int on success.\r\n *\/"
            },
            {
                "name": "setimageorientation",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "orientation",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image orientation\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimageorientation.php\r\n * @param int $orientation <p>\r\n * One of the orientation constants\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "paintfloodfillimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fill",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fuzz",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "bordercolor",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_ALL"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.1.0)<br\/>\r\n * Changes the color value of any pixel that matches target\r\n * @link http:\/\/php.net\/manual\/en\/imagick.paintfloodfillimage.php\r\n * @param mixed $fill <p>\r\n * ImagickPixel object or a string containing the fill color\r\n * <\/p>\r\n * @param float $fuzz <p>\r\n * The amount of fuzz. For example, set fuzz to 10 and the color red at\r\n * intensities of 100 and 102 respectively are now interpreted as the\r\n * same color for the purposes of the floodfill.\r\n * <\/p>\r\n * @param mixed $bordercolor <p>\r\n * ImagickPixel object or a string containing the border color\r\n * <\/p>\r\n * @param int $x <p>\r\n * X start position of the floodfill\r\n * <\/p>\r\n * @param int $y <p>\r\n * Y start position of the floodfill\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to <b>Imagick::CHANNEL_DEFAULT<\/b>. Refer to this list of channel constants\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "clutimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "lookup_table",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_DEFAULT"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Replaces colors in the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.clutimage.php\r\n * @param Imagick $lookup_table <p>\r\n * Imagick object containing the color lookup table\r\n * <\/p>\r\n * @param float $channel [optional] <p>\r\n * The Channeltype\r\n * constant. When not supplied, default channels are replaced.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimageproperties",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "pattern",
                        "type": null,
                        "byRef": false,
                        "default": "*"
                    },
                    {
                        "name": "only_names",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the image properties\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimageproperties.php\r\n * @param string $pattern [optional] <p>\r\n * The pattern for property names.\r\n * <\/p>\r\n * @param bool $only_names [optional] <p>\r\n * Whether to return only property names. If <b>FALSE<\/b> then also the values are returned\r\n * <\/p>\r\n * @return array an array containing the image properties or property names.\r\n *\/"
            },
            {
                "name": "getimageprofiles",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "pattern",
                        "type": null,
                        "byRef": false,
                        "default": "*"
                    },
                    {
                        "name": "only_names",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the image profiles\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimageprofiles.php\r\n * @param string $pattern [optional] <p>\r\n * The pattern for profile names.\r\n * <\/p>\r\n * @param bool $only_names [optional] <p>\r\n * Whether to return only profile names. If <b>FALSE<\/b> then values are returned as well\r\n * <\/p>\r\n * @return array an array containing the image profiles or profile names.\r\n *\/"
            },
            {
                "name": "distortimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "method",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "arguments",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "bestfit",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.1)<br\/>\r\n * Distorts an image using various distortion methods\r\n * @link http:\/\/php.net\/manual\/en\/imagick.distortimage.php\r\n * @param int $method <p>\r\n * The method of image distortion. See distortion constants\r\n * <\/p>\r\n * @param array $arguments <p>\r\n * The arguments for this distortion method\r\n * <\/p>\r\n * @param bool $bestfit <p>\r\n * Attempt to resize destination to fit distorted source\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "writeimagefile",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filehandle",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Writes an image to a filehandle\r\n * @link http:\/\/php.net\/manual\/en\/imagick.writeimagefile.php\r\n * @param resource $filehandle <p>\r\n * Filehandle where to write the image\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "writeimagesfile",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filehandle",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Writes frames to a filehandle\r\n * @link http:\/\/php.net\/manual\/en\/imagick.writeimagesfile.php\r\n * @param resource $filehandle <p>\r\n * Filehandle where to write the images\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "resetimagepage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "page",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Reset image page\r\n * @link http:\/\/php.net\/manual\/en\/imagick.resetimagepage.php\r\n * @param string $page <p>\r\n * The page definition. For example 7168x5147+0+0\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimageclipmask",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "clip_mask",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Sets image clip mask\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimageclipmask.php\r\n * @param Imagick $clip_mask <p>\r\n * The Imagick object containing the clip mask\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimageclipmask",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Gets image clip mask\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimageclipmask.php\r\n * @return Imagick an Imagick object containing the clip mask.\r\n *\/"
            },
            {
                "name": "animateimages",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x_server",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Animates an image or images\r\n * @link http:\/\/php.net\/manual\/en\/imagick.animateimages.php\r\n * @param string $x_server <p>\r\n * X server address\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "recolorimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "matrix",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Recolors image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.recolorimage.php\r\n * @param array $matrix <p>\r\n * The matrix containing the color values\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setfont",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "font",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.1.0)<br\/>\r\n * Sets font\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setfont.php\r\n * @param string $font <p>\r\n * Font name or a filename\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getfont",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.1.0)<br\/>\r\n * Gets font\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getfont.php\r\n * @return string the string containing the font name or <b>FALSE<\/b> if not font is set.\r\n *\/"
            },
            {
                "name": "setpointsize",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "point_size",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.1.0)<br\/>\r\n * Sets point size\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setpointsize.php\r\n * @param float $point_size <p>\r\n * Point size\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getpointsize",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Gets point size\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getpointsize.php\r\n * @return float a float containing the point size.\r\n *\/"
            },
            {
                "name": "mergeimagelayers",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "layer_method",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.1.0)<br\/>\r\n * Merges image layers\r\n * @link http:\/\/php.net\/manual\/en\/imagick.mergeimagelayers.php\r\n * @param int $layer_method <p>\r\n * One of the <b>Imagick::LAYERMETHOD_*<\/b> constants\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagealphachannel",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "mode",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Sets image alpha channel\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagealphachannel.php\r\n * @param int $mode <p>\r\n * One of the <b>Imagick::ALPHACHANNEL_*<\/b> constants\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "floodfillpaintimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fill",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fuzz",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "target",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "invert",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_DEFAULT"
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Changes the color value of any pixel that matches target\r\n * @link http:\/\/php.net\/manual\/en\/imagick.floodfillpaintimage.php\r\n * @param mixed $fill <p>\r\n * ImagickPixel object or a string containing the fill color\r\n * <\/p>\r\n * @param float $fuzz <p>\r\n * The amount of fuzz. For example, set fuzz to 10 and the color red at intensities of 100 and 102 respectively are now interpreted as the same color.\r\n * <\/p>\r\n * @param mixed $target <p>\r\n * ImagickPixel object or a string containing the target color to paint\r\n * <\/p>\r\n * @param int $x <p>\r\n * X start position of the floodfill\r\n * <\/p>\r\n * @param int $y <p>\r\n * Y start position of the floodfill\r\n * <\/p>\r\n * @param bool $invert <p>\r\n * If <b>TRUE<\/b> paints any pixel that does not match the target color.\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to <b>Imagick::CHANNEL_DEFAULT<\/b>. Refer to this list of channel constants\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "opaquepaintimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "target",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fill",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fuzz",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "invert",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_DEFAULT"
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Changes the color value of any pixel that matches target\r\n * @link http:\/\/php.net\/manual\/en\/imagick.opaquepaintimage.php\r\n * @param mixed $target <p>\r\n * ImagickPixel object or a string containing the color to change\r\n * <\/p>\r\n * @param mixed $fill <p>\r\n * The replacement color\r\n * <\/p>\r\n * @param float $fuzz <p>\r\n * The amount of fuzz. For example, set fuzz to 10 and the color red at intensities of 100 and 102 respectively are now interpreted as the same color.\r\n * <\/p>\r\n * @param bool $invert <p>\r\n * If <b>TRUE<\/b> paints any pixel that does not match the target color.\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to <b>Imagick::CHANNEL_DEFAULT<\/b>. Refer to this list of channel constants\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "transparentpaintimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "target",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "alpha",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fuzz",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "invert",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Paints pixels transparent\r\n * @link http:\/\/php.net\/manual\/en\/imagick.transparentpaintimage.php\r\n * @param mixed $target <p>\r\n * The target color to paint\r\n * <\/p>\r\n * @param float $alpha <p>\r\n * The level of transparency: 1.0 is fully opaque and 0.0 is fully transparent.\r\n * <\/p>\r\n * @param float $fuzz <p>\r\n * The amount of fuzz. For example, set fuzz to 10 and the color red at intensities of 100 and 102 respectively are now interpreted as the same color.\r\n * <\/p>\r\n * @param bool $invert <p>\r\n * If <b>TRUE<\/b> paints any pixel that does not match the target color.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "liquidrescaleimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "delta_x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rigidity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Animates an image or images\r\n * @link http:\/\/php.net\/manual\/en\/imagick.liquidrescaleimage.php\r\n * @param int $width <p>\r\n * The width of the target size\r\n * <\/p>\r\n * @param int $height <p>\r\n * The height of the target size\r\n * <\/p>\r\n * @param float $delta_x <p>\r\n * How much the seam can traverse on x-axis.\r\n * Passing 0 causes the seams to be straight.\r\n * <\/p>\r\n * @param float $rigidity <p>\r\n * Introduces a bias for non-straight seams. This parameter is\r\n * typically 0.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "encipherimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "passphrase",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Enciphers an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.encipherimage.php\r\n * @param string $passphrase <p>\r\n * The passphrase\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "decipherimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "passphrase",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Deciphers an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.decipherimage.php\r\n * @param string $passphrase <p>\r\n * The passphrase\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setgravity",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "gravity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Sets the gravity\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setgravity.php\r\n * @param int $gravity <p>\r\n * The gravity property. Refer to the list of\r\n * gravity constants.\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "getgravity",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Gets the gravity\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getgravity.php\r\n * @return int the gravity property. Refer to the list of\r\n * gravity constants.\r\n *\/"
            },
            {
                "name": "getimagechannelrange",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.2.1)<br\/>\r\n * Gets channel range\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagechannelrange.php\r\n * @param int $channel <p>\r\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to <b>Imagick::CHANNEL_DEFAULT<\/b>. Refer to this list of channel constants\r\n * <\/p>\r\n * @return array an array containing minima and maxima values of the channel(s).\r\n *\/"
            },
            {
                "name": "getimagealphachannel",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Gets the image alpha channel\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagealphachannel.php\r\n * @return int a constant defining the current alpha channel value. Refer to this\r\n * list of alpha channel constants.\r\n *\/"
            },
            {
                "name": "getimagechanneldistortions",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "reference",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "metric",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_DEFAULT"
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Gets channel distortions\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagechanneldistortions.php\r\n * @param Imagick $reference <p>\r\n * Imagick object containing the reference image\r\n * <\/p>\r\n * @param int $metric <p>\r\n * Refer to this list of metric type constants.\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to <b>Imagick::CHANNEL_DEFAULT<\/b>. Refer to this list of channel constants\r\n * <\/p>\r\n * @return float a double describing the channel distortion.\r\n *\/"
            },
            {
                "name": "setimagegravity",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "gravity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Sets the image gravity\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagegravity.php\r\n * @param int $gravity <p>\r\n * The gravity property. Refer to the list of\r\n * gravity constants.\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "getimagegravity",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Gets the image gravity\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagegravity.php\r\n * @return int the images gravity property. Refer to the list of\r\n * gravity constants.\r\n *\/"
            },
            {
                "name": "importimagepixels",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "map",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "storage",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "pixels",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Imports image pixels\r\n * @link http:\/\/php.net\/manual\/en\/imagick.importimagepixels.php\r\n * @param int $x <p>\r\n * The image x position\r\n * <\/p>\r\n * @param int $y <p>\r\n * The image y position\r\n * <\/p>\r\n * @param int $width <p>\r\n * The image width\r\n * <\/p>\r\n * @param int $height <p>\r\n * The image height\r\n * <\/p>\r\n * @param string $map <p>\r\n * Map of pixel ordering as a string. This can be for example RGB.\r\n * The value can be any combination or order of R = red, G = green, B = blue, A = alpha (0 is transparent),\r\n * O = opacity (0 is opaque), C = cyan, Y = yellow, M = magenta, K = black, I = intensity (for grayscale), P = pad.\r\n * <\/p>\r\n * @param int $storage <p>\r\n * The pixel storage method.\r\n * Refer to this list of pixel constants.\r\n * <\/p>\r\n * @param array $pixels <p>\r\n * The array of pixels\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "deskewimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "threshold",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Removes skew from the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.deskewimage.php\r\n * @param float $threshold <p>\r\n * Deskew threshold\r\n * <\/p>\r\n * @return bool\r\n *\/"
            },
            {
                "name": "segmentimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "COLORSPACE",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "cluster_threshold",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "smooth_threshold",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "verbose",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Segments an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.segmentimage.php\r\n * @param int $COLORSPACE <p>\r\n * One of the COLORSPACE constants.\r\n * <\/p>\r\n * @param float $cluster_threshold <p>\r\n * A percentage describing minimum number of pixels\r\n * contained in hexedra before it is considered valid.\r\n * <\/p>\r\n * @param float $smooth_threshold <p>\r\n * Eliminates noise from the histogram.\r\n * <\/p>\r\n * @param bool $verbose [optional] <p>\r\n * Whether to output detailed information about recognised classes.\r\n * <\/p>\r\n * @return bool\r\n *\/"
            },
            {
                "name": "sparsecolorimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "SPARSE_METHOD",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "arguments",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_DEFAULT"
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Interpolates colors\r\n * @link http:\/\/php.net\/manual\/en\/imagick.sparsecolorimage.php\r\n * @param int $SPARSE_METHOD <p>\r\n * Refer to this list of sparse method constants\r\n * <\/p>\r\n * @param array $arguments <p>\r\n * An array containing the coordinates.\r\n * The array is in format array(1,1, 2,45)\r\n * <\/p>\r\n * @param int $channel [optional]\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "remapimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "replacement",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "DITHER",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Remaps image colors\r\n * @link http:\/\/php.net\/manual\/en\/imagick.remapimage.php\r\n * @param Imagick $replacement <p>\r\n * An Imagick object containing the replacement colors\r\n * <\/p>\r\n * @param int $DITHER <p>\r\n * Refer to this list of dither method constants\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "exportimagepixels",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "map",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "STORAGE",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Exports raw image pixels\r\n * @link http:\/\/php.net\/manual\/en\/imagick.exportimagepixels.php\r\n * @param int $x <p>\r\n * X-coordinate of the exported area\r\n * <\/p>\r\n * @param int $y <p>\r\n * Y-coordinate of the exported area\r\n * <\/p>\r\n * @param int $width <p>\r\n * Width of the exported aread\r\n * <\/p>\r\n * @param int $height <p>\r\n * Height of the exported area\r\n * <\/p>\r\n * @param string $map <p>\r\n * Ordering of the exported pixels. For example \"RGB\".\r\n * Valid characters for the map are R, G, B, A, O, C, Y, M, K, I and P.\r\n * <\/p>\r\n * @param int $STORAGE <p>\r\n * Refer to this list of pixel type constants\r\n * <\/p>\r\n * @return array an array containing the pixels values.\r\n *\/"
            },
            {
                "name": "getimagechannelkurtosis",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_DEFAULT"
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * The getImageChannelKurtosis purpose\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagechannelkurtosis.php\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to <b>Imagick::CHANNEL_DEFAULT<\/b>. Refer to this list of channel constants\r\n * <\/p>\r\n * @return array an array with kurtosis and skewness\r\n * members.\r\n *\/"
            },
            {
                "name": "functionimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "function",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "arguments",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_DEFAULT"
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Applies a function on the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.functionimage.php\r\n * @param int $function <p>\r\n * Refer to this list of function constants\r\n * <\/p>\r\n * @param array $arguments <p>\r\n * Array of arguments to pass to this function.\r\n * <\/p>\r\n * @param int $channel [optional]\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "transformimagecolorspace",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "COLORSPACE",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * @param $COLORSPACE\r\n *\/"
            },
            {
                "name": "haldclutimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "clut",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_DEFAULT"
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Replaces colors in the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.haldclutimage.php\r\n * @param Imagick $clut <p>\r\n * Imagick object containing the Hald lookup image.\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to <b>Imagick::CHANNEL_DEFAULT<\/b>. Refer to this list of channel constants\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "autolevelimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "CHANNEL",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * @param $CHANNEL [optional]\r\n *\/"
            },
            {
                "name": "blueshiftimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "factor",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * @param $factor [optional]\r\n *\/"
            },
            {
                "name": "getimageartifact",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "artifact",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Get image artifact\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimageartifact.php\r\n * @param string $artifact <p>\r\n * The name of the artifact\r\n * <\/p>\r\n * @return string the artifact value on success.\r\n *\/"
            },
            {
                "name": "setimageartifact",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "artifact",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Set image artifact\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimageartifact.php\r\n * @param string $artifact <p>\r\n * The name of the artifact\r\n * <\/p>\r\n * @param string $value <p>\r\n * The value of the artifact\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "deleteimageartifact",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "artifact",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Delete image artifact\r\n * @link http:\/\/php.net\/manual\/en\/imagick.deleteimageartifact.php\r\n * @param string $artifact <p>\r\n * The name of the artifact to delete\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getcolorspace",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 0.9.10-0.9.9)<br\/>\r\n * Gets the colorspace\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getcolorspace.php\r\n * @return int an integer which can be compared against COLORSPACE constants.\r\n *\/"
            },
            {
                "name": "setcolorspace",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "COLORSPACE",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Set colorspace\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setcolorspace.php\r\n * @param int $COLORSPACE <p>\r\n * One of the COLORSPACE constants\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "clampimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "CHANNEL",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * @param $CHANNEL [optional]\r\n *\/"
            },
            {
                "name": "smushimages",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "stack",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "offset",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * @param $stack\r\n * @param $offset\r\n *\/"
            },
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "files",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * The Imagick constructor\r\n * @link http:\/\/php.net\/manual\/en\/imagick.construct.php\r\n * @param mixed $files <p>\r\n * The path to an image to load or an array of paths. Paths can include\r\n * wildcards for file names, or can be URLs.\r\n * <\/p>\r\n *\/"
            },
            {
                "name": "__tostring",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "count",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getpixeliterator",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns a MagickPixelIterator\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getpixeliterator.php\r\n * @return ImagickPixelIterator an ImagickPixelIterator on success.\r\n *\/"
            },
            {
                "name": "getpixelregioniterator",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Get an ImagickPixelIterator for an image section\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getpixelregioniterator.php\r\n * @param int $x <p>\r\n * The x-coordinate of the region.\r\n * <\/p>\r\n * @param int $y <p>\r\n * The y-coordinate of the region.\r\n * <\/p>\r\n * @param int $columns <p>\r\n * The width of the region.\r\n * <\/p>\r\n * @param int $rows <p>\r\n * The height of the region.\r\n * <\/p>\r\n * @return ImagickPixelIterator an ImagickPixelIterator for an image section.\r\n *\/"
            },
            {
                "name": "readimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filename",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 0.9.0-0.9.9)<br\/>\r\n * Reads image from filename\r\n * @link http:\/\/php.net\/manual\/en\/imagick.readimage.php\r\n * @param string $filename\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "readimages",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filenames",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * @param $filenames\r\n *\/"
            },
            {
                "name": "readimageblob",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "image",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "filename",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Reads image from a binary string\r\n * @link http:\/\/php.net\/manual\/en\/imagick.readimageblob.php\r\n * @param string $image\r\n * @param string $filename [optional]\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimageformat",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "format",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the format of a particular image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimageformat.php\r\n * @param string $format <p>\r\n * String presentation of the image format. Format support\r\n * depends on the ImageMagick installation.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "scaleimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "cols",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "bestfit",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Scales the size of an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.scaleimage.php\r\n * @param int $cols\r\n * @param int $rows\r\n * @param bool $bestfit [optional]\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "writeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filename",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 0.9.0-0.9.9)<br\/>\r\n * Writes an image to the specified filename\r\n * @link http:\/\/php.net\/manual\/en\/imagick.writeimage.php\r\n * @param string $filename [optional] <p>\r\n * Filename where to write the image. The extension of the filename\r\n * defines the type of the file.\r\n * Format can be forced regardless of file extension using format: prefix,\r\n * for example \"jpg:test.png\".\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "writeimages",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filename",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "adjoin",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 0.9.0-0.9.9)<br\/>\r\n * Writes an image or image sequence\r\n * @link http:\/\/php.net\/manual\/en\/imagick.writeimages.php\r\n * @param string $filename\r\n * @param bool $adjoin\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "blurimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Adds blur filter to image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.blurimage.php\r\n * @param float $radius <p>\r\n * Blur radius\r\n * <\/p>\r\n * @param float $sigma <p>\r\n * Standard deviation\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * The Channeltype\r\n * constant. When not supplied, all channels are blurred.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "thumbnailimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "bestfit",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "fill",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Changes the size of an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.thumbnailimage.php\r\n * @param int $columns <p>\r\n * Image width\r\n * <\/p>\r\n * @param int $rows <p>\r\n * Image height\r\n * <\/p>\r\n * @param bool $bestfit [optional] <p>\r\n * Whether to force maximum values\r\n * <\/p>\r\n * @param bool $fill [optional]\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "cropthumbnailimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Creates a crop thumbnail\r\n * @link http:\/\/php.net\/manual\/en\/imagick.cropthumbnailimage.php\r\n * @param int $width <p>\r\n * The width of the thumbnail\r\n * <\/p>\r\n * @param int $height <p>\r\n * The Height of the thumbnail\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimagefilename",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the filename of a particular image in a sequence\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagefilename.php\r\n * @return string a string with the filename of the image.\r\n *\/"
            },
            {
                "name": "setimagefilename",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filename",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the filename of a particular image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagefilename.php\r\n * @param string $filename\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimageformat",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the format of a particular image in a sequence\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimageformat.php\r\n * @return string a string containing the image format on success.\r\n *\/"
            },
            {
                "name": "getimagemimetype",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "removeimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Removes an image from the image list\r\n * @link http:\/\/php.net\/manual\/en\/imagick.removeimage.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "destroy",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Destroys the Imagick object\r\n * @link http:\/\/php.net\/manual\/en\/imagick.destroy.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "clear",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Clears all resources associated to Imagick object\r\n * @link http:\/\/php.net\/manual\/en\/imagick.clear.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimagesize",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the image length in bytes\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagesize.php\r\n * @return int an int containing the current image size.\r\n *\/"
            },
            {
                "name": "getimageblob",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the image sequence as a blob\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimageblob.php\r\n * @return string a string containing the image.\r\n *\/"
            },
            {
                "name": "getimagesblob",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns all image sequences as a blob\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagesblob.php\r\n * @return string a string containing the images. On failure, throws\r\n * ImagickException.\r\n *\/"
            },
            {
                "name": "setfirstiterator",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the Imagick iterator to the first image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setfirstiterator.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setlastiterator",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.1)<br\/>\r\n * Sets the Imagick iterator to the last image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setlastiterator.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "resetiterator",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "previousimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Move to the previous image in the object\r\n * @link http:\/\/php.net\/manual\/en\/imagick.previousimage.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "nextimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Moves to the next image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.nextimage.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "haspreviousimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Checks if the object has a previous image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.haspreviousimage.php\r\n * @return bool <b>TRUE<\/b> if the object has more images when traversing the list in the\r\n * reverse direction, returns <b>FALSE<\/b> if there are none.\r\n *\/"
            },
            {
                "name": "hasnextimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Checks if the object has more images\r\n * @link http:\/\/php.net\/manual\/en\/imagick.hasnextimage.php\r\n * @return bool <b>TRUE<\/b> if the object has more images when traversing the list in the\r\n * forward direction, returns <b>FALSE<\/b> if there are none.\r\n *\/"
            },
            {
                "name": "setimageindex",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "index",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Set the iterator position\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimageindex.php\r\n * @param int $index <p>\r\n * The position to set the iterator to\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimageindex",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the index of the current active image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimageindex.php\r\n * @return int an integer containing the index of the image in the stack.\r\n *\/"
            },
            {
                "name": "commentimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "comment",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Adds a comment to your image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.commentimage.php\r\n * @param string $comment <p>\r\n * The comment to add\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "cropimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Extracts a region of the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.cropimage.php\r\n * @param int $width <p>\r\n * The width of the crop\r\n * <\/p>\r\n * @param int $height <p>\r\n * The height of the crop\r\n * <\/p>\r\n * @param int $x <p>\r\n * The X coordinate of the cropped region's top left corner\r\n * <\/p>\r\n * @param int $y <p>\r\n * The Y coordinate of the cropped region's top left corner\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "labelimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "label",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Adds a label to an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.labelimage.php\r\n * @param string $label <p>\r\n * The label to add\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimagegeometry",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the width and height as an associative array\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagegeometry.php\r\n * @return array an array with the width\/height of the image.\r\n *\/"
            },
            {
                "name": "drawimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "draw",
                        "type": "ImagickDraw",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Renders the ImagickDraw object on the current image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.drawimage.php\r\n * @param ImagickDraw $draw <p>\r\n * The drawing operations to render on the image.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagecompressionquality",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "quality",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Sets the image compression quality\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagecompressionquality.php\r\n * @param int $quality <p>\r\n * The image compression quality as an integer\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimagecompressionquality",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.2.2)<br\/>\r\n * Gets the current image's compression quality\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagecompressionquality.php\r\n * @return int integer describing the images compression quality\r\n *\/"
            },
            {
                "name": "annotateimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "draw_settings",
                        "type": "ImagickDraw",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "angle",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "text",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Annotates an image with text\r\n * @link http:\/\/php.net\/manual\/en\/imagick.annotateimage.php\r\n * @param ImagickDraw $draw_settings <p>\r\n * The ImagickDraw object that contains settings for drawing the text\r\n * <\/p>\r\n * @param float $x <p>\r\n * Horizontal offset in pixels to the left of text\r\n * <\/p>\r\n * @param float $y <p>\r\n * Vertical offset in pixels to the baseline of text\r\n * <\/p>\r\n * @param float $angle <p>\r\n * The angle at which to write the text\r\n * <\/p>\r\n * @param string $text <p>\r\n * The string to draw\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "compositeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "composite_object",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "composite",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_ALL"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Composite one image onto another\r\n * @link http:\/\/php.net\/manual\/en\/imagick.compositeimage.php\r\n * @param Imagick $composite_object <p>\r\n * Imagick object which holds the composite image\r\n * <\/p>\r\n * @param int $composite\r\n * @param int $x <p>\r\n * The column offset of the composited image\r\n * <\/p>\r\n * @param int $y <p>\r\n * The row offset of the composited image\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To\r\n * apply to more than one channel, combine channeltype constants using\r\n * bitwise operators. Refer to this list of channel constants.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "modulateimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "brightness",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "saturation",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "hue",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Control the brightness, saturation, and hue\r\n * @link http:\/\/php.net\/manual\/en\/imagick.modulateimage.php\r\n * @param float $brightness\r\n * @param float $saturation\r\n * @param float $hue\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimagecolors",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the number of unique colors in the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagecolors.php\r\n * @return int <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "montageimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "draw",
                        "type": "ImagickDraw",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "tile_geometry",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "thumbnail_geometry",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "mode",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "frame",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Creates a composite image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.montageimage.php\r\n * @param ImagickDraw $draw <p>\r\n * The font name, size, and color are obtained from this object.\r\n * <\/p>\r\n * @param string $tile_geometry <p>\r\n * The number of tiles per row and page (e.g. 6x4+0+0).\r\n * <\/p>\r\n * @param string $thumbnail_geometry <p>\r\n * Preferred image size and border size of each thumbnail\r\n * (e.g. 120x120+4+3>).\r\n * <\/p>\r\n * @param int $mode <p>\r\n * Thumbnail framing mode, see Montage Mode constants.\r\n * <\/p>\r\n * @param string $frame <p>\r\n * Surround the image with an ornamental border (e.g. 15x15+3+3). The\r\n * frame color is that of the thumbnail's matte color.\r\n * <\/p>\r\n * @return Imagick <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "identifyimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "appendRawOutput",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Identifies an image and fetches attributes\r\n * @link http:\/\/php.net\/manual\/en\/imagick.identifyimage.php\r\n * @param bool $appendRawOutput [optional]\r\n * @return array Identifies an image and returns the attributes. Attributes include\r\n * the image width, height, size, and others.\r\n *\/"
            },
            {
                "name": "thresholdimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "threshold",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_ALL"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Changes the value of individual pixels based on a threshold\r\n * @link http:\/\/php.net\/manual\/en\/imagick.thresholdimage.php\r\n * @param float $threshold\r\n * @param int $channel [optional]\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "adaptivethresholdimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "offset",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Selects a threshold for each pixel based on a range of intensity\r\n * @link http:\/\/php.net\/manual\/en\/imagick.adaptivethresholdimage.php\r\n * @param int $width <p>\r\n * Width of the local neighborhood.\r\n * <\/p>\r\n * @param int $height <p>\r\n * Height of the local neighborhood.\r\n * <\/p>\r\n * @param int $offset <p>\r\n * The mean offset\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "blackthresholdimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "threshold",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Forces all pixels below the threshold into black\r\n * @link http:\/\/php.net\/manual\/en\/imagick.blackthresholdimage.php\r\n * @param mixed $threshold <p>\r\n * The threshold below which everything turns black\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "whitethresholdimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "threshold",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Force all pixels above the threshold into white\r\n * @link http:\/\/php.net\/manual\/en\/imagick.whitethresholdimage.php\r\n * @param mixed $threshold\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "appendimages",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "stack",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Append a set of images\r\n * @link http:\/\/php.net\/manual\/en\/imagick.appendimages.php\r\n * @param bool $stack [optional] <p>\r\n * Whether to stack the images vertically.\r\n * By default (or if <b>FALSE<\/b> is specified) images are stacked left-to-right.\r\n * If <i>stack<\/i> is <b>TRUE<\/b>, images are stacked top-to-bottom.\r\n * <\/p>\r\n * @return Imagick Imagick instance on success.\r\n *\/"
            },
            {
                "name": "charcoalimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Simulates a charcoal drawing\r\n * @link http:\/\/php.net\/manual\/en\/imagick.charcoalimage.php\r\n * @param float $radius <p>\r\n * The radius of the Gaussian, in pixels, not counting the center pixel\r\n * <\/p>\r\n * @param float $sigma <p>\r\n * The standard deviation of the Gaussian, in pixels\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "normalizeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_ALL"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Enhances the contrast of a color image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.normalizeimage.php\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To\r\n * apply to more than one channel, combine channeltype constants using\r\n * bitwise operators. Refer to this\r\n * list of channel constants.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "oilpaintimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Simulates an oil painting\r\n * @link http:\/\/php.net\/manual\/en\/imagick.oilpaintimage.php\r\n * @param float $radius <p>\r\n * The radius of the circular neighborhood.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "posterizeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "levels",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "dither",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Reduces the image to a limited number of color level\r\n * @link http:\/\/php.net\/manual\/en\/imagick.posterizeimage.php\r\n * @param int $levels\r\n * @param bool $dither\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "radialblurimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "angle",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_ALL"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Radial blurs an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.radialblurimage.php\r\n * @param float $angle\r\n * @param int $channel [optional]\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "raiseimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "raise",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Creates a simulated 3d button-like effect\r\n * @link http:\/\/php.net\/manual\/en\/imagick.raiseimage.php\r\n * @param int $width\r\n * @param int $height\r\n * @param int $x\r\n * @param int $y\r\n * @param bool $raise\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "resampleimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x_resolution",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y_resolution",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "filter",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "blur",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Resample image to desired resolution\r\n * @link http:\/\/php.net\/manual\/en\/imagick.resampleimage.php\r\n * @param float $x_resolution\r\n * @param float $y_resolution\r\n * @param int $filter\r\n * @param float $blur\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "resizeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "filter",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "blur",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "bestfit",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Scales an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.resizeimage.php\r\n * @param int $columns <p>\r\n * Width of the image\r\n * <\/p>\r\n * @param int $rows <p>\r\n * Height of the image\r\n * <\/p>\r\n * @param int $filter <p>\r\n * Refer to the list of filter constants.\r\n * <\/p>\r\n * @param float $blur <p>\r\n * The blur factor where &gt; 1 is blurry, &lt; 1 is sharp.\r\n * <\/p>\r\n * @param bool $bestfit [optional] <p>\r\n * Optional fit parameter.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "rollimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Offsets an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.rollimage.php\r\n * @param int $x <p>\r\n * The X offset.\r\n * <\/p>\r\n * @param int $y <p>\r\n * The Y offset.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "rotateimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "background",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "degrees",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Rotates an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.rotateimage.php\r\n * @param mixed $background <p>\r\n * The background color\r\n * <\/p>\r\n * @param float $degrees <p>\r\n * The number of degrees to rotate the image\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "sampleimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Scales an image with pixel sampling\r\n * @link http:\/\/php.net\/manual\/en\/imagick.sampleimage.php\r\n * @param int $columns\r\n * @param int $rows\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "solarizeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "threshold",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Applies a solarizing effect to the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.solarizeimage.php\r\n * @param int $threshold\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "shadowimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "opacity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Simulates an image shadow\r\n * @link http:\/\/php.net\/manual\/en\/imagick.shadowimage.php\r\n * @param float $opacity\r\n * @param float $sigma\r\n * @param int $x\r\n * @param int $y\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimageattribute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "key",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * @param $key\r\n * @param $value\r\n *\/"
            },
            {
                "name": "setimagebackgroundcolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "background",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image background color\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagebackgroundcolor.php\r\n * @param mixed $background\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagecompose",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "compose",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image composite operator\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagecompose.php\r\n * @param int $compose\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagecompression",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "compression",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image compression\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagecompression.php\r\n * @param int $compression <p>\r\n * One of the <b>COMPRESSION<\/b> constants\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagedelay",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "delay",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image delay\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagedelay.php\r\n * @param int $delay <p>\r\n * The amount of time expressed in 'ticks' that the image should be\r\n * displayed for. For animated GIFs there are 100 ticks per second, so a\r\n * value of 20 would be 20\/100 of a second aka 1\/5th of a second.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagedepth",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "depth",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image depth\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagedepth.php\r\n * @param int $depth\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagegamma",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "gamma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image gamma\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagegamma.php\r\n * @param float $gamma\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimageiterations",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "iterations",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image iterations\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimageiterations.php\r\n * @param int $iterations <p>\r\n * The number of iterations the image should loop over. Set to '0' to loop\r\n * continuously.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagemattecolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "matte",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image matte color\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagemattecolor.php\r\n * @param mixed $matte\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagepage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the page geometry of the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagepage.php\r\n * @param int $width\r\n * @param int $height\r\n * @param int $x\r\n * @param int $y\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimageprogressmonitor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filename",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * @param $filename\r\n *\/"
            },
            {
                "name": "setimageresolution",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x_resolution",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y_resolution",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image resolution\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimageresolution.php\r\n * @param float $x_resolution\r\n * @param float $y_resolution\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagescene",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "scene",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image scene\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagescene.php\r\n * @param int $scene\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagetickspersecond",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "ticks_per_second",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image ticks-per-second\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagetickspersecond.php\r\n * @param int $ticks_per_second <p>\r\n * The duration for which an image should be displayed expressed in ticks\r\n * per second.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagetype",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "image_type",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image type\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagetype.php\r\n * @param int $image_type\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimageunits",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "units",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image units of resolution\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimageunits.php\r\n * @param int $units\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "sharpenimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_ALL"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sharpens an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.sharpenimage.php\r\n * @param float $radius\r\n * @param float $sigma\r\n * @param int $channel [optional]\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "shaveimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Shaves pixels from the image edges\r\n * @link http:\/\/php.net\/manual\/en\/imagick.shaveimage.php\r\n * @param int $columns\r\n * @param int $rows\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "shearimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "background",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x_shear",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y_shear",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Creating a parallelogram\r\n * @link http:\/\/php.net\/manual\/en\/imagick.shearimage.php\r\n * @param mixed $background <p>\r\n * The background color\r\n * <\/p>\r\n * @param float $x_shear <p>\r\n * The number of degrees to shear on the x axis\r\n * <\/p>\r\n * @param float $y_shear <p>\r\n * The number of degrees to shear on the y axis\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "spliceimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Splices a solid color into the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.spliceimage.php\r\n * @param int $width\r\n * @param int $height\r\n * @param int $x\r\n * @param int $y\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "pingimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filename",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Fetch basic attributes about the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.pingimage.php\r\n * @param string $filename <p>\r\n * The filename to read the information from.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "readimagefile",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filehandle",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fileName",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Reads image from open filehandle\r\n * @link http:\/\/php.net\/manual\/en\/imagick.readimagefile.php\r\n * @param resource $filehandle\r\n * @param string $fileName [optional]\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "displayimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "servername",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Displays an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.displayimage.php\r\n * @param string $servername <p>\r\n * The X server name\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "displayimages",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "servername",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Displays an image or image sequence\r\n * @link http:\/\/php.net\/manual\/en\/imagick.displayimages.php\r\n * @param string $servername <p>\r\n * The X server name\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "spreadimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Randomly displaces each pixel in a block\r\n * @link http:\/\/php.net\/manual\/en\/imagick.spreadimage.php\r\n * @param float $radius\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "swirlimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "degrees",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Swirls the pixels about the center of the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.swirlimage.php\r\n * @param float $degrees\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "stripimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Strips an image of all profiles and comments\r\n * @link http:\/\/php.net\/manual\/en\/imagick.stripimage.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "queryformats",
                "type": 9,
                "byRef": false,
                "params": [
                    {
                        "name": "pattern",
                        "type": null,
                        "byRef": false,
                        "default": "*"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns formats supported by Imagick\r\n * @link http:\/\/php.net\/manual\/en\/imagick.queryformats.php\r\n * @param string $pattern [optional]\r\n * @return array an array containing the formats supported by Imagick.\r\n *\/"
            },
            {
                "name": "queryfonts",
                "type": 9,
                "byRef": false,
                "params": [
                    {
                        "name": "pattern",
                        "type": null,
                        "byRef": false,
                        "default": "*"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the configured fonts\r\n * @link http:\/\/php.net\/manual\/en\/imagick.queryfonts.php\r\n * @param string $pattern [optional] <p>\r\n * The query pattern\r\n * <\/p>\r\n * @return array an array containing the configured fonts.\r\n *\/"
            },
            {
                "name": "queryfontmetrics",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "properties",
                        "type": "ImagickDraw",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "text",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "multiline",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns an array representing the font metrics\r\n * @link http:\/\/php.net\/manual\/en\/imagick.queryfontmetrics.php\r\n * @param ImagickDraw $properties <p>\r\n * ImagickDraw object containing font properties\r\n * <\/p>\r\n * @param string $text <p>\r\n * The text\r\n * <\/p>\r\n * @param bool $multiline [optional] <p>\r\n * Multiline parameter. If left empty it is autodetected\r\n * <\/p>\r\n * @return array a multi-dimensional array representing the font metrics.\r\n *\/"
            },
            {
                "name": "steganoimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "watermark_wand",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "offset",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Hides a digital watermark within the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.steganoimage.php\r\n * @param Imagick $watermark_wand\r\n * @param int $offset\r\n * @return Imagick <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "addnoiseimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "noise_type",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_DEFAULT"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Adds random noise to the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.addnoiseimage.php\r\n * @param int $noise_type <p>\r\n * The type of the noise. Refer to this list of\r\n * noise constants.\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to <b>Imagick::CHANNEL_DEFAULT<\/b>. Refer to this list of channel constants\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "motionblurimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "angle",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_DEFAULT"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Simulates motion blur\r\n * @link http:\/\/php.net\/manual\/en\/imagick.motionblurimage.php\r\n * @param float $radius <p>\r\n * The radius of the Gaussian, in pixels, not counting the center pixel.\r\n * <\/p>\r\n * @param float $sigma <p>\r\n * The standard deviation of the Gaussian, in pixels.\r\n * <\/p>\r\n * @param float $angle <p>\r\n * Apply the effect along this angle.\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To\r\n * apply to more than one channel, combine channeltype constants using\r\n * bitwise operators. Refer to this\r\n * list of channel constants.\r\n * The channel argument affects only if Imagick is compiled against ImageMagick version\r\n * 6.4.4 or greater.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "mosaicimages",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Forms a mosaic from images\r\n * @link http:\/\/php.net\/manual\/en\/imagick.mosaicimages.php\r\n * @return Imagick <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "morphimages",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "number_frames",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Method morphs a set of images\r\n * @link http:\/\/php.net\/manual\/en\/imagick.morphimages.php\r\n * @param int $number_frames <p>\r\n * The number of in-between images to generate.\r\n * <\/p>\r\n * @return Imagick This method returns a new Imagick object on success.\r\n * Throw an\r\n * <b>ImagickException<\/b> on error.\r\n *\/"
            },
            {
                "name": "minifyimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Scales an image proportionally to half its size\r\n * @link http:\/\/php.net\/manual\/en\/imagick.minifyimage.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "affinetransformimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "matrix",
                        "type": "ImagickDraw",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Transforms an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.affinetransformimage.php\r\n * @param ImagickDraw $matrix <p>\r\n * The affine matrix\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "averageimages",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Average a set of images\r\n * @link http:\/\/php.net\/manual\/en\/imagick.averageimages.php\r\n * @return Imagick a new Imagick object on success.\r\n *\/"
            },
            {
                "name": "borderimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "bordercolor",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Surrounds the image with a border\r\n * @link http:\/\/php.net\/manual\/en\/imagick.borderimage.php\r\n * @param mixed $bordercolor <p>\r\n * ImagickPixel object or a string containing the border color\r\n * <\/p>\r\n * @param int $width <p>\r\n * Border width\r\n * <\/p>\r\n * @param int $height <p>\r\n * Border height\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "chopimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Removes a region of an image and trims\r\n * @link http:\/\/php.net\/manual\/en\/imagick.chopimage.php\r\n * @param int $width <p>\r\n * Width of the chopped area\r\n * <\/p>\r\n * @param int $height <p>\r\n * Height of the chopped area\r\n * <\/p>\r\n * @param int $x <p>\r\n * X origo of the chopped area\r\n * <\/p>\r\n * @param int $y <p>\r\n * Y origo of the chopped area\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "clipimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Clips along the first path from the 8BIM profile\r\n * @link http:\/\/php.net\/manual\/en\/imagick.clipimage.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "clippathimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "pathname",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "inside",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Clips along the named paths from the 8BIM profile\r\n * @link http:\/\/php.net\/manual\/en\/imagick.clippathimage.php\r\n * @param string $pathname <p>\r\n * The name of the path\r\n * <\/p>\r\n * @param bool $inside <p>\r\n * If <b>TRUE<\/b> later operations take effect inside clipping path.\r\n * Otherwise later operations take effect outside clipping path.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "clipimagepath",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "pathname",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "inside",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * @param $pathname\r\n * @param $inside\r\n *\/"
            },
            {
                "name": "coalesceimages",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Composites a set of images\r\n * @link http:\/\/php.net\/manual\/en\/imagick.coalesceimages.php\r\n * @return Imagick a new Imagick object on success.\r\n *\/"
            },
            {
                "name": "colorfloodfillimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fill",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fuzz",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "bordercolor",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Changes the color value of any pixel that matches target\r\n * @link http:\/\/php.net\/manual\/en\/imagick.colorfloodfillimage.php\r\n * @param mixed $fill <p>\r\n * ImagickPixel object containing the fill color\r\n * <\/p>\r\n * @param float $fuzz <p>\r\n * The amount of fuzz. For example, set fuzz to 10 and the color red at\r\n * intensities of 100 and 102 respectively are now interpreted as the\r\n * same color for the purposes of the floodfill.\r\n * <\/p>\r\n * @param mixed $bordercolor <p>\r\n * ImagickPixel object containing the border color\r\n * <\/p>\r\n * @param int $x <p>\r\n * X start position of the floodfill\r\n * <\/p>\r\n * @param int $y <p>\r\n * Y start position of the floodfill\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "colorizeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "colorize",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "opacity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Blends the fill color with the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.colorizeimage.php\r\n * @param mixed $colorize <p>\r\n * ImagickPixel object or a string containing the colorize color\r\n * <\/p>\r\n * @param mixed $opacity <p>\r\n * ImagickPixel object or an float containing the opacity value.\r\n * 1.0 is fully opaque and 0.0 is fully transparent.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "compareimagechannels",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "image",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channelType",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "metricType",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the difference in one or more images\r\n * @link http:\/\/php.net\/manual\/en\/imagick.compareimagechannels.php\r\n * @param Imagick $image <p>\r\n * Imagick object containing the image to compare.\r\n * <\/p>\r\n * @param int $channelType <p>\r\n * Provide any channel constant that is valid for your channel mode. To\r\n * apply to more than one channel, combine channeltype constants using\r\n * bitwise operators. Refer to this\r\n * list of channel constants.\r\n * <\/p>\r\n * @param int $metricType <p>\r\n * One of the metric type constants.\r\n * <\/p>\r\n * @return array Array consisting of new_wand and\r\n * distortion.\r\n *\/"
            },
            {
                "name": "compareimages",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "compare",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "metric",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Compares an image to a reconstructed image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.compareimages.php\r\n * @param Imagick $compare <p>\r\n * An image to compare to.\r\n * <\/p>\r\n * @param int $metric <p>\r\n * Provide a valid metric type constant. Refer to this\r\n * list of metric constants.\r\n * <\/p>\r\n * @return array <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "contrastimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "sharpen",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Change the contrast of the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.contrastimage.php\r\n * @param bool $sharpen <p>\r\n * The sharpen value\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "combineimages",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "channelType",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Combines one or more images into a single image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.combineimages.php\r\n * @param int $channelType <p>\r\n * Provide any channel constant that is valid for your channel mode. To\r\n * apply to more than one channel, combine channeltype constants using\r\n * bitwise operators. Refer to this\r\n * list of channel constants.\r\n * <\/p>\r\n * @return Imagick <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "convolveimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "kernel",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_ALL"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Applies a custom convolution kernel to the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.convolveimage.php\r\n * @param array $kernel <p>\r\n * The convolution kernel\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To\r\n * apply to more than one channel, combine channeltype constants using\r\n * bitwise operators. Refer to this\r\n * list of channel constants.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "cyclecolormapimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "displace",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Displaces an image's colormap\r\n * @link http:\/\/php.net\/manual\/en\/imagick.cyclecolormapimage.php\r\n * @param int $displace <p>\r\n * The amount to displace the colormap.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "deconstructimages",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns certain pixel differences between images\r\n * @link http:\/\/php.net\/manual\/en\/imagick.deconstructimages.php\r\n * @return Imagick a new Imagick object on success.\r\n *\/"
            },
            {
                "name": "despeckleimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Reduces the speckle noise in an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.despeckleimage.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "edgeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Enhance edges within the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.edgeimage.php\r\n * @param float $radius <p>\r\n * The radius of the operation.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "embossimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns a grayscale image with a three-dimensional effect\r\n * @link http:\/\/php.net\/manual\/en\/imagick.embossimage.php\r\n * @param float $radius <p>\r\n * The radius of the effect\r\n * <\/p>\r\n * @param float $sigma <p>\r\n * The sigma of the effect\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "enhanceimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Improves the quality of a noisy image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.enhanceimage.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "equalizeimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Equalizes the image histogram\r\n * @link http:\/\/php.net\/manual\/en\/imagick.equalizeimage.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "evaluateimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "op",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "constant",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_ALL"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Applies an expression to an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.evaluateimage.php\r\n * @param int $op <p>\r\n * The evaluation operator\r\n * <\/p>\r\n * @param float $constant <p>\r\n * The value of the operator\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To\r\n * apply to more than one channel, combine channeltype constants using\r\n * bitwise operators. Refer to this\r\n * list of channel constants.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "flattenimages",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Merges a sequence of images\r\n * @link http:\/\/php.net\/manual\/en\/imagick.flattenimages.php\r\n * @return Imagick <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "flipimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Creates a vertical mirror image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.flipimage.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "flopimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Creates a horizontal mirror image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.flopimage.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "frameimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "matte_color",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "inner_bevel",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "outer_bevel",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Adds a simulated three-dimensional border\r\n * @link http:\/\/php.net\/manual\/en\/imagick.frameimage.php\r\n * @param mixed $matte_color <p>\r\n * ImagickPixel object or a string representing the matte color\r\n * <\/p>\r\n * @param int $width <p>\r\n * The width of the border\r\n * <\/p>\r\n * @param int $height <p>\r\n * The height of the border\r\n * <\/p>\r\n * @param int $inner_bevel <p>\r\n * The inner bevel width\r\n * <\/p>\r\n * @param int $outer_bevel <p>\r\n * The outer bevel width\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "fximage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "expression",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_ALL"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Evaluate expression for each pixel in the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.fximage.php\r\n * @param string $expression <p>\r\n * The expression.\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To\r\n * apply to more than one channel, combine channeltype constants using\r\n * bitwise operators. Refer to this\r\n * list of channel constants.\r\n * <\/p>\r\n * @return Imagick <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "gammaimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "gamma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_ALL"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gamma-corrects an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.gammaimage.php\r\n * @param float $gamma <p>\r\n * The amount of gamma-correction.\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To\r\n * apply to more than one channel, combine channeltype constants using\r\n * bitwise operators. Refer to this\r\n * list of channel constants.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "gaussianblurimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_ALL"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Blurs an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.gaussianblurimage.php\r\n * @param float $radius <p>\r\n * The radius of the Gaussian, in pixels, not counting the center pixel.\r\n * <\/p>\r\n * @param float $sigma <p>\r\n * The standard deviation of the Gaussian, in pixels.\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To\r\n * apply to more than one channel, combine channeltype constants using\r\n * bitwise operators. Refer to this\r\n * list of channel constants.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimageattribute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "key",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * @param $key\r\n *\/"
            },
            {
                "name": "getimagebackgroundcolor",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the image background color\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagebackgroundcolor.php\r\n * @return ImagickPixel an ImagickPixel set to the background color of the image.\r\n *\/"
            },
            {
                "name": "getimageblueprimary",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the chromaticy blue primary point\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimageblueprimary.php\r\n * @return array Array consisting of \"x\" and \"y\" coordinates of point.\r\n *\/"
            },
            {
                "name": "getimagebordercolor",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the image border color\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagebordercolor.php\r\n * @return ImagickPixel <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimagechanneldepth",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the depth for a particular image channel\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagechanneldepth.php\r\n * @param int $channel <p>\r\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to <b>Imagick::CHANNEL_DEFAULT<\/b>. Refer to this list of channel constants\r\n * <\/p>\r\n * @return int <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimagechanneldistortion",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "reference",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "metric",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Compares image channels of an image to a reconstructed image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagechanneldistortion.php\r\n * @param Imagick $reference <p>\r\n * Imagick object to compare to.\r\n * <\/p>\r\n * @param int $channel <p>\r\n * Provide any channel constant that is valid for your channel mode. To\r\n * apply to more than one channel, combine channeltype constants using\r\n * bitwise operators. Refer to this\r\n * list of channel constants.\r\n * <\/p>\r\n * @param int $metric <p>\r\n * One of the metric type constants.\r\n * <\/p>\r\n * @return float <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimagechannelextrema",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the extrema for one or more image channels\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagechannelextrema.php\r\n * @param int $channel <p>\r\n * Provide any channel constant that is valid for your channel mode. To\r\n * apply to more than one channel, combine channeltype constants using\r\n * bitwise operators. Refer to this\r\n * list of channel constants.\r\n * <\/p>\r\n * @return array <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimagechannelmean",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the mean and standard deviation\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagechannelmean.php\r\n * @param int $channel <p>\r\n * Provide any channel constant that is valid for your channel mode. To\r\n * apply to more than one channel, combine channeltype constants using\r\n * bitwise operators. Refer to this\r\n * list of channel constants.\r\n * <\/p>\r\n * @return array <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimagechannelstatistics",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns statistics for each channel in the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagechannelstatistics.php\r\n * @return array <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimagecolormapcolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "index",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the color of the specified colormap index\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagecolormapcolor.php\r\n * @param int $index <p>\r\n * The offset into the image colormap.\r\n * <\/p>\r\n * @return ImagickPixel <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimagecolorspace",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the image colorspace\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagecolorspace.php\r\n * @return int <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimagecompose",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the composite operator associated with the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagecompose.php\r\n * @return int <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimagedelay",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the image delay\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagedelay.php\r\n * @return int the image delay.\r\n *\/"
            },
            {
                "name": "getimagedepth",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 0.9.1-0.9.9)<br\/>\r\n * Gets the image depth\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagedepth.php\r\n * @return int The image depth.\r\n *\/"
            },
            {
                "name": "getimagedistortion",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "reference",
                        "type": "MagickWand",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "metric",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Compares an image to a reconstructed image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagedistortion.php\r\n * @param MagickWand $reference <p>\r\n * Imagick object to compare to.\r\n * <\/p>\r\n * @param int $metric <p>\r\n * One of the metric type constants.\r\n * <\/p>\r\n * @return float the distortion metric used on the image (or the best guess\r\n * thereof).\r\n *\/"
            },
            {
                "name": "getimageextrema",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the extrema for the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimageextrema.php\r\n * @return array an associative array with the keys \"min\" and \"max\".\r\n *\/"
            },
            {
                "name": "getimagedispose",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the image disposal method\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagedispose.php\r\n * @return int the dispose method on success.\r\n *\/"
            },
            {
                "name": "getimagegamma",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the image gamma\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagegamma.php\r\n * @return float the image gamma on success.\r\n *\/"
            },
            {
                "name": "getimagegreenprimary",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the chromaticy green primary point\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagegreenprimary.php\r\n * @return array an array with the keys \"x\" and \"y\" on success, throws an\r\n * ImagickException on failure.\r\n *\/"
            },
            {
                "name": "getimageheight",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the image height\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimageheight.php\r\n * @return int the image height in pixels.\r\n *\/"
            },
            {
                "name": "getimagehistogram",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the image histogram\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagehistogram.php\r\n * @return array the image histogram as an array of ImagickPixel objects.\r\n *\/"
            },
            {
                "name": "getimageinterlacescheme",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the image interlace scheme\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimageinterlacescheme.php\r\n * @return int the interlace scheme as an integer on success.\r\n * Throw an\r\n * <b>ImagickException<\/b> on error.\r\n *\/"
            },
            {
                "name": "getimageiterations",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the image iterations\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimageiterations.php\r\n * @return int the image iterations as an integer.\r\n *\/"
            },
            {
                "name": "getimagemattecolor",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the image matte color\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagemattecolor.php\r\n * @return ImagickPixel ImagickPixel object on success.\r\n *\/"
            },
            {
                "name": "getimagepage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the page geometry\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagepage.php\r\n * @return array the page geometry associated with the image in an array with the\r\n * keys \"width\", \"height\", \"x\", and \"y\".\r\n *\/"
            },
            {
                "name": "getimagepixelcolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the color of the specified pixel\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagepixelcolor.php\r\n * @param int $x <p>\r\n * The x-coordinate of the pixel\r\n * <\/p>\r\n * @param int $y <p>\r\n * The y-coordinate of the pixel\r\n * <\/p>\r\n * @return ImagickPixel an ImagickPixel instance for the color at the coordinates given.\r\n *\/"
            },
            {
                "name": "getimageprofile",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the named image profile\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimageprofile.php\r\n * @param string $name <p>\r\n * The name of the profile to return.\r\n * <\/p>\r\n * @return string a string containing the image profile.\r\n *\/"
            },
            {
                "name": "getimageredprimary",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the chromaticity red primary point\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimageredprimary.php\r\n * @return array the chromaticity red primary point as an array with the keys \"x\"\r\n * and \"y\".\r\n * Throw an\r\n * <b>ImagickException<\/b> on error.\r\n *\/"
            },
            {
                "name": "getimagerenderingintent",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the image rendering intent\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagerenderingintent.php\r\n * @return int the image rendering intent.\r\n *\/"
            },
            {
                "name": "getimageresolution",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the image X and Y resolution\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimageresolution.php\r\n * @return array the resolution as an array.\r\n *\/"
            },
            {
                "name": "getimagescene",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the image scene\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagescene.php\r\n * @return int the image scene.\r\n *\/"
            },
            {
                "name": "getimagesignature",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Generates an SHA-256 message digest\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagesignature.php\r\n * @return string a string containing the SHA-256 hash of the file.\r\n *\/"
            },
            {
                "name": "getimagetickspersecond",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the image ticks-per-second\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagetickspersecond.php\r\n * @return int the image ticks-per-second.\r\n *\/"
            },
            {
                "name": "getimagetype",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 0.9.10-0.9.9)<br\/>\r\n * Gets the potential image type\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagetype.php\r\n * @return int the potential image type.\r\n * <b>imagick::IMGTYPE_UNDEFINED<\/b>\r\n * <b>imagick::IMGTYPE_BILEVEL<\/b>\r\n * <b>imagick::IMGTYPE_GRAYSCALE<\/b>\r\n * <b>imagick::IMGTYPE_GRAYSCALEMATTE<\/b>\r\n * <b>imagick::IMGTYPE_PALETTE<\/b>\r\n * <b>imagick::IMGTYPE_PALETTEMATTE<\/b>\r\n * <b>imagick::IMGTYPE_TRUECOLOR<\/b>\r\n * <b>imagick::IMGTYPE_TRUECOLORMATTE<\/b>\r\n * <b>imagick::IMGTYPE_COLORSEPARATION<\/b>\r\n * <b>imagick::IMGTYPE_COLORSEPARATIONMATTE<\/b>\r\n * <b>imagick::IMGTYPE_OPTIMIZE<\/b>\r\n *\/"
            },
            {
                "name": "getimageunits",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the image units of resolution\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimageunits.php\r\n * @return int the image units of resolution.\r\n *\/"
            },
            {
                "name": "getimagevirtualpixelmethod",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the virtual pixel method\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagevirtualpixelmethod.php\r\n * @return int the virtual pixel method on success.\r\n *\/"
            },
            {
                "name": "getimagewhitepoint",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the chromaticity white point\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagewhitepoint.php\r\n * @return array the chromaticity white point as an associative array with the keys\r\n * \"x\" and \"y\".\r\n *\/"
            },
            {
                "name": "getimagewidth",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the image width\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagewidth.php\r\n * @return int the image width.\r\n *\/"
            },
            {
                "name": "getnumberimages",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the number of images in the object\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getnumberimages.php\r\n * @return int the number of images associated with Imagick object.\r\n *\/"
            },
            {
                "name": "getimagetotalinkdensity",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the image total ink density\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimagetotalinkdensity.php\r\n * @return float the image total ink density of the image.\r\n * Throw an\r\n * <b>ImagickException<\/b> on error.\r\n *\/"
            },
            {
                "name": "getimageregion",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Extracts a region of the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimageregion.php\r\n * @param int $width <p>\r\n * The width of the extracted region.\r\n * <\/p>\r\n * @param int $height <p>\r\n * The height of the extracted region.\r\n * <\/p>\r\n * @param int $x <p>\r\n * X-coordinate of the top-left corner of the extracted region.\r\n * <\/p>\r\n * @param int $y <p>\r\n * Y-coordinate of the top-left corner of the extracted region.\r\n * <\/p>\r\n * @return Imagick Extracts a region of the image and returns it as a new wand.\r\n *\/"
            },
            {
                "name": "implodeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Creates a new image as a copy\r\n * @link http:\/\/php.net\/manual\/en\/imagick.implodeimage.php\r\n * @param float $radius <p>\r\n * The radius of the implode\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "levelimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "blackPoint",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "gamma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "whitePoint",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_ALL"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Adjusts the levels of an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.levelimage.php\r\n * @param float $blackPoint <p>\r\n * The image black point\r\n * <\/p>\r\n * @param float $gamma <p>\r\n * The gamma value\r\n * <\/p>\r\n * @param float $whitePoint <p>\r\n * The image white point\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To\r\n * apply to more than one channel, combine channeltype constants using\r\n * bitwise operators. Refer to this\r\n * list of channel constants.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "magnifyimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Scales an image proportionally 2x\r\n * @link http:\/\/php.net\/manual\/en\/imagick.magnifyimage.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "mapimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "map",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "dither",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Replaces the colors of an image with the closest color from a reference image.\r\n * @link http:\/\/php.net\/manual\/en\/imagick.mapimage.php\r\n * @param Imagick $map\r\n * @param bool $dither\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "mattefloodfillimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "alpha",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fuzz",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "bordercolor",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Changes the transparency value of a color\r\n * @link http:\/\/php.net\/manual\/en\/imagick.mattefloodfillimage.php\r\n * @param float $alpha <p>\r\n * The level of transparency: 1.0 is fully opaque and 0.0 is fully\r\n * transparent.\r\n * <\/p>\r\n * @param float $fuzz <p>\r\n * The fuzz member of image defines how much tolerance is acceptable to\r\n * consider two colors as the same.\r\n * <\/p>\r\n * @param mixed $bordercolor <p>\r\n * An <b>ImagickPixel<\/b> object or string representing the border color.\r\n * <\/p>\r\n * @param int $x <p>\r\n * The starting x coordinate of the operation.\r\n * <\/p>\r\n * @param int $y <p>\r\n * The starting y coordinate of the operation.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "medianfilterimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Applies a digital filter\r\n * @link http:\/\/php.net\/manual\/en\/imagick.medianfilterimage.php\r\n * @param float $radius <p>\r\n * The radius of the pixel neighborhood.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "negateimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "gray",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_ALL"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Negates the colors in the reference image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.negateimage.php\r\n * @param bool $gray <p>\r\n * Whether to only negate grayscale pixels within the image.\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To\r\n * apply to more than one channel, combine channeltype constants using\r\n * bitwise operators. Refer to this\r\n * list of channel constants.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "paintopaqueimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "target",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fill",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fuzz",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_ALL"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Change any pixel that matches color\r\n * @link http:\/\/php.net\/manual\/en\/imagick.paintopaqueimage.php\r\n * @param mixed $target <p>\r\n * Change this target color to the fill color within the image. An\r\n * ImagickPixel object or a string representing the target color.\r\n * <\/p>\r\n * @param mixed $fill <p>\r\n * An ImagickPixel object or a string representing the fill color.\r\n * <\/p>\r\n * @param float $fuzz <p>\r\n * The fuzz member of image defines how much tolerance is acceptable to\r\n * consider two colors as the same.\r\n * <\/p>\r\n * @param int $channel [optional] <p>\r\n * Provide any channel constant that is valid for your channel mode. To\r\n * apply to more than one channel, combine channeltype constants using\r\n * bitwise operators. Refer to this\r\n * list of channel constants.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "painttransparentimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "target",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "alpha",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fuzz",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Changes any pixel that matches color with the color defined by fill\r\n * @link http:\/\/php.net\/manual\/en\/imagick.painttransparentimage.php\r\n * @param mixed $target <p>\r\n * Change this target color to specified opacity value within the image.\r\n * <\/p>\r\n * @param float $alpha <p>\r\n * The level of transparency: 1.0 is fully opaque and 0.0 is fully\r\n * transparent.\r\n * <\/p>\r\n * @param float $fuzz <p>\r\n * The fuzz member of image defines how much tolerance is acceptable to\r\n * consider two colors as the same.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "previewimages",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "preview",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Quickly pin-point appropriate parameters for image processing\r\n * @link http:\/\/php.net\/manual\/en\/imagick.previewimages.php\r\n * @param int $preview <p>\r\n * Preview type. See Preview type constants\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "profileimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "profile",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Adds or removes a profile from an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.profileimage.php\r\n * @param string $name\r\n * @param string $profile\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "quantizeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "numberColors",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "colorspace",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "treedepth",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "dither",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "measureError",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Analyzes the colors within a reference image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.quantizeimage.php\r\n * @param int $numberColors\r\n * @param int $colorspace\r\n * @param int $treedepth\r\n * @param bool $dither\r\n * @param bool $measureError\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "quantizeimages",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "numberColors",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "colorspace",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "treedepth",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "dither",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "measureError",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Analyzes the colors within a sequence of images\r\n * @link http:\/\/php.net\/manual\/en\/imagick.quantizeimages.php\r\n * @param int $numberColors\r\n * @param int $colorspace\r\n * @param int $treedepth\r\n * @param bool $dither\r\n * @param bool $measureError\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "reducenoiseimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Smooths the contours of an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.reducenoiseimage.php\r\n * @param float $radius\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "removeimageprofile",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Removes the named image profile and returns it\r\n * @link http:\/\/php.net\/manual\/en\/imagick.removeimageprofile.php\r\n * @param string $name\r\n * @return string a string containing the profile of the image.\r\n *\/"
            },
            {
                "name": "separateimagechannel",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Separates a channel from the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.separateimagechannel.php\r\n * @param int $channel\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "sepiatoneimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "threshold",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sepia tones an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.sepiatoneimage.php\r\n * @param float $threshold\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagebias",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "bias",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image bias for any method that convolves an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagebias.php\r\n * @param float $bias\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimageblueprimary",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image chromaticity blue primary point\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimageblueprimary.php\r\n * @param float $x\r\n * @param float $y\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagebordercolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "border",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image border color\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagebordercolor.php\r\n * @param mixed $border <p>\r\n * The border color\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagechanneldepth",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "depth",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the depth of a particular image channel\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagechanneldepth.php\r\n * @param int $channel\r\n * @param int $depth\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagecolormapcolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "index",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "color",
                        "type": "ImagickPixel",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the color of the specified colormap index\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagecolormapcolor.php\r\n * @param int $index\r\n * @param ImagickPixel $color\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagecolorspace",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "colorspace",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image colorspace\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagecolorspace.php\r\n * @param int $colorspace <p>\r\n * One of the COLORSPACE constants\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagedispose",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "dispose",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image disposal method\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagedispose.php\r\n * @param int $dispose\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimageextent",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image size\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimageextent.php\r\n * @param int $columns\r\n * @param int $rows\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagegreenprimary",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image chromaticity green primary point\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagegreenprimary.php\r\n * @param float $x\r\n * @param float $y\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimageinterlacescheme",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "interlace_scheme",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image compression\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimageinterlacescheme.php\r\n * @param int $interlace_scheme\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimageprofile",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "profile",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Adds a named profile to the Imagick object\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimageprofile.php\r\n * @param string $name\r\n * @param string $profile\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimageredprimary",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image chromaticity red primary point\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimageredprimary.php\r\n * @param float $x\r\n * @param float $y\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagerenderingintent",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "rendering_intent",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image rendering intent\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagerenderingintent.php\r\n * @param int $rendering_intent\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagevirtualpixelmethod",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "method",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image virtual pixel method\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagevirtualpixelmethod.php\r\n * @param int $method\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimagewhitepoint",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image chromaticity white point\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimagewhitepoint.php\r\n * @param float $x\r\n * @param float $y\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "sigmoidalcontrastimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "sharpen",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "alpha",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "beta",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_ALL"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Adjusts the contrast of an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.sigmoidalcontrastimage.php\r\n * @param bool $sharpen\r\n * @param float $alpha\r\n * @param float $beta\r\n * @param int $channel [optional]\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "stereoimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "offset_wand",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Composites two images\r\n * @link http:\/\/php.net\/manual\/en\/imagick.stereoimage.php\r\n * @param Imagick $offset_wand\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "textureimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "texture_wand",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Repeatedly tiles the texture image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.textureimage.php\r\n * @param Imagick $texture_wand\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "tintimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "tint",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "opacity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Applies a color vector to each pixel in the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.tintimage.php\r\n * @param mixed $tint\r\n * @param mixed $opacity\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "unsharpmaskimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "amount",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "threshold",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": "Imagick::CHANNEL_ALL"
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sharpens an image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.unsharpmaskimage.php\r\n * @param float $radius\r\n * @param float $sigma\r\n * @param float $amount\r\n * @param float $threshold\r\n * @param int $channel [optional]\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns a new Imagick object\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getimage.php\r\n * @return Imagick a new Imagick object with the current image sequence.\r\n *\/"
            },
            {
                "name": "addimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "source",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Adds new image to Imagick object image list\r\n * @link http:\/\/php.net\/manual\/en\/imagick.addimage.php\r\n * @param Imagick $source <p>\r\n * The source Imagick object\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "replace",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Replaces image in the object\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setimage.php\r\n * @param Imagick $replace <p>\r\n * The replace Imagick object\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "newimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "cols",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "background",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Creates a new image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.newimage.php\r\n * @param int $cols <p>\r\n * Columns in the new image\r\n * <\/p>\r\n * @param int $rows <p>\r\n * Rows in the new image\r\n * <\/p>\r\n * @param mixed $background <p>\r\n * The background color used for this image\r\n * <\/p>\r\n * @param string $format [optional] <p>\r\n * Image format. This parameter was added in Imagick version 2.0.1.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "newpseudoimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "pseudoString",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Creates a new image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.newpseudoimage.php\r\n * @param int $columns <p>\r\n * columns in the new image\r\n * <\/p>\r\n * @param int $rows <p>\r\n * rows in the new image\r\n * <\/p>\r\n * @param string $pseudoString <p>\r\n * string containing pseudo image definition.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getcompression",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the object compression type\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getcompression.php\r\n * @return int the compression constant\r\n *\/"
            },
            {
                "name": "getcompressionquality",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the object compression quality\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getcompressionquality.php\r\n * @return int integer describing the compression quality\r\n *\/"
            },
            {
                "name": "getcopyright",
                "type": 9,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the ImageMagick API copyright as a string\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getcopyright.php\r\n * @return string a string containing the copyright notice of Imagemagick and\r\n * Magickwand C API.\r\n *\/"
            },
            {
                "name": "getfilename",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * The filename associated with an image sequence\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getfilename.php\r\n * @return string a string on success.\r\n *\/"
            },
            {
                "name": "getformat",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the format of the Imagick object\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getformat.php\r\n * @return string the format of the image.\r\n *\/"
            },
            {
                "name": "gethomeurl",
                "type": 9,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the ImageMagick home URL\r\n * @link http:\/\/php.net\/manual\/en\/imagick.gethomeurl.php\r\n * @return string a link to the imagemagick homepage.\r\n *\/"
            },
            {
                "name": "getinterlacescheme",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the object interlace scheme\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getinterlacescheme.php\r\n * @return int Gets the wand interlace\r\n * scheme.\r\n *\/"
            },
            {
                "name": "getoption",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "key",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns a value associated with the specified key\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getoption.php\r\n * @param string $key <p>\r\n * The name of the option\r\n * <\/p>\r\n * @return string a value associated with a wand and the specified key.\r\n *\/"
            },
            {
                "name": "getpackagename",
                "type": 9,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the ImageMagick package name\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getpackagename.php\r\n * @return string the ImageMagick package name as a string.\r\n *\/"
            },
            {
                "name": "getpage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the page geometry\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getpage.php\r\n * @return array the page geometry associated with the Imagick object in\r\n * an associative array with the keys \"width\", \"height\", \"x\", and \"y\",\r\n * throwing ImagickException on error.\r\n *\/"
            },
            {
                "name": "getquantumdepth",
                "type": 9,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the quantum depth\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getquantumdepth.php\r\n * @return array the Imagick quantum depth as a string.\r\n *\/"
            },
            {
                "name": "getquantumrange",
                "type": 9,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the Imagick quantum range\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getquantumrange.php\r\n * @return array the Imagick quantum range as a string.\r\n *\/"
            },
            {
                "name": "getreleasedate",
                "type": 9,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the ImageMagick release date\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getreleasedate.php\r\n * @return string the ImageMagick release date as a string.\r\n *\/"
            },
            {
                "name": "getresource",
                "type": 9,
                "byRef": false,
                "params": [
                    {
                        "name": "type",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the specified resource's memory usage\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getresource.php\r\n * @param int $type <p>\r\n * Refer to the list of resourcetype constants.\r\n * <\/p>\r\n * @return int the specified resource's memory usage in megabytes.\r\n *\/"
            },
            {
                "name": "getresourcelimit",
                "type": 9,
                "byRef": false,
                "params": [
                    {
                        "name": "type",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the specified resource limit\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getresourcelimit.php\r\n * @param int $type <p>\r\n * Refer to the list of resourcetype constants.\r\n * <\/p>\r\n * @return int the specified resource limit in megabytes.\r\n *\/"
            },
            {
                "name": "getsamplingfactors",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the horizontal and vertical sampling factor\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getsamplingfactors.php\r\n * @return array an associative array with the horizontal and vertical sampling\r\n * factors of the image.\r\n *\/"
            },
            {
                "name": "getsize",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the size associated with the Imagick object\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getsize.php\r\n * @return array the size associated with the Imagick object as an array with the\r\n * keys \"columns\" and \"rows\".\r\n *\/"
            },
            {
                "name": "getversion",
                "type": 9,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the ImageMagick API version\r\n * @link http:\/\/php.net\/manual\/en\/imagick.getversion.php\r\n * @return array the ImageMagick API version as a string and as a number.\r\n *\/"
            },
            {
                "name": "setbackgroundcolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "background",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the object's default background color\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setbackgroundcolor.php\r\n * @param mixed $background\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setcompression",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "compression",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the object's default compression type\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setcompression.php\r\n * @param int $compression\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setcompressionquality",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "quality",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 0.9.10-0.9.9)<br\/>\r\n * Sets the object's default compression quality\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setcompressionquality.php\r\n * @param int $quality\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setfilename",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filename",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the filename before you read or write the image\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setfilename.php\r\n * @param string $filename\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setformat",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "format",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the format of the Imagick object\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setformat.php\r\n * @param string $format\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setinterlacescheme",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "interlace_scheme",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image compression\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setinterlacescheme.php\r\n * @param int $interlace_scheme\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setoption",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "key",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Set an option\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setoption.php\r\n * @param string $key\r\n * @param string $value\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setpage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the page geometry of the Imagick object\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setpage.php\r\n * @param int $width\r\n * @param int $height\r\n * @param int $x\r\n * @param int $y\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setresourcelimit",
                "type": 9,
                "byRef": false,
                "params": [
                    {
                        "name": "type",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the limit for a particular resource in megabytes\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setresourcelimit.php\r\n * @param int $type <p>\r\n * Refer to the list of resourcetype constants.\r\n * <\/p>\r\n * @param int $limit <p>\r\n * The resource limit. The unit depends on the type of the resource being limited.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setresolution",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x_resolution",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y_resolution",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image resolution\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setresolution.php\r\n * @param float $x_resolution <p>\r\n * The horizontal resolution.\r\n * <\/p>\r\n * @param float $y_resolution <p>\r\n * The vertical resolution.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setsamplingfactors",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "factors",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image sampling factors\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setsamplingfactors.php\r\n * @param array $factors\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setsize",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the size of the Imagick object\r\n * @link http:\/\/php.net\/manual\/en\/imagick.setsize.php\r\n * @param int $columns\r\n * @param int $rows\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "settype",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "image_type",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the image type attribute\r\n * @link http:\/\/php.net\/manual\/en\/imagick.settype.php\r\n * @param int $image_type\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "key",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "next",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "rewind",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "valid",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Checks if the current item is valid\r\n * @link http:\/\/php.net\/manual\/en\/imagick.valid.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "current",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns a reference to the current Imagick object\r\n * @link http:\/\/php.net\/manual\/en\/imagick.current.php\r\n * @return Imagick self on success.\r\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [
            {
                "name": "COLOR_BLACK",
                "value": 11,
                "doc": null
            },
            {
                "name": "COLOR_BLUE",
                "value": 12,
                "doc": null
            },
            {
                "name": "COLOR_CYAN",
                "value": 13,
                "doc": null
            },
            {
                "name": "COLOR_GREEN",
                "value": 14,
                "doc": null
            },
            {
                "name": "COLOR_RED",
                "value": 15,
                "doc": null
            },
            {
                "name": "COLOR_YELLOW",
                "value": 16,
                "doc": null
            },
            {
                "name": "COLOR_MAGENTA",
                "value": 17,
                "doc": null
            },
            {
                "name": "COLOR_OPACITY",
                "value": 18,
                "doc": null
            },
            {
                "name": "COLOR_ALPHA",
                "value": 19,
                "doc": null
            },
            {
                "name": "COLOR_FUZZ",
                "value": 20,
                "doc": null
            },
            {
                "name": "IMAGICK_EXTNUM",
                "value": 30200,
                "doc": null
            },
            {
                "name": "IMAGICK_EXTVER",
                "value": "3.2.0RC1",
                "doc": null
            },
            {
                "name": "QUANTUM_RANGE",
                "value": 65535,
                "doc": null
            },
            {
                "name": "USE_ZEND_MM",
                "value": 0,
                "doc": null
            },
            {
                "name": "COMPOSITE_DEFAULT",
                "value": 40,
                "doc": null
            },
            {
                "name": "COMPOSITE_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "COMPOSITE_NO",
                "value": 1,
                "doc": null
            },
            {
                "name": "COMPOSITE_ADD",
                "value": 2,
                "doc": null
            },
            {
                "name": "COMPOSITE_ATOP",
                "value": 3,
                "doc": null
            },
            {
                "name": "COMPOSITE_BLEND",
                "value": 4,
                "doc": null
            },
            {
                "name": "COMPOSITE_BUMPMAP",
                "value": 5,
                "doc": null
            },
            {
                "name": "COMPOSITE_CLEAR",
                "value": 7,
                "doc": null
            },
            {
                "name": "COMPOSITE_COLORBURN",
                "value": 8,
                "doc": null
            },
            {
                "name": "COMPOSITE_COLORDODGE",
                "value": 9,
                "doc": null
            },
            {
                "name": "COMPOSITE_COLORIZE",
                "value": 10,
                "doc": null
            },
            {
                "name": "COMPOSITE_COPYBLACK",
                "value": 11,
                "doc": null
            },
            {
                "name": "COMPOSITE_COPYBLUE",
                "value": 12,
                "doc": null
            },
            {
                "name": "COMPOSITE_COPY",
                "value": 13,
                "doc": null
            },
            {
                "name": "COMPOSITE_COPYCYAN",
                "value": 14,
                "doc": null
            },
            {
                "name": "COMPOSITE_COPYGREEN",
                "value": 15,
                "doc": null
            },
            {
                "name": "COMPOSITE_COPYMAGENTA",
                "value": 16,
                "doc": null
            },
            {
                "name": "COMPOSITE_COPYOPACITY",
                "value": 17,
                "doc": null
            },
            {
                "name": "COMPOSITE_COPYRED",
                "value": 18,
                "doc": null
            },
            {
                "name": "COMPOSITE_COPYYELLOW",
                "value": 19,
                "doc": null
            },
            {
                "name": "COMPOSITE_DARKEN",
                "value": 20,
                "doc": null
            },
            {
                "name": "COMPOSITE_DSTATOP",
                "value": 21,
                "doc": null
            },
            {
                "name": "COMPOSITE_DST",
                "value": 22,
                "doc": null
            },
            {
                "name": "COMPOSITE_DSTIN",
                "value": 23,
                "doc": null
            },
            {
                "name": "COMPOSITE_DSTOUT",
                "value": 24,
                "doc": null
            },
            {
                "name": "COMPOSITE_DSTOVER",
                "value": 25,
                "doc": null
            },
            {
                "name": "COMPOSITE_DIFFERENCE",
                "value": 26,
                "doc": null
            },
            {
                "name": "COMPOSITE_DISPLACE",
                "value": 27,
                "doc": null
            },
            {
                "name": "COMPOSITE_DISSOLVE",
                "value": 28,
                "doc": null
            },
            {
                "name": "COMPOSITE_EXCLUSION",
                "value": 29,
                "doc": null
            },
            {
                "name": "COMPOSITE_HARDLIGHT",
                "value": 30,
                "doc": null
            },
            {
                "name": "COMPOSITE_HUE",
                "value": 31,
                "doc": null
            },
            {
                "name": "COMPOSITE_IN",
                "value": 32,
                "doc": null
            },
            {
                "name": "COMPOSITE_LIGHTEN",
                "value": 33,
                "doc": null
            },
            {
                "name": "COMPOSITE_LUMINIZE",
                "value": 35,
                "doc": null
            },
            {
                "name": "COMPOSITE_MINUS",
                "value": 36,
                "doc": null
            },
            {
                "name": "COMPOSITE_MODULATE",
                "value": 37,
                "doc": null
            },
            {
                "name": "COMPOSITE_MULTIPLY",
                "value": 38,
                "doc": null
            },
            {
                "name": "COMPOSITE_OUT",
                "value": 39,
                "doc": null
            },
            {
                "name": "COMPOSITE_OVER",
                "value": 40,
                "doc": null
            },
            {
                "name": "COMPOSITE_OVERLAY",
                "value": 41,
                "doc": null
            },
            {
                "name": "COMPOSITE_PLUS",
                "value": 42,
                "doc": null
            },
            {
                "name": "COMPOSITE_REPLACE",
                "value": 43,
                "doc": null
            },
            {
                "name": "COMPOSITE_SATURATE",
                "value": 44,
                "doc": null
            },
            {
                "name": "COMPOSITE_SCREEN",
                "value": 45,
                "doc": null
            },
            {
                "name": "COMPOSITE_SOFTLIGHT",
                "value": 46,
                "doc": null
            },
            {
                "name": "COMPOSITE_SRCATOP",
                "value": 47,
                "doc": null
            },
            {
                "name": "COMPOSITE_SRC",
                "value": 48,
                "doc": null
            },
            {
                "name": "COMPOSITE_SRCIN",
                "value": 49,
                "doc": null
            },
            {
                "name": "COMPOSITE_SRCOUT",
                "value": 50,
                "doc": null
            },
            {
                "name": "COMPOSITE_SRCOVER",
                "value": 51,
                "doc": null
            },
            {
                "name": "COMPOSITE_SUBTRACT",
                "value": 52,
                "doc": null
            },
            {
                "name": "COMPOSITE_THRESHOLD",
                "value": 53,
                "doc": null
            },
            {
                "name": "COMPOSITE_XOR",
                "value": 54,
                "doc": null
            },
            {
                "name": "COMPOSITE_CHANGEMASK",
                "value": 6,
                "doc": null
            },
            {
                "name": "COMPOSITE_LINEARLIGHT",
                "value": 34,
                "doc": null
            },
            {
                "name": "COMPOSITE_DIVIDE",
                "value": 55,
                "doc": null
            },
            {
                "name": "COMPOSITE_DISTORT",
                "value": 56,
                "doc": null
            },
            {
                "name": "COMPOSITE_BLUR",
                "value": 57,
                "doc": null
            },
            {
                "name": "COMPOSITE_PEGTOPLIGHT",
                "value": 58,
                "doc": null
            },
            {
                "name": "COMPOSITE_VIVIDLIGHT",
                "value": 59,
                "doc": null
            },
            {
                "name": "COMPOSITE_PINLIGHT",
                "value": 60,
                "doc": null
            },
            {
                "name": "COMPOSITE_LINEARDODGE",
                "value": 61,
                "doc": null
            },
            {
                "name": "COMPOSITE_LINEARBURN",
                "value": 62,
                "doc": null
            },
            {
                "name": "COMPOSITE_MATHEMATICS",
                "value": 63,
                "doc": null
            },
            {
                "name": "COMPOSITE_MODULUSADD",
                "value": 2,
                "doc": null
            },
            {
                "name": "COMPOSITE_MODULUSSUBTRACT",
                "value": 52,
                "doc": null
            },
            {
                "name": "COMPOSITE_MINUSDST",
                "value": 36,
                "doc": null
            },
            {
                "name": "COMPOSITE_DIVIDEDST",
                "value": 55,
                "doc": null
            },
            {
                "name": "COMPOSITE_DIVIDESRC",
                "value": 64,
                "doc": null
            },
            {
                "name": "COMPOSITE_MINUSSRC",
                "value": 65,
                "doc": null
            },
            {
                "name": "COMPOSITE_DARKENINTENSITY",
                "value": 66,
                "doc": null
            },
            {
                "name": "COMPOSITE_LIGHTENINTENSITY",
                "value": 67,
                "doc": null
            },
            {
                "name": "MONTAGEMODE_FRAME",
                "value": 1,
                "doc": null
            },
            {
                "name": "MONTAGEMODE_UNFRAME",
                "value": 2,
                "doc": null
            },
            {
                "name": "MONTAGEMODE_CONCATENATE",
                "value": 3,
                "doc": null
            },
            {
                "name": "STYLE_NORMAL",
                "value": 1,
                "doc": null
            },
            {
                "name": "STYLE_ITALIC",
                "value": 2,
                "doc": null
            },
            {
                "name": "STYLE_OBLIQUE",
                "value": 3,
                "doc": null
            },
            {
                "name": "STYLE_ANY",
                "value": 4,
                "doc": null
            },
            {
                "name": "FILTER_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "FILTER_POINT",
                "value": 1,
                "doc": null
            },
            {
                "name": "FILTER_BOX",
                "value": 2,
                "doc": null
            },
            {
                "name": "FILTER_TRIANGLE",
                "value": 3,
                "doc": null
            },
            {
                "name": "FILTER_HERMITE",
                "value": 4,
                "doc": null
            },
            {
                "name": "FILTER_HANNING",
                "value": 5,
                "doc": null
            },
            {
                "name": "FILTER_HAMMING",
                "value": 6,
                "doc": null
            },
            {
                "name": "FILTER_BLACKMAN",
                "value": 7,
                "doc": null
            },
            {
                "name": "FILTER_GAUSSIAN",
                "value": 8,
                "doc": null
            },
            {
                "name": "FILTER_QUADRATIC",
                "value": 9,
                "doc": null
            },
            {
                "name": "FILTER_CUBIC",
                "value": 10,
                "doc": null
            },
            {
                "name": "FILTER_CATROM",
                "value": 11,
                "doc": null
            },
            {
                "name": "FILTER_MITCHELL",
                "value": 12,
                "doc": null
            },
            {
                "name": "FILTER_LANCZOS",
                "value": 22,
                "doc": null
            },
            {
                "name": "FILTER_BESSEL",
                "value": 13,
                "doc": null
            },
            {
                "name": "FILTER_SINC",
                "value": 14,
                "doc": null
            },
            {
                "name": "FILTER_KAISER",
                "value": 16,
                "doc": null
            },
            {
                "name": "FILTER_WELSH",
                "value": 17,
                "doc": null
            },
            {
                "name": "FILTER_PARZEN",
                "value": 18,
                "doc": null
            },
            {
                "name": "FILTER_LAGRANGE",
                "value": 21,
                "doc": null
            },
            {
                "name": "FILTER_SENTINEL",
                "value": 30,
                "doc": null
            },
            {
                "name": "FILTER_BOHMAN",
                "value": 19,
                "doc": null
            },
            {
                "name": "FILTER_BARTLETT",
                "value": 20,
                "doc": null
            },
            {
                "name": "FILTER_JINC",
                "value": 13,
                "doc": null
            },
            {
                "name": "FILTER_SINCFAST",
                "value": 15,
                "doc": null
            },
            {
                "name": "FILTER_ROBIDOUX",
                "value": 26,
                "doc": null
            },
            {
                "name": "FILTER_LANCZOSSHARP",
                "value": 23,
                "doc": null
            },
            {
                "name": "FILTER_LANCZOS2",
                "value": 24,
                "doc": null
            },
            {
                "name": "FILTER_LANCZOS2SHARP",
                "value": 25,
                "doc": null
            },
            {
                "name": "FILTER_ROBIDOUXSHARP",
                "value": 27,
                "doc": null
            },
            {
                "name": "FILTER_COSINE",
                "value": 28,
                "doc": null
            },
            {
                "name": "IMGTYPE_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "IMGTYPE_BILEVEL",
                "value": 1,
                "doc": null
            },
            {
                "name": "IMGTYPE_GRAYSCALE",
                "value": 2,
                "doc": null
            },
            {
                "name": "IMGTYPE_GRAYSCALEMATTE",
                "value": 3,
                "doc": null
            },
            {
                "name": "IMGTYPE_PALETTE",
                "value": 4,
                "doc": null
            },
            {
                "name": "IMGTYPE_PALETTEMATTE",
                "value": 5,
                "doc": null
            },
            {
                "name": "IMGTYPE_TRUECOLOR",
                "value": 6,
                "doc": null
            },
            {
                "name": "IMGTYPE_TRUECOLORMATTE",
                "value": 7,
                "doc": null
            },
            {
                "name": "IMGTYPE_COLORSEPARATION",
                "value": 8,
                "doc": null
            },
            {
                "name": "IMGTYPE_COLORSEPARATIONMATTE",
                "value": 9,
                "doc": null
            },
            {
                "name": "IMGTYPE_OPTIMIZE",
                "value": 10,
                "doc": null
            },
            {
                "name": "IMGTYPE_PALETTEBILEVELMATTE",
                "value": 11,
                "doc": null
            },
            {
                "name": "RESOLUTION_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "RESOLUTION_PIXELSPERINCH",
                "value": 1,
                "doc": null
            },
            {
                "name": "RESOLUTION_PIXELSPERCENTIMETER",
                "value": 2,
                "doc": null
            },
            {
                "name": "COMPRESSION_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "COMPRESSION_NO",
                "value": 1,
                "doc": null
            },
            {
                "name": "COMPRESSION_BZIP",
                "value": 2,
                "doc": null
            },
            {
                "name": "COMPRESSION_FAX",
                "value": 6,
                "doc": null
            },
            {
                "name": "COMPRESSION_GROUP4",
                "value": 7,
                "doc": null
            },
            {
                "name": "COMPRESSION_JPEG",
                "value": 8,
                "doc": null
            },
            {
                "name": "COMPRESSION_JPEG2000",
                "value": 9,
                "doc": null
            },
            {
                "name": "COMPRESSION_LOSSLESSJPEG",
                "value": 10,
                "doc": null
            },
            {
                "name": "COMPRESSION_LZW",
                "value": 11,
                "doc": null
            },
            {
                "name": "COMPRESSION_RLE",
                "value": 12,
                "doc": null
            },
            {
                "name": "COMPRESSION_ZIP",
                "value": 13,
                "doc": null
            },
            {
                "name": "COMPRESSION_DXT1",
                "value": 3,
                "doc": null
            },
            {
                "name": "COMPRESSION_DXT3",
                "value": 4,
                "doc": null
            },
            {
                "name": "COMPRESSION_DXT5",
                "value": 5,
                "doc": null
            },
            {
                "name": "COMPRESSION_ZIPS",
                "value": 14,
                "doc": null
            },
            {
                "name": "COMPRESSION_PIZ",
                "value": 15,
                "doc": null
            },
            {
                "name": "COMPRESSION_PXR24",
                "value": 16,
                "doc": null
            },
            {
                "name": "COMPRESSION_B44",
                "value": 17,
                "doc": null
            },
            {
                "name": "COMPRESSION_B44A",
                "value": 18,
                "doc": null
            },
            {
                "name": "COMPRESSION_LZMA",
                "value": 19,
                "doc": null
            },
            {
                "name": "COMPRESSION_JBIG1",
                "value": 20,
                "doc": null
            },
            {
                "name": "COMPRESSION_JBIG2",
                "value": 21,
                "doc": null
            },
            {
                "name": "PAINT_POINT",
                "value": 1,
                "doc": null
            },
            {
                "name": "PAINT_REPLACE",
                "value": 2,
                "doc": null
            },
            {
                "name": "PAINT_FLOODFILL",
                "value": 3,
                "doc": null
            },
            {
                "name": "PAINT_FILLTOBORDER",
                "value": 4,
                "doc": null
            },
            {
                "name": "PAINT_RESET",
                "value": 5,
                "doc": null
            },
            {
                "name": "GRAVITY_NORTHWEST",
                "value": 1,
                "doc": null
            },
            {
                "name": "GRAVITY_NORTH",
                "value": 2,
                "doc": null
            },
            {
                "name": "GRAVITY_NORTHEAST",
                "value": 3,
                "doc": null
            },
            {
                "name": "GRAVITY_WEST",
                "value": 4,
                "doc": null
            },
            {
                "name": "GRAVITY_CENTER",
                "value": 5,
                "doc": null
            },
            {
                "name": "GRAVITY_EAST",
                "value": 6,
                "doc": null
            },
            {
                "name": "GRAVITY_SOUTHWEST",
                "value": 7,
                "doc": null
            },
            {
                "name": "GRAVITY_SOUTH",
                "value": 8,
                "doc": null
            },
            {
                "name": "GRAVITY_SOUTHEAST",
                "value": 9,
                "doc": null
            },
            {
                "name": "STRETCH_NORMAL",
                "value": 1,
                "doc": null
            },
            {
                "name": "STRETCH_ULTRACONDENSED",
                "value": 2,
                "doc": null
            },
            {
                "name": "STRETCH_CONDENSED",
                "value": 4,
                "doc": null
            },
            {
                "name": "STRETCH_SEMICONDENSED",
                "value": 5,
                "doc": null
            },
            {
                "name": "STRETCH_SEMIEXPANDED",
                "value": 6,
                "doc": null
            },
            {
                "name": "STRETCH_EXPANDED",
                "value": 7,
                "doc": null
            },
            {
                "name": "STRETCH_EXTRAEXPANDED",
                "value": 8,
                "doc": null
            },
            {
                "name": "STRETCH_ULTRAEXPANDED",
                "value": 9,
                "doc": null
            },
            {
                "name": "STRETCH_ANY",
                "value": 10,
                "doc": null
            },
            {
                "name": "ALIGN_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "ALIGN_LEFT",
                "value": 1,
                "doc": null
            },
            {
                "name": "ALIGN_CENTER",
                "value": 2,
                "doc": null
            },
            {
                "name": "ALIGN_RIGHT",
                "value": 3,
                "doc": null
            },
            {
                "name": "DECORATION_NO",
                "value": 1,
                "doc": null
            },
            {
                "name": "DECORATION_UNDERLINE",
                "value": 2,
                "doc": null
            },
            {
                "name": "DECORATION_OVERLINE",
                "value": 3,
                "doc": null
            },
            {
                "name": "DECORATION_LINETROUGH",
                "value": 4,
                "doc": null
            },
            {
                "name": "NOISE_UNIFORM",
                "value": 1,
                "doc": null
            },
            {
                "name": "NOISE_GAUSSIAN",
                "value": 2,
                "doc": null
            },
            {
                "name": "NOISE_MULTIPLICATIVEGAUSSIAN",
                "value": 3,
                "doc": null
            },
            {
                "name": "NOISE_IMPULSE",
                "value": 4,
                "doc": null
            },
            {
                "name": "NOISE_LAPLACIAN",
                "value": 5,
                "doc": null
            },
            {
                "name": "NOISE_POISSON",
                "value": 6,
                "doc": null
            },
            {
                "name": "NOISE_RANDOM",
                "value": 7,
                "doc": null
            },
            {
                "name": "CHANNEL_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "CHANNEL_RED",
                "value": 1,
                "doc": null
            },
            {
                "name": "CHANNEL_GRAY",
                "value": 128,
                "doc": null
            },
            {
                "name": "CHANNEL_CYAN",
                "value": 1,
                "doc": null
            },
            {
                "name": "CHANNEL_GREEN",
                "value": 2,
                "doc": null
            },
            {
                "name": "CHANNEL_MAGENTA",
                "value": 2,
                "doc": null
            },
            {
                "name": "CHANNEL_BLUE",
                "value": 4,
                "doc": null
            },
            {
                "name": "CHANNEL_YELLOW",
                "value": 4,
                "doc": null
            },
            {
                "name": "CHANNEL_ALPHA",
                "value": 8,
                "doc": null
            },
            {
                "name": "CHANNEL_OPACITY",
                "value": 8,
                "doc": null
            },
            {
                "name": "CHANNEL_MATTE",
                "value": 8,
                "doc": null
            },
            {
                "name": "CHANNEL_BLACK",
                "value": 32,
                "doc": null
            },
            {
                "name": "CHANNEL_INDEX",
                "value": 32,
                "doc": null
            },
            {
                "name": "CHANNEL_ALL",
                "value": 134217727,
                "doc": null
            },
            {
                "name": "CHANNEL_DEFAULT",
                "value": 134217719,
                "doc": null
            },
            {
                "name": "CHANNEL_TRUEALPHA",
                "value": 64,
                "doc": null
            },
            {
                "name": "CHANNEL_RGBS",
                "value": 128,
                "doc": null
            },
            {
                "name": "CHANNEL_SYNC",
                "value": 256,
                "doc": null
            },
            {
                "name": "CHANNEL_COMPOSITES",
                "value": 47,
                "doc": null
            },
            {
                "name": "METRIC_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "METRIC_MEANABSOLUTEERROR",
                "value": 2,
                "doc": null
            },
            {
                "name": "METRIC_MEANSQUAREERROR",
                "value": 4,
                "doc": null
            },
            {
                "name": "METRIC_PEAKABSOLUTEERROR",
                "value": 5,
                "doc": null
            },
            {
                "name": "METRIC_PEAKSIGNALTONOISERATIO",
                "value": 6,
                "doc": null
            },
            {
                "name": "METRIC_ROOTMEANSQUAREDERROR",
                "value": 7,
                "doc": null
            },
            {
                "name": "PIXEL_CHAR",
                "value": 1,
                "doc": null
            },
            {
                "name": "PIXEL_DOUBLE",
                "value": 2,
                "doc": null
            },
            {
                "name": "PIXEL_FLOAT",
                "value": 3,
                "doc": null
            },
            {
                "name": "PIXEL_INTEGER",
                "value": 4,
                "doc": null
            },
            {
                "name": "PIXEL_LONG",
                "value": 5,
                "doc": null
            },
            {
                "name": "PIXEL_QUANTUM",
                "value": 6,
                "doc": null
            },
            {
                "name": "PIXEL_SHORT",
                "value": 7,
                "doc": null
            },
            {
                "name": "EVALUATE_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "EVALUATE_ADD",
                "value": 1,
                "doc": null
            },
            {
                "name": "EVALUATE_AND",
                "value": 2,
                "doc": null
            },
            {
                "name": "EVALUATE_DIVIDE",
                "value": 3,
                "doc": null
            },
            {
                "name": "EVALUATE_LEFTSHIFT",
                "value": 4,
                "doc": null
            },
            {
                "name": "EVALUATE_MAX",
                "value": 5,
                "doc": null
            },
            {
                "name": "EVALUATE_MIN",
                "value": 6,
                "doc": null
            },
            {
                "name": "EVALUATE_MULTIPLY",
                "value": 7,
                "doc": null
            },
            {
                "name": "EVALUATE_OR",
                "value": 8,
                "doc": null
            },
            {
                "name": "EVALUATE_RIGHTSHIFT",
                "value": 9,
                "doc": null
            },
            {
                "name": "EVALUATE_SET",
                "value": 10,
                "doc": null
            },
            {
                "name": "EVALUATE_SUBTRACT",
                "value": 11,
                "doc": null
            },
            {
                "name": "EVALUATE_XOR",
                "value": 12,
                "doc": null
            },
            {
                "name": "EVALUATE_POW",
                "value": 13,
                "doc": null
            },
            {
                "name": "EVALUATE_LOG",
                "value": 14,
                "doc": null
            },
            {
                "name": "EVALUATE_THRESHOLD",
                "value": 15,
                "doc": null
            },
            {
                "name": "EVALUATE_THRESHOLDBLACK",
                "value": 16,
                "doc": null
            },
            {
                "name": "EVALUATE_THRESHOLDWHITE",
                "value": 17,
                "doc": null
            },
            {
                "name": "EVALUATE_GAUSSIANNOISE",
                "value": 18,
                "doc": null
            },
            {
                "name": "EVALUATE_IMPULSENOISE",
                "value": 19,
                "doc": null
            },
            {
                "name": "EVALUATE_LAPLACIANNOISE",
                "value": 20,
                "doc": null
            },
            {
                "name": "EVALUATE_MULTIPLICATIVENOISE",
                "value": 21,
                "doc": null
            },
            {
                "name": "EVALUATE_POISSONNOISE",
                "value": 22,
                "doc": null
            },
            {
                "name": "EVALUATE_UNIFORMNOISE",
                "value": 23,
                "doc": null
            },
            {
                "name": "EVALUATE_COSINE",
                "value": 24,
                "doc": null
            },
            {
                "name": "EVALUATE_SINE",
                "value": 25,
                "doc": null
            },
            {
                "name": "EVALUATE_ADDMODULUS",
                "value": 26,
                "doc": null
            },
            {
                "name": "EVALUATE_MEAN",
                "value": 27,
                "doc": null
            },
            {
                "name": "EVALUATE_ABS",
                "value": 28,
                "doc": null
            },
            {
                "name": "EVALUATE_EXPONENTIAL",
                "value": 29,
                "doc": null
            },
            {
                "name": "EVALUATE_MEDIAN",
                "value": 30,
                "doc": null
            },
            {
                "name": "EVALUATE_SUM",
                "value": 31,
                "doc": null
            },
            {
                "name": "COLORSPACE_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "COLORSPACE_RGB",
                "value": 1,
                "doc": null
            },
            {
                "name": "COLORSPACE_GRAY",
                "value": 2,
                "doc": null
            },
            {
                "name": "COLORSPACE_TRANSPARENT",
                "value": 3,
                "doc": null
            },
            {
                "name": "COLORSPACE_OHTA",
                "value": 4,
                "doc": null
            },
            {
                "name": "COLORSPACE_LAB",
                "value": 5,
                "doc": null
            },
            {
                "name": "COLORSPACE_XYZ",
                "value": 6,
                "doc": null
            },
            {
                "name": "COLORSPACE_YCBCR",
                "value": 7,
                "doc": null
            },
            {
                "name": "COLORSPACE_YCC",
                "value": 8,
                "doc": null
            },
            {
                "name": "COLORSPACE_YIQ",
                "value": 9,
                "doc": null
            },
            {
                "name": "COLORSPACE_YPBPR",
                "value": 10,
                "doc": null
            },
            {
                "name": "COLORSPACE_YUV",
                "value": 11,
                "doc": null
            },
            {
                "name": "COLORSPACE_CMYK",
                "value": 12,
                "doc": null
            },
            {
                "name": "COLORSPACE_SRGB",
                "value": 13,
                "doc": null
            },
            {
                "name": "COLORSPACE_HSB",
                "value": 14,
                "doc": null
            },
            {
                "name": "COLORSPACE_HSL",
                "value": 15,
                "doc": null
            },
            {
                "name": "COLORSPACE_HWB",
                "value": 16,
                "doc": null
            },
            {
                "name": "COLORSPACE_REC601LUMA",
                "value": 17,
                "doc": null
            },
            {
                "name": "COLORSPACE_REC709LUMA",
                "value": 19,
                "doc": null
            },
            {
                "name": "COLORSPACE_LOG",
                "value": 21,
                "doc": null
            },
            {
                "name": "COLORSPACE_CMY",
                "value": 22,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_BACKGROUND",
                "value": 1,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_CONSTANT",
                "value": 2,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_EDGE",
                "value": 4,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_MIRROR",
                "value": 5,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_TILE",
                "value": 7,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_TRANSPARENT",
                "value": 8,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_MASK",
                "value": 9,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_BLACK",
                "value": 10,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_GRAY",
                "value": 11,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_WHITE",
                "value": 12,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_HORIZONTALTILE",
                "value": 13,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_VERTICALTILE",
                "value": 14,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_HORIZONTALTILEEDGE",
                "value": 15,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_VERTICALTILEEDGE",
                "value": 16,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_CHECKERTILE",
                "value": 17,
                "doc": null
            },
            {
                "name": "PREVIEW_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "PREVIEW_ROTATE",
                "value": 1,
                "doc": null
            },
            {
                "name": "PREVIEW_SHEAR",
                "value": 2,
                "doc": null
            },
            {
                "name": "PREVIEW_ROLL",
                "value": 3,
                "doc": null
            },
            {
                "name": "PREVIEW_HUE",
                "value": 4,
                "doc": null
            },
            {
                "name": "PREVIEW_SATURATION",
                "value": 5,
                "doc": null
            },
            {
                "name": "PREVIEW_BRIGHTNESS",
                "value": 6,
                "doc": null
            },
            {
                "name": "PREVIEW_GAMMA",
                "value": 7,
                "doc": null
            },
            {
                "name": "PREVIEW_SPIFF",
                "value": 8,
                "doc": null
            },
            {
                "name": "PREVIEW_DULL",
                "value": 9,
                "doc": null
            },
            {
                "name": "PREVIEW_GRAYSCALE",
                "value": 10,
                "doc": null
            },
            {
                "name": "PREVIEW_QUANTIZE",
                "value": 11,
                "doc": null
            },
            {
                "name": "PREVIEW_DESPECKLE",
                "value": 12,
                "doc": null
            },
            {
                "name": "PREVIEW_REDUCENOISE",
                "value": 13,
                "doc": null
            },
            {
                "name": "PREVIEW_ADDNOISE",
                "value": 14,
                "doc": null
            },
            {
                "name": "PREVIEW_SHARPEN",
                "value": 15,
                "doc": null
            },
            {
                "name": "PREVIEW_BLUR",
                "value": 16,
                "doc": null
            },
            {
                "name": "PREVIEW_THRESHOLD",
                "value": 17,
                "doc": null
            },
            {
                "name": "PREVIEW_EDGEDETECT",
                "value": 18,
                "doc": null
            },
            {
                "name": "PREVIEW_SPREAD",
                "value": 19,
                "doc": null
            },
            {
                "name": "PREVIEW_SOLARIZE",
                "value": 20,
                "doc": null
            },
            {
                "name": "PREVIEW_SHADE",
                "value": 21,
                "doc": null
            },
            {
                "name": "PREVIEW_RAISE",
                "value": 22,
                "doc": null
            },
            {
                "name": "PREVIEW_SEGMENT",
                "value": 23,
                "doc": null
            },
            {
                "name": "PREVIEW_SWIRL",
                "value": 24,
                "doc": null
            },
            {
                "name": "PREVIEW_IMPLODE",
                "value": 25,
                "doc": null
            },
            {
                "name": "PREVIEW_WAVE",
                "value": 26,
                "doc": null
            },
            {
                "name": "PREVIEW_OILPAINT",
                "value": 27,
                "doc": null
            },
            {
                "name": "PREVIEW_CHARCOALDRAWING",
                "value": 28,
                "doc": null
            },
            {
                "name": "PREVIEW_JPEG",
                "value": 29,
                "doc": null
            },
            {
                "name": "RENDERINGINTENT_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "RENDERINGINTENT_SATURATION",
                "value": 1,
                "doc": null
            },
            {
                "name": "RENDERINGINTENT_PERCEPTUAL",
                "value": 2,
                "doc": null
            },
            {
                "name": "RENDERINGINTENT_ABSOLUTE",
                "value": 3,
                "doc": null
            },
            {
                "name": "RENDERINGINTENT_RELATIVE",
                "value": 4,
                "doc": null
            },
            {
                "name": "INTERLACE_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "INTERLACE_NO",
                "value": 1,
                "doc": null
            },
            {
                "name": "INTERLACE_LINE",
                "value": 2,
                "doc": null
            },
            {
                "name": "INTERLACE_PLANE",
                "value": 3,
                "doc": null
            },
            {
                "name": "INTERLACE_PARTITION",
                "value": 4,
                "doc": null
            },
            {
                "name": "INTERLACE_GIF",
                "value": 5,
                "doc": null
            },
            {
                "name": "INTERLACE_JPEG",
                "value": 6,
                "doc": null
            },
            {
                "name": "INTERLACE_PNG",
                "value": 7,
                "doc": null
            },
            {
                "name": "FILLRULE_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "FILLRULE_EVENODD",
                "value": 1,
                "doc": null
            },
            {
                "name": "FILLRULE_NONZERO",
                "value": 2,
                "doc": null
            },
            {
                "name": "PATHUNITS_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "PATHUNITS_USERSPACE",
                "value": 1,
                "doc": null
            },
            {
                "name": "PATHUNITS_USERSPACEONUSE",
                "value": 2,
                "doc": null
            },
            {
                "name": "PATHUNITS_OBJECTBOUNDINGBOX",
                "value": 3,
                "doc": null
            },
            {
                "name": "LINECAP_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "LINECAP_BUTT",
                "value": 1,
                "doc": null
            },
            {
                "name": "LINECAP_ROUND",
                "value": 2,
                "doc": null
            },
            {
                "name": "LINECAP_SQUARE",
                "value": 3,
                "doc": null
            },
            {
                "name": "LINEJOIN_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "LINEJOIN_MITER",
                "value": 1,
                "doc": null
            },
            {
                "name": "LINEJOIN_ROUND",
                "value": 2,
                "doc": null
            },
            {
                "name": "LINEJOIN_BEVEL",
                "value": 3,
                "doc": null
            },
            {
                "name": "RESOURCETYPE_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "RESOURCETYPE_AREA",
                "value": 1,
                "doc": null
            },
            {
                "name": "RESOURCETYPE_DISK",
                "value": 2,
                "doc": null
            },
            {
                "name": "RESOURCETYPE_FILE",
                "value": 3,
                "doc": null
            },
            {
                "name": "RESOURCETYPE_MAP",
                "value": 4,
                "doc": null
            },
            {
                "name": "RESOURCETYPE_MEMORY",
                "value": 5,
                "doc": null
            },
            {
                "name": "DISPOSE_UNRECOGNIZED",
                "value": 0,
                "doc": null
            },
            {
                "name": "DISPOSE_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "DISPOSE_NONE",
                "value": 1,
                "doc": null
            },
            {
                "name": "DISPOSE_BACKGROUND",
                "value": 2,
                "doc": null
            },
            {
                "name": "DISPOSE_PREVIOUS",
                "value": 3,
                "doc": null
            },
            {
                "name": "INTERPOLATE_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "INTERPOLATE_AVERAGE",
                "value": 1,
                "doc": null
            },
            {
                "name": "INTERPOLATE_BICUBIC",
                "value": 2,
                "doc": null
            },
            {
                "name": "INTERPOLATE_BILINEAR",
                "value": 3,
                "doc": null
            },
            {
                "name": "INTERPOLATE_FILTER",
                "value": 4,
                "doc": null
            },
            {
                "name": "INTERPOLATE_INTEGER",
                "value": 5,
                "doc": null
            },
            {
                "name": "INTERPOLATE_MESH",
                "value": 6,
                "doc": null
            },
            {
                "name": "INTERPOLATE_NEARESTNEIGHBOR",
                "value": 7,
                "doc": null
            },
            {
                "name": "INTERPOLATE_SPLINE",
                "value": 8,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_COALESCE",
                "value": 1,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_COMPAREANY",
                "value": 2,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_COMPARECLEAR",
                "value": 3,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_COMPAREOVERLAY",
                "value": 4,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_DISPOSE",
                "value": 5,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_OPTIMIZE",
                "value": 6,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_OPTIMIZEPLUS",
                "value": 8,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_OPTIMIZETRANS",
                "value": 9,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_COMPOSITE",
                "value": 12,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_OPTIMIZEIMAGE",
                "value": 7,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_REMOVEDUPS",
                "value": 10,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_REMOVEZERO",
                "value": 11,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_MERGE",
                "value": 13,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_FLATTEN",
                "value": 14,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_MOSAIC",
                "value": 15,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_TRIMBOUNDS",
                "value": 16,
                "doc": null
            },
            {
                "name": "ORIENTATION_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "ORIENTATION_TOPLEFT",
                "value": 1,
                "doc": null
            },
            {
                "name": "ORIENTATION_TOPRIGHT",
                "value": 2,
                "doc": null
            },
            {
                "name": "ORIENTATION_BOTTOMRIGHT",
                "value": 3,
                "doc": null
            },
            {
                "name": "ORIENTATION_BOTTOMLEFT",
                "value": 4,
                "doc": null
            },
            {
                "name": "ORIENTATION_LEFTTOP",
                "value": 5,
                "doc": null
            },
            {
                "name": "ORIENTATION_RIGHTTOP",
                "value": 6,
                "doc": null
            },
            {
                "name": "ORIENTATION_RIGHTBOTTOM",
                "value": 7,
                "doc": null
            },
            {
                "name": "ORIENTATION_LEFTBOTTOM",
                "value": 8,
                "doc": null
            },
            {
                "name": "DISTORTION_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "DISTORTION_AFFINE",
                "value": 1,
                "doc": null
            },
            {
                "name": "DISTORTION_AFFINEPROJECTION",
                "value": 2,
                "doc": null
            },
            {
                "name": "DISTORTION_ARC",
                "value": 9,
                "doc": null
            },
            {
                "name": "DISTORTION_BILINEAR",
                "value": 6,
                "doc": null
            },
            {
                "name": "DISTORTION_PERSPECTIVE",
                "value": 4,
                "doc": null
            },
            {
                "name": "DISTORTION_PERSPECTIVEPROJECTION",
                "value": 5,
                "doc": null
            },
            {
                "name": "DISTORTION_SCALEROTATETRANSLATE",
                "value": 3,
                "doc": null
            },
            {
                "name": "DISTORTION_POLYNOMIAL",
                "value": 8,
                "doc": null
            },
            {
                "name": "DISTORTION_POLAR",
                "value": 10,
                "doc": null
            },
            {
                "name": "DISTORTION_DEPOLAR",
                "value": 11,
                "doc": null
            },
            {
                "name": "DISTORTION_BARREL",
                "value": 14,
                "doc": null
            },
            {
                "name": "DISTORTION_BARRELINVERSE",
                "value": 15,
                "doc": null
            },
            {
                "name": "DISTORTION_SHEPARDS",
                "value": 16,
                "doc": null
            },
            {
                "name": "DISTORTION_SENTINEL",
                "value": 18,
                "doc": null
            },
            {
                "name": "DISTORTION_BILINEARFORWARD",
                "value": 6,
                "doc": null
            },
            {
                "name": "DISTORTION_BILINEARREVERSE",
                "value": 7,
                "doc": null
            },
            {
                "name": "DISTORTION_RESIZE",
                "value": 17,
                "doc": null
            },
            {
                "name": "DISTORTION_CYLINDER2PLANE",
                "value": 12,
                "doc": null
            },
            {
                "name": "DISTORTION_PLANE2CYLINDER",
                "value": 13,
                "doc": null
            },
            {
                "name": "ALPHACHANNEL_ACTIVATE",
                "value": 1,
                "doc": null
            },
            {
                "name": "ALPHACHANNEL_DEACTIVATE",
                "value": 4,
                "doc": null
            },
            {
                "name": "ALPHACHANNEL_RESET",
                "value": 7,
                "doc": null
            },
            {
                "name": "ALPHACHANNEL_SET",
                "value": 8,
                "doc": null
            },
            {
                "name": "ALPHACHANNEL_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "ALPHACHANNEL_COPY",
                "value": 3,
                "doc": null
            },
            {
                "name": "ALPHACHANNEL_EXTRACT",
                "value": 5,
                "doc": null
            },
            {
                "name": "ALPHACHANNEL_OPAQUE",
                "value": 6,
                "doc": null
            },
            {
                "name": "ALPHACHANNEL_SHAPE",
                "value": 9,
                "doc": null
            },
            {
                "name": "ALPHACHANNEL_TRANSPARENT",
                "value": 10,
                "doc": null
            },
            {
                "name": "SPARSECOLORMETHOD_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "SPARSECOLORMETHOD_BARYCENTRIC",
                "value": 1,
                "doc": null
            },
            {
                "name": "SPARSECOLORMETHOD_BILINEAR",
                "value": 7,
                "doc": null
            },
            {
                "name": "SPARSECOLORMETHOD_POLYNOMIAL",
                "value": 8,
                "doc": null
            },
            {
                "name": "SPARSECOLORMETHOD_SPEPARDS",
                "value": 16,
                "doc": null
            },
            {
                "name": "SPARSECOLORMETHOD_VORONOI",
                "value": 18,
                "doc": null
            },
            {
                "name": "DITHERMETHOD_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "DITHERMETHOD_NO",
                "value": 1,
                "doc": null
            },
            {
                "name": "DITHERMETHOD_RIEMERSMA",
                "value": 2,
                "doc": null
            },
            {
                "name": "DITHERMETHOD_FLOYDSTEINBERG",
                "value": 3,
                "doc": null
            },
            {
                "name": "FUNCTION_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "FUNCTION_POLYNOMIAL",
                "value": 1,
                "doc": null
            },
            {
                "name": "FUNCTION_SINUSOID",
                "value": 2,
                "doc": null
            }
        ]
    },
    {
        "stmtType": "Class",
        "name": "ImagickDraw",
        "fqn": "\\ImagickDraw",
        "type": 0,
        "extends": "",
        "methods": [
            {
                "name": "resetvectorgraphics",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "gettextkerning",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "settextkerning",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "kerning",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * @param $kerning\r\n *\/"
            },
            {
                "name": "gettextinterwordspacing",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "settextinterwordspacing",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "spacing",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * @param $spacing\r\n *\/"
            },
            {
                "name": "gettextinterlinespacing",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "settextinterlinespacing",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "spacing",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * @param $spacing\r\n *\/"
            },
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * The ImagickDraw constructor\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.construct.php\r\n *\/"
            },
            {
                "name": "setfillcolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fill_pixel",
                        "type": "ImagickPixel",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the fill color to be used for drawing filled objects\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setfillcolor.php\r\n * @param ImagickPixel $fill_pixel <p>\r\n * ImagickPixel to use to set the color\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "setfillalpha",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "opacity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the opacity to use when drawing using the fill color or fill texture\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setfillalpha.php\r\n * @param float $opacity <p>\r\n * fill alpha\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "setresolution",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x_resolution",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y_resolution",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * @param $x_resolution\r\n * @param $y_resolution\r\n *\/"
            },
            {
                "name": "setstrokecolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "stroke_pixel",
                        "type": "ImagickPixel",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the color used for stroking object outlines\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setstrokecolor.php\r\n * @param ImagickPixel $stroke_pixel <p>\r\n * the stroke color\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "setstrokealpha",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "opacity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Specifies the opacity of stroked object outlines\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setstrokealpha.php\r\n * @param float $opacity <p>\r\n * opacity\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "setstrokewidth",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "stroke_width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the width of the stroke used to draw object outlines\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setstrokewidth.php\r\n * @param float $stroke_width <p>\r\n * stroke width\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "clear",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Clears the ImagickDraw\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.clear.php\r\n * @return bool an ImagickDraw object.\r\n *\/"
            },
            {
                "name": "circle",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "ox",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "oy",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "px",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "py",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a circle\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.circle.php\r\n * @param float $ox <p>\r\n * origin x coordinate\r\n * <\/p>\r\n * @param float $oy <p>\r\n * origin y coordinate\r\n * <\/p>\r\n * @param float $px <p>\r\n * perimeter x coordinate\r\n * <\/p>\r\n * @param float $py <p>\r\n * perimeter y coordinate\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "annotation",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "text",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws text on the image\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.annotation.php\r\n * @param float $x <p>\r\n * The x coordinate where text is drawn\r\n * <\/p>\r\n * @param float $y <p>\r\n * The y coordinate where text is drawn\r\n * <\/p>\r\n * @param string $text <p>\r\n * The text to draw on the image\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "settextantialias",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "antiAlias",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Controls whether text is antialiased\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.settextantialias.php\r\n * @param bool $antiAlias\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "settextencoding",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "encoding",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Specifies specifies the text code set\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.settextencoding.php\r\n * @param string $encoding <p>\r\n * the encoding name\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "setfont",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "font_name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the fully-specified font to use when annotating with text\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setfont.php\r\n * @param string $font_name\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setfontfamily",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "font_family",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the font family to use when annotating with text\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setfontfamily.php\r\n * @param string $font_family <p>\r\n * the font family\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setfontsize",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "pointsize",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the font pointsize to use when annotating with text\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setfontsize.php\r\n * @param float $pointsize <p>\r\n * the point size\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "setfontstyle",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "style",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the font style to use when annotating with text\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setfontstyle.php\r\n * @param int $style <p>\r\n * STYLETYPE_ constant\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "setfontweight",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "font_weight",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the font weight\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setfontweight.php\r\n * @param int $font_weight\r\n * @return bool\r\n *\/"
            },
            {
                "name": "getfont",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the font\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getfont.php\r\n * @return string a string on success and false if no font is set.\r\n *\/"
            },
            {
                "name": "getfontfamily",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the font family\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getfontfamily.php\r\n * @return string the font family currently selected or false if font family is not set.\r\n *\/"
            },
            {
                "name": "getfontsize",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the font pointsize\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getfontsize.php\r\n * @return float the font size associated with the current ImagickDraw object.\r\n *\/"
            },
            {
                "name": "getfontstyle",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the font style\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getfontstyle.php\r\n * @return int the font style constant (STYLE_) associated with the ImagickDraw object\r\n * or 0 if no style is set.\r\n *\/"
            },
            {
                "name": "getfontweight",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the font weight\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getfontweight.php\r\n * @return int an int on success and 0 if no weight is set.\r\n *\/"
            },
            {
                "name": "destroy",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Frees all associated resources\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.destroy.php\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "rectangle",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a rectangle\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.rectangle.php\r\n * @param float $x1 <p>\r\n * x coordinate of the top left corner\r\n * <\/p>\r\n * @param float $y1 <p>\r\n * y coordinate of the top left corner\r\n * <\/p>\r\n * @param float $x2 <p>\r\n * x coordinate of the bottom right corner\r\n * <\/p>\r\n * @param float $y2 <p>\r\n * y coordinate of the bottom right corner\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "roundrectangle",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rx",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "ry",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a rounded rectangle\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.roundrectangle.php\r\n * @param float $x1 <p>\r\n * x coordinate of the top left corner\r\n * <\/p>\r\n * @param float $y1 <p>\r\n * y coordinate of the top left corner\r\n * <\/p>\r\n * @param float $x2 <p>\r\n * x coordinate of the bottom right\r\n * <\/p>\r\n * @param float $y2 <p>\r\n * y coordinate of the bottom right\r\n * <\/p>\r\n * @param float $rx <p>\r\n * x rounding\r\n * <\/p>\r\n * @param float $ry <p>\r\n * y rounding\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "ellipse",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "ox",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "oy",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rx",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "ry",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "start",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "end",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws an ellipse on the image\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.ellipse.php\r\n * @param float $ox\r\n * @param float $oy\r\n * @param float $rx\r\n * @param float $ry\r\n * @param float $start\r\n * @param float $end\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "skewx",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "degrees",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Skews the current coordinate system in the horizontal direction\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.skewx.php\r\n * @param float $degrees <p>\r\n * degrees to skew\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "skewy",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "degrees",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Skews the current coordinate system in the vertical direction\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.skewy.php\r\n * @param float $degrees <p>\r\n * degrees to skew\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "translate",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Applies a translation to the current coordinate system\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.translate.php\r\n * @param float $x <p>\r\n * horizontal translation\r\n * <\/p>\r\n * @param float $y <p>\r\n * vertical translation\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "line",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "sx",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sy",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "ex",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "ey",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a line\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.line.php\r\n * @param float $sx <p>\r\n * starting x coordinate\r\n * <\/p>\r\n * @param float $sy <p>\r\n * starting y coordinate\r\n * <\/p>\r\n * @param float $ex <p>\r\n * ending x coordinate\r\n * <\/p>\r\n * @param float $ey <p>\r\n * ending y coordinate\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "arc",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "sx",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sy",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "ex",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "ey",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sd",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "ed",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws an arc\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.arc.php\r\n * @param float $sx <p>\r\n * Starting x ordinate of bounding rectangle\r\n * <\/p>\r\n * @param float $sy <p>\r\n * starting y ordinate of bounding rectangle\r\n * <\/p>\r\n * @param float $ex <p>\r\n * ending x ordinate of bounding rectangle\r\n * <\/p>\r\n * @param float $ey <p>\r\n * ending y ordinate of bounding rectangle\r\n * <\/p>\r\n * @param float $sd <p>\r\n * starting degrees of rotation\r\n * <\/p>\r\n * @param float $ed <p>\r\n * ending degrees of rotation\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "matte",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "paintMethod",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Paints on the image's opacity channel\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.matte.php\r\n * @param float $x <p>\r\n * x coordinate of the matte\r\n * <\/p>\r\n * @param float $y <p>\r\n * y coordinate of the matte\r\n * <\/p>\r\n * @param int $paintMethod <p>\r\n * PAINT_ constant\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success or <b>FALSE<\/b> on failure.\r\n *\/"
            },
            {
                "name": "polygon",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "coordinates",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a polygon\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.polygon.php\r\n * @param array $coordinates <p>\r\n * multidimensional array like array( array( 'x' => 3, 'y' => 4 ), array( 'x' => 2, 'y' => 6 ) );\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "point",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a point\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.point.php\r\n * @param float $x <p>\r\n * point's x coordinate\r\n * <\/p>\r\n * @param float $y <p>\r\n * point's y coordinate\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "gettextdecoration",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the text decoration\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.gettextdecoration.php\r\n * @return int one of the DECORATION_ constants\r\n * and 0 if no decoration is set.\r\n *\/"
            },
            {
                "name": "gettextencoding",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the code set used for text annotations\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.gettextencoding.php\r\n * @return string a string specifying the code set\r\n * or false if text encoding is not set.\r\n *\/"
            },
            {
                "name": "getfontstretch",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "setfontstretch",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fontStretch",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the font stretch to use when annotating with text\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setfontstretch.php\r\n * @param int $fontStretch <p>\r\n * STRETCH_ constant\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "setstrokeantialias",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "stroke_antialias",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Controls whether stroked outlines are antialiased\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setstrokeantialias.php\r\n * @param bool $stroke_antialias <p>\r\n * the antialias setting\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "settextalignment",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "alignment",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Specifies a text alignment\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.settextalignment.php\r\n * @param int $alignment <p>\r\n * ALIGN_ constant\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "settextdecoration",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "decoration",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Specifies a decoration\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.settextdecoration.php\r\n * @param int $decoration <p>\r\n * DECORATION_ constant\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "settextundercolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "under_color",
                        "type": "ImagickPixel",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Specifies the color of a background rectangle\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.settextundercolor.php\r\n * @param ImagickPixel $under_color <p>\r\n * the under color\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "setviewbox",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the overall canvas size\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setviewbox.php\r\n * @param int $x1 <p>\r\n * left x coordinate\r\n * <\/p>\r\n * @param int $y1 <p>\r\n * left y coordinate\r\n * <\/p>\r\n * @param int $x2 <p>\r\n * right x coordinate\r\n * <\/p>\r\n * @param int $y2 <p>\r\n * right y coordinate\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "affine",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "affine",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Adjusts the current affine transformation matrix\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.affine.php\r\n * @param array $affine <p>\r\n * Affine matrix parameters\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "bezier",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "coordinates",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a bezier curve\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.bezier.php\r\n * @param array $coordinates <p>\r\n * Multidimensional array like array( array( 'x' => 1, 'y' => 2 ),\r\n * array( 'x' => 3, 'y' => 4 ) )\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "composite",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "compose",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "compositeWand",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Composites an image onto the current image\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.composite.php\r\n * @param int $compose <p>\r\n * composition operator. One of COMPOSITE_ constants\r\n * <\/p>\r\n * @param float $x <p>\r\n * x coordinate of the top left corner\r\n * <\/p>\r\n * @param float $y <p>\r\n * y coordinate of the top left corner\r\n * <\/p>\r\n * @param float $width <p>\r\n * width of the composition image\r\n * <\/p>\r\n * @param float $height <p>\r\n * height of the composition image\r\n * <\/p>\r\n * @param Imagick $compositeWand <p>\r\n * the Imagick object where composition image is taken from\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "color",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "paintMethod",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws color on image\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.color.php\r\n * @param float $x <p>\r\n * x coordinate of the paint\r\n * <\/p>\r\n * @param float $y <p>\r\n * y coordinate of the paint\r\n * <\/p>\r\n * @param int $paintMethod <p>\r\n * one of the PAINT_ constants\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "comment",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "comment",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Adds a comment\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.comment.php\r\n * @param string $comment <p>\r\n * The comment string to add to vector output stream\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "getclippath",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Obtains the current clipping path ID\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getclippath.php\r\n * @return string a string containing the clip path ID or false if no clip path exists.\r\n *\/"
            },
            {
                "name": "getcliprule",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the current polygon fill rule\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getcliprule.php\r\n * @return int one of the FILLRULE_ constants.\r\n *\/"
            },
            {
                "name": "getclipunits",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the interpretation of clip path units\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getclipunits.php\r\n * @return int an int on success.\r\n *\/"
            },
            {
                "name": "getfillcolor",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the fill color\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getfillcolor.php\r\n * @return ImagickPixel an ImagickPixel object.\r\n *\/"
            },
            {
                "name": "getfillopacity",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the opacity used when drawing\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getfillopacity.php\r\n * @return float The opacity.\r\n *\/"
            },
            {
                "name": "getfillrule",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the fill rule\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getfillrule.php\r\n * @return int a FILLRULE_ constant\r\n *\/"
            },
            {
                "name": "getgravity",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the text placement gravity\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getgravity.php\r\n * @return int a GRAVITY_ constant on success and 0 if no gravity is set.\r\n *\/"
            },
            {
                "name": "getstrokeantialias",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the current stroke antialias setting\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getstrokeantialias.php\r\n * @return bool <b>TRUE<\/b> if antialiasing is on and false if it is off.\r\n *\/"
            },
            {
                "name": "getstrokecolor",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the color used for stroking object outlines\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getstrokecolor.php\r\n * @return ImagickPixel an ImagickPixel object which describes the color.\r\n *\/"
            },
            {
                "name": "getstrokedasharray",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns an array representing the pattern of dashes and gaps used to stroke paths\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getstrokedasharray.php\r\n * @return array an array on success and empty array if not set.\r\n *\/"
            },
            {
                "name": "getstrokedashoffset",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the offset into the dash pattern to start the dash\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getstrokedashoffset.php\r\n * @return float a float representing the offset and 0 if it's not set.\r\n *\/"
            },
            {
                "name": "getstrokelinecap",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the shape to be used at the end of open subpaths when they are stroked\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getstrokelinecap.php\r\n * @return int one of the LINECAP_ constants or 0 if stroke linecap is not set.\r\n *\/"
            },
            {
                "name": "getstrokelinejoin",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the shape to be used at the corners of paths when they are stroked\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getstrokelinejoin.php\r\n * @return int one of the LINEJOIN_ constants or 0 if stroke line join is not set.\r\n *\/"
            },
            {
                "name": "getstrokemiterlimit",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the stroke miter limit\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getstrokemiterlimit.php\r\n * @return int an int describing the miter limit\r\n * and 0 if no miter limit is set.\r\n *\/"
            },
            {
                "name": "getstrokeopacity",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the opacity of stroked object outlines\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getstrokeopacity.php\r\n * @return float a double describing the opacity.\r\n *\/"
            },
            {
                "name": "getstrokewidth",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the width of the stroke used to draw object outlines\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getstrokewidth.php\r\n * @return float a double describing the stroke width.\r\n *\/"
            },
            {
                "name": "gettextalignment",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the text alignment\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.gettextalignment.php\r\n * @return int one of the ALIGN_ constants and 0 if no align is set.\r\n *\/"
            },
            {
                "name": "gettextantialias",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the current text antialias setting\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.gettextantialias.php\r\n * @return bool <b>TRUE<\/b> if text is antialiased and false if not.\r\n *\/"
            },
            {
                "name": "getvectorgraphics",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns a string containing vector graphics\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.getvectorgraphics.php\r\n * @return string a string containing the vector graphics.\r\n *\/"
            },
            {
                "name": "gettextundercolor",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the text under color\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.gettextundercolor.php\r\n * @return ImagickPixel an ImagickPixel object describing the color.\r\n *\/"
            },
            {
                "name": "pathclose",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Adds a path element to the current path\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pathclose.php\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pathcurvetoabsolute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a cubic Bezier curve\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pathcurvetoabsolute.php\r\n * @param float $x1 <p>\r\n * x coordinate of the first control point\r\n * <\/p>\r\n * @param float $y1 <p>\r\n * y coordinate of the first control point\r\n * <\/p>\r\n * @param float $x2 <p>\r\n * x coordinate of the second control point\r\n * <\/p>\r\n * @param float $y2 <p>\r\n * y coordinate of the first control point\r\n * <\/p>\r\n * @param float $x <p>\r\n * x coordinate of the curve end\r\n * <\/p>\r\n * @param float $y <p>\r\n * y coordinate of the curve end\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pathcurvetorelative",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a cubic Bezier curve\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pathcurvetorelative.php\r\n * @param float $x1 <p>\r\n * x coordinate of starting control point\r\n * <\/p>\r\n * @param float $y1 <p>\r\n * y coordinate of starting control point\r\n * <\/p>\r\n * @param float $x2 <p>\r\n * x coordinate of ending control point\r\n * <\/p>\r\n * @param float $y2 <p>\r\n * y coordinate of ending control point\r\n * <\/p>\r\n * @param float $x <p>\r\n * ending x coordinate\r\n * <\/p>\r\n * @param float $y <p>\r\n * ending y coordinate\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pathcurvetoquadraticbezierabsolute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a quadratic Bezier curve\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pathcurvetoquadraticbezierabsolute.php\r\n * @param float $x1 <p>\r\n * x coordinate of the control point\r\n * <\/p>\r\n * @param float $y1 <p>\r\n * y coordinate of the control point\r\n * <\/p>\r\n * @param float $x <p>\r\n * x coordinate of the end point\r\n * <\/p>\r\n * @param float $y <p>\r\n * y coordinate of the end point\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pathcurvetoquadraticbezierrelative",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a quadratic Bezier curve\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pathcurvetoquadraticbezierrelative.php\r\n * @param float $x1 <p>\r\n * starting x coordinate\r\n * <\/p>\r\n * @param float $y1 <p>\r\n * starting y coordinate\r\n * <\/p>\r\n * @param float $x <p>\r\n * ending x coordinate\r\n * <\/p>\r\n * @param float $y <p>\r\n * ending y coordinate\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pathcurvetoquadraticbeziersmoothabsolute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a quadratic Bezier curve\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pathcurvetoquadraticbeziersmoothabsolute.php\r\n * @param float $x <p>\r\n * ending x coordinate\r\n * <\/p>\r\n * @param float $y <p>\r\n * ending y coordinate\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pathcurvetoquadraticbeziersmoothrelative",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a quadratic Bezier curve\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pathcurvetoquadraticbeziersmoothrelative.php\r\n * @param float $x <p>\r\n * ending x coordinate\r\n * <\/p>\r\n * @param float $y <p>\r\n * ending y coordinate\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pathcurvetosmoothabsolute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a cubic Bezier curve\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pathcurvetosmoothabsolute.php\r\n * @param float $x2 <p>\r\n * x coordinate of the second control point\r\n * <\/p>\r\n * @param float $y2 <p>\r\n * y coordinate of the second control point\r\n * <\/p>\r\n * @param float $x <p>\r\n * x coordinate of the ending point\r\n * <\/p>\r\n * @param float $y <p>\r\n * y coordinate of the ending point\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pathcurvetosmoothrelative",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a cubic Bezier curve\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pathcurvetosmoothrelative.php\r\n * @param float $x2 <p>\r\n * x coordinate of the second control point\r\n * <\/p>\r\n * @param float $y2 <p>\r\n * y coordinate of the second control point\r\n * <\/p>\r\n * @param float $x <p>\r\n * x coordinate of the ending point\r\n * <\/p>\r\n * @param float $y <p>\r\n * y coordinate of the ending point\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pathellipticarcabsolute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "rx",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "ry",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x_axis_rotation",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "large_arc_flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sweep_flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws an elliptical arc\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pathellipticarcabsolute.php\r\n * @param float $rx <p>\r\n * x radius\r\n * <\/p>\r\n * @param float $ry <p>\r\n * y radius\r\n * <\/p>\r\n * @param float $x_axis_rotation <p>\r\n * x axis rotation\r\n * <\/p>\r\n * @param bool $large_arc_flag <p>\r\n * large arc flag\r\n * <\/p>\r\n * @param bool $sweep_flag <p>\r\n * sweep flag\r\n * <\/p>\r\n * @param float $x <p>\r\n * x coordinate\r\n * <\/p>\r\n * @param float $y <p>\r\n * y coordinate\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pathellipticarcrelative",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "rx",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "ry",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x_axis_rotation",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "large_arc_flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sweep_flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws an elliptical arc\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pathellipticarcrelative.php\r\n * @param float $rx <p>\r\n * x radius\r\n * <\/p>\r\n * @param float $ry <p>\r\n * y radius\r\n * <\/p>\r\n * @param float $x_axis_rotation <p>\r\n * x axis rotation\r\n * <\/p>\r\n * @param bool $large_arc_flag <p>\r\n * large arc flag\r\n * <\/p>\r\n * @param bool $sweep_flag <p>\r\n * sweep flag\r\n * <\/p>\r\n * @param float $x <p>\r\n * x coordinate\r\n * <\/p>\r\n * @param float $y <p>\r\n * y coordinate\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pathfinish",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Terminates the current path\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pathfinish.php\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pathlinetoabsolute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a line path\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pathlinetoabsolute.php\r\n * @param float $x <p>\r\n * starting x coordinate\r\n * <\/p>\r\n * @param float $y <p>\r\n * ending x coordinate\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pathlinetorelative",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a line path\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pathlinetorelative.php\r\n * @param float $x <p>\r\n * starting x coordinate\r\n * <\/p>\r\n * @param float $y <p>\r\n * starting y coordinate\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pathlinetohorizontalabsolute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a horizontal line path\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pathlinetohorizontalabsolute.php\r\n * @param float $x <p>\r\n * x coordinate\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pathlinetohorizontalrelative",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a horizontal line\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pathlinetohorizontalrelative.php\r\n * @param float $x <p>\r\n * x coordinate\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pathlinetoverticalabsolute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a vertical line\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pathlinetoverticalabsolute.php\r\n * @param float $y <p>\r\n * y coordinate\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pathlinetoverticalrelative",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a vertical line path\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pathlinetoverticalrelative.php\r\n * @param float $y <p>\r\n * y coordinate\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pathmovetoabsolute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Starts a new sub-path\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pathmovetoabsolute.php\r\n * @param float $x <p>\r\n * x coordinate of the starting point\r\n * <\/p>\r\n * @param float $y <p>\r\n * y coordinate of the starting point\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pathmovetorelative",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Starts a new sub-path\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pathmovetorelative.php\r\n * @param float $x <p>\r\n * target x coordinate\r\n * <\/p>\r\n * @param float $y <p>\r\n * target y coordinate\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pathstart",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Declares the start of a path drawing list\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pathstart.php\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "polyline",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "coordinates",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Draws a polyline\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.polyline.php\r\n * @param array $coordinates <p>\r\n * array of x and y coordinates: array( array( 'x' => 4, 'y' => 6 ), array( 'x' => 8, 'y' => 10 ) )\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "popclippath",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Terminates a clip path definition\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.popclippath.php\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "popdefs",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Terminates a definition list\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.popdefs.php\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "poppattern",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Terminates a pattern definition\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.poppattern.php\r\n * @return bool <b>TRUE<\/b> on success or <b>FALSE<\/b> on failure.\r\n *\/"
            },
            {
                "name": "pushclippath",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "clip_mask_id",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Starts a clip path definition\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pushclippath.php\r\n * @param string $clip_mask_id <p>\r\n * Clip mask Id\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pushdefs",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Indicates that following commands create named elements for early processing\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pushdefs.php\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "pushpattern",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "pattern_id",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Indicates that subsequent commands up to a ImagickDraw::opPattern() command comprise the definition of a named pattern\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pushpattern.php\r\n * @param string $pattern_id <p>\r\n * the pattern Id\r\n * <\/p>\r\n * @param float $x <p>\r\n * x coordinate of the top-left corner\r\n * <\/p>\r\n * @param float $y <p>\r\n * y coordinate of the top-left corner\r\n * <\/p>\r\n * @param float $width <p>\r\n * width of the pattern\r\n * <\/p>\r\n * @param float $height <p>\r\n * height of the pattern\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success or <b>FALSE<\/b> on failure.\r\n *\/"
            },
            {
                "name": "render",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Renders all preceding drawing commands onto the image\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.render.php\r\n * @return bool <b>TRUE<\/b> on success or <b>FALSE<\/b> on failure.\r\n *\/"
            },
            {
                "name": "rotate",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "degrees",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Applies the specified rotation to the current coordinate space\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.rotate.php\r\n * @param float $degrees <p>\r\n * degrees to rotate\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "scale",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Adjusts the scaling factor\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.scale.php\r\n * @param float $x <p>\r\n * horizontal factor\r\n * <\/p>\r\n * @param float $y <p>\r\n * vertical factor\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "setclippath",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "clip_mask",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Associates a named clipping path with the image\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setclippath.php\r\n * @param string $clip_mask <p>\r\n * the clipping path name\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "setcliprule",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fill_rule",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Set the polygon fill rule to be used by the clipping path\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setcliprule.php\r\n * @param int $fill_rule <p>\r\n * FILLRULE_ constant\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "setclipunits",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "clip_units",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the interpretation of clip path units\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setclipunits.php\r\n * @param int $clip_units <p>\r\n * the number of clip units\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "setfillopacity",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fillOpacity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the opacity to use when drawing using the fill color or fill texture\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setfillopacity.php\r\n * @param float $fillOpacity <p>\r\n * the fill opacity\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "setfillpatternurl",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fill_url",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the URL to use as a fill pattern for filling objects\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setfillpatternurl.php\r\n * @param string $fill_url <p>\r\n * URL to use to obtain fill pattern.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success or <b>FALSE<\/b> on failure.\r\n *\/"
            },
            {
                "name": "setfillrule",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fill_rule",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the fill rule to use while drawing polygons\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setfillrule.php\r\n * @param int $fill_rule <p>\r\n * FILLRULE_ constant\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "setgravity",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "gravity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the text placement gravity\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setgravity.php\r\n * @param int $gravity <p>\r\n * GRAVITY_ constant\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "setstrokepatternurl",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "stroke_url",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the pattern used for stroking object outlines\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setstrokepatternurl.php\r\n * @param string $stroke_url <p>\r\n * stroke URL\r\n * <\/p>\r\n * @return bool imagick.imagickdraw.return.success;\r\n *\/"
            },
            {
                "name": "setstrokedashoffset",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "dash_offset",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Specifies the offset into the dash pattern to start the dash\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setstrokedashoffset.php\r\n * @param float $dash_offset <p>\r\n * dash offset\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "setstrokelinecap",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "linecap",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Specifies the shape to be used at the end of open subpaths when they are stroked\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setstrokelinecap.php\r\n * @param int $linecap <p>\r\n * LINECAP_ constant\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "setstrokelinejoin",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "linejoin",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Specifies the shape to be used at the corners of paths when they are stroked\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setstrokelinejoin.php\r\n * @param int $linejoin <p>\r\n * LINEJOIN_ constant\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "setstrokemiterlimit",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "miterlimit",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Specifies the miter limit\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setstrokemiterlimit.php\r\n * @param int $miterlimit <p>\r\n * the miter limit\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "setstrokeopacity",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "stroke_opacity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Specifies the opacity of stroked object outlines\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setstrokeopacity.php\r\n * @param float $stroke_opacity <p>\r\n * stroke opacity. 1.0 is fully opaque\r\n * <\/p>\r\n * @return bool No value is returned.\r\n *\/"
            },
            {
                "name": "setvectorgraphics",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "xml",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the vector graphics\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setvectorgraphics.php\r\n * @param string $xml <p>\r\n * xml containing the vector graphics\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success or <b>FALSE<\/b> on failure.\r\n *\/"
            },
            {
                "name": "pop",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Destroys the current ImagickDraw in the stack, and returns to the previously pushed ImagickDraw\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.pop.php\r\n * @return bool <b>TRUE<\/b> on success and false on failure.\r\n *\/"
            },
            {
                "name": "push",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Clones the current ImagickDraw and pushes it to the stack\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.push.php\r\n * @return bool <b>TRUE<\/b> on success or <b>FALSE<\/b> on failure.\r\n *\/"
            },
            {
                "name": "setstrokedasharray",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "dashArray",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Specifies the pattern of dashes and gaps used to stroke paths\r\n * @link http:\/\/php.net\/manual\/en\/imagickdraw.setstrokedasharray.php\r\n * @param array $dashArray <p>\r\n * array of floats\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "ImagickPixelIterator",
        "fqn": "\\ImagickPixelIterator",
        "type": 0,
        "extends": "",
        "methods": [
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "wand",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * The ImagickPixelIterator constructor\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixeliterator.construct.php\r\n * @param Imagick $wand\r\n *\/"
            },
            {
                "name": "newpixeliterator",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "wand",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns a new pixel iterator\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixeliterator.newpixeliterator.php\r\n * @param Imagick $wand\r\n * @return bool <b>TRUE<\/b> on success. Throwing ImagickPixelIteratorException.\r\n *\/"
            },
            {
                "name": "newpixelregioniterator",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "wand",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns a new pixel iterator\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixeliterator.newpixelregioniterator.php\r\n * @param Imagick $wand\r\n * @param int $x\r\n * @param int $y\r\n * @param int $columns\r\n * @param int $rows\r\n * @return bool a new ImagickPixelIterator on success; on failure, throws\r\n * ImagickPixelIteratorException.\r\n *\/"
            },
            {
                "name": "getiteratorrow",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the current pixel iterator row\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixeliterator.getiteratorrow.php\r\n * @return int the integer offset of the row, throwing\r\n * ImagickPixelIteratorException on error.\r\n *\/"
            },
            {
                "name": "setiteratorrow",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "row",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Set the pixel iterator row\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixeliterator.setiteratorrow.php\r\n * @param int $row\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setiteratorfirstrow",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the pixel iterator to the first pixel row\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixeliterator.setiteratorfirstrow.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "setiteratorlastrow",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the pixel iterator to the last pixel row\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixeliterator.setiteratorlastrow.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getpreviousiteratorrow",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the previous row\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixeliterator.getpreviousiteratorrow.php\r\n * @return array the previous row as an array of ImagickPixelWand objects from the\r\n * ImagickPixelIterator, throwing ImagickPixelIteratorException on error.\r\n *\/"
            },
            {
                "name": "getcurrentiteratorrow",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the current row of ImagickPixel objects\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixeliterator.getcurrentiteratorrow.php\r\n * @return array a row as an array of ImagickPixel objects that can themselves be iterated.\r\n *\/"
            },
            {
                "name": "getnextiteratorrow",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the next row of the pixel iterator\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixeliterator.getnextiteratorrow.php\r\n * @return array the next row as an array of ImagickPixel objects, throwing\r\n * ImagickPixelIteratorException on error.\r\n *\/"
            },
            {
                "name": "resetiterator",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Resets the pixel iterator\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixeliterator.resetiterator.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "synciterator",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Syncs the pixel iterator\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixeliterator.synciterator.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "destroy",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Deallocates resources associated with a PixelIterator\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixeliterator.destroy.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "clear",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Clear resources associated with a PixelIterator\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixeliterator.clear.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getpixeliterator",
                "type": 9,
                "byRef": false,
                "params": [
                    {
                        "name": "Imagick",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * @param Imagick $Imagick\r\n *\/"
            },
            {
                "name": "getpixelregioniterator",
                "type": 9,
                "byRef": false,
                "params": [
                    {
                        "name": "Imagick",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * @param Imagick $Imagick\r\n * @param $x\r\n * @param $y\r\n * @param $columns\r\n * @param $rows\r\n *\/"
            },
            {
                "name": "key",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "next",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "rewind",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "current",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "valid",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "ImagickPixel",
        "fqn": "\\ImagickPixel",
        "type": 0,
        "extends": "",
        "methods": [
            {
                "name": "gethsl",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the normalized HSL color of the ImagickPixel object\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixel.gethsl.php\r\n * @return array the HSL value in an array with the keys \"hue\",\r\n * \"saturation\", and \"luminosity\". Throws ImagickPixelException on failure.\r\n *\/"
            },
            {
                "name": "sethsl",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "hue",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "saturation",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "luminosity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the normalized HSL color\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixel.sethsl.php\r\n * @param float $hue <p>\r\n * The normalized value for hue, described as a fractional arc\r\n * (between 0 and 1) of the hue circle, where the zero value is\r\n * red.\r\n * <\/p>\r\n * @param float $saturation <p>\r\n * The normalized value for saturation, with 1 as full saturation.\r\n * <\/p>\r\n * @param float $luminosity <p>\r\n * The normalized value for luminosity, on a scale from black at\r\n * 0 to white at 1, with the full HS value at 0.5 luminosity.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getcolorvaluequantum",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "setcolorvaluequantum",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "color_value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * @param $color_value\r\n *\/"
            },
            {
                "name": "getindex",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "setindex",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "index",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * @param $index\r\n *\/"
            },
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "color",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * The ImagickPixel constructor\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixel.construct.php\r\n * @param string $color [optional] <p>\r\n * The optional color string to use as the initial value of this object.\r\n * <\/p>\r\n *\/"
            },
            {
                "name": "setcolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "color",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the color\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixel.setcolor.php\r\n * @param string $color <p>\r\n * The color definition to use in order to initialise the\r\n * ImagickPixel object.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> if the specified color was set, <b>FALSE<\/b> otherwise.\r\n *\/"
            },
            {
                "name": "setcolorvalue",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "color",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Sets the normalized value of one of the channels\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixel.setcolorvalue.php\r\n * @param int $color <p>\r\n * One of the Imagick color constants e.g. \\Imagick::COLOR_GREEN or \\Imagick::COLOR_ALPHA.\r\n * <\/p>\r\n * @param float $value <p>\r\n * The value to set this channel to, ranging from 0 to 1.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getcolorvalue",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "color",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Gets the normalized value of the provided color channel\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixel.getcolorvalue.php\r\n * @param int $color <p>\r\n * The color to get the value of, specified as one of the Imagick color\r\n * constants. This can be one of the RGB colors, CMYK colors, alpha and\r\n * opacity e.g (Imagick::COLOR_BLUE, Imagick::COLOR_MAGENTA).\r\n * <\/p>\r\n * @return float The value of the channel, as a normalized floating-point number, throwing\r\n * ImagickPixelException on error.\r\n *\/"
            },
            {
                "name": "clear",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Clears resources associated with this object\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixel.clear.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "destroy",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Deallocates resources associated with this object\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixel.destroy.php\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "issimilar",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "color",
                        "type": "ImagickPixel",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fuzz",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Check the distance between this color and another\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixel.issimilar.php\r\n * @param ImagickPixel $color <p>\r\n * The ImagickPixel object to compare this object against.\r\n * <\/p>\r\n * @param float $fuzz <p>\r\n * The maximum distance within which to consider these colors as similar.\r\n * The theoretical maximum for this value is the square root of three\r\n * (1.732).\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "ispixelsimilar",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "color",
                        "type": "ImagickPixel",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fuzz",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (No version information available, might only be in SVN)<br\/>\r\n * Check the distance between this color and another\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixel.ispixelsimilar.php\r\n * @param ImagickPixel $color <p>\r\n * The ImagickPixel object to compare this object against.\r\n * <\/p>\r\n * @param float $fuzz <p>\r\n * The maximum distance within which to consider these colors as similar.\r\n * The theoretical maximum for this value is the square root of three\r\n * (1.732).\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success.\r\n *\/"
            },
            {
                "name": "getcolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "normalized",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the color\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixel.getcolor.php\r\n * @param bool $normalized [optional] <p>\r\n * Normalize the color values\r\n * <\/p>\r\n * @return array An array of channel values, each normalized if <b>TRUE<\/b> is given as param. Throws\r\n * ImagickPixelException on error.\r\n *\/"
            },
            {
                "name": "getcolorasstring",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.1.0)<br\/>\r\n * Returns the color as a string\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixel.getcolorasstring.php\r\n * @return string the color of the ImagickPixel object as a string.\r\n *\/"
            },
            {
                "name": "getcolorcount",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PECL imagick 2.0.0)<br\/>\r\n * Returns the color count associated with this color\r\n * @link http:\/\/php.net\/manual\/en\/imagickpixel.getcolorcount.php\r\n * @return int the color count as an integer on success, throws\r\n * ImagickPixelException on failure.\r\n *\/"
            },
            {
                "name": "setcolorcount",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "colorCount",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * @param $colorCount\r\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    }
]
