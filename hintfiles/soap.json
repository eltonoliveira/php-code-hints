[
    {
        "stmtType": "Class",
        "name": "SoapClient",
        "fqn": "\\SoapClient",
        "type": 0,
        "extends": "",
        "methods": [
            {
                "name": "SoapClient",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "wsdl",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "options",
                        "type": "array",
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * SoapClient constructor\r\n * @link http:\/\/php.net\/manual\/en\/soapclient.soapclient.php\r\n * @param mixed $wsdl <p>\r\n * URI of the WSDL file or <b>NULL<\/b> if working in\r\n * non-WSDL mode.\r\n * <\/p>\r\n * <p>\r\n * During development, WSDL caching may be disabled by the\r\n * use of the soap.wsdl_cache_ttl <i>php.ini<\/i> setting\r\n * otherwise changes made to the WSDL file will have no effect until\r\n * soap.wsdl_cache_ttl is expired.\r\n * <\/p>\r\n * @param array $options [optional] <p>\r\n * An array of options. If working in WSDL mode, this parameter is optional.\r\n * If working in non-WSDL mode, the location and\r\n * uri options must be set, where location\r\n * is the URL of the SOAP server to send the request to, and uri\r\n * is the target namespace of the SOAP service.\r\n * <\/p>\r\n * <p>\r\n * The style and use options only work in\r\n * non-WSDL mode. In WSDL mode, they come from the WSDL file.\r\n * <\/p>\r\n * <p>\r\n * The soap_version option should be one of either\r\n * <b>SOAP_1_1<\/b> or <b>SOAP_1_2<\/b> to\r\n * select SOAP 1.1 or 1.2, respectively. If omitted, 1.1 is used.\r\n * <\/p>\r\n * <p>\r\n * For HTTP authentication, the login and\r\n * password options can be used to supply credentials.\r\n * For making an HTTP connection through\r\n * a proxy server, the options proxy_host,\r\n * proxy_port, proxy_login\r\n * and proxy_password are also available.\r\n * For HTTPS client certificate authentication use\r\n * local_cert and passphrase options. An\r\n * authentication may be supplied in the authentication\r\n * option. The authentication method may be either\r\n * <b>SOAP_AUTHENTICATION_BASIC<\/b> (default) or\r\n * <b>SOAP_AUTHENTICATION_DIGEST<\/b>.\r\n * <\/p>\r\n * <p>\r\n * The compression option allows to use compression\r\n * of HTTP SOAP requests and responses.\r\n * <\/p>\r\n * <p>\r\n * The encoding option defines internal character\r\n * encoding. This option does not change the encoding of SOAP requests (it is\r\n * always utf-8), but converts strings into it.\r\n * <\/p>\r\n * <p>\r\n * The trace option enables tracing of request so faults\r\n * can be backtraced. This defaults to <b>FALSE<\/b>\r\n * <\/p>\r\n * <p>\r\n * The classmap option can be used to map some WSDL\r\n * types to PHP classes. This option must be an array with WSDL types\r\n * as keys and names of PHP classes as values.\r\n * <\/p>\r\n * <p>\r\n * Setting the boolean trace option enables use of the\r\n * methods\r\n * SoapClient->__getLastRequest,\r\n * SoapClient->__getLastRequestHeaders,\r\n * SoapClient->__getLastResponse and\r\n * SoapClient->__getLastResponseHeaders.\r\n * <\/p>\r\n * <p>\r\n * The exceptions option is a boolean value defining whether\r\n * soap errors throw exceptions of type\r\n * SoapFault.\r\n * <\/p>\r\n * <p>\r\n * The connection_timeout option defines a timeout in seconds\r\n * for the connection to the SOAP service. This option does not define a timeout\r\n * for services with slow responses. To limit the time to wait for calls to finish the\r\n * default_socket_timeout setting\r\n * is available.\r\n * <\/p>\r\n * <p>\r\n * The typemap option is an array of type mappings.\r\n * Type mapping is an array with keys type_name,\r\n * type_ns (namespace URI), from_xml\r\n * (callback accepting one string parameter) and to_xml\r\n * (callback accepting one object parameter).\r\n * <\/p>\r\n * <p>\r\n * The cache_wsdl option is one of\r\n * <b>WSDL_CACHE_NONE<\/b>,\r\n * <b>WSDL_CACHE_DISK<\/b>,\r\n * <b>WSDL_CACHE_MEMORY<\/b> or\r\n * <b>WSDL_CACHE_BOTH<\/b>.\r\n * <\/p>\r\n * <p>\r\n * The user_agent option specifies string to use in\r\n * User-Agent header.\r\n * <\/p>\r\n * <p>\r\n * The stream_context option is a resource\r\n * for context.\r\n * <\/p>\r\n * <p>\r\n * The features option is a bitmask of\r\n * <b>SOAP_SINGLE_ELEMENT_ARRAYS<\/b>,\r\n * <b>SOAP_USE_XSI_ARRAY_TYPE<\/b>,\r\n * <b>SOAP_WAIT_ONE_WAY_CALLS<\/b>.\r\n * <\/p>\r\n * <p>\r\n * The keep_alive option is a boolean value defining whether\r\n * to send the Connection: Keep-Alive header or\r\n * Connection: close.\r\n * <\/p>\r\n * <p>\r\n * The ssl_method option is one of\r\n * <b>SOAP_SSL_METHOD_TLS<\/b>,\r\n * <b>SOAP_SSL_METHOD_SSLv2<\/b>,\r\n * <b>SOAP_SSL_METHOD_SSLv3<\/b> or\r\n * <b>SOAP_SSL_METHOD_SSLv23<\/b>.\r\n * <\/p>\r\n *\/"
            },
            {
                "name": "__call",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "function_name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "arguments",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * Calls a SOAP function (deprecated)\r\n * @link http:\/\/php.net\/manual\/en\/soapclient.call.php\r\n * @param string $function_name\r\n * @param string $arguments\r\n * @return mixed\r\n *\/"
            },
            {
                "name": "__soapCall",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "function_name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "arguments",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "options",
                        "type": "array",
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "input_headers",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "output_headers",
                        "type": "array",
                        "byRef": true,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * Calls a SOAP function\r\n * @link http:\/\/php.net\/manual\/en\/soapclient.soapcall.php\r\n * @param string $function_name <p>\r\n * The name of the SOAP function to call.\r\n * <\/p>\r\n * @param array $arguments <p>\r\n * An array of the arguments to pass to the function. This can be either\r\n * an ordered or an associative array. Note that most SOAP servers require\r\n * parameter names to be provided, in which case this must be an\r\n * associative array.\r\n * <\/p>\r\n * @param array $options [optional] <p>\r\n * An associative array of options to pass to the client.\r\n * <\/p>\r\n * <p>\r\n * The location option is the URL of the remote Web service.\r\n * <\/p>\r\n * <p>\r\n * The uri option is the target namespace of the SOAP service.\r\n * <\/p>\r\n * <p>\r\n * The soapaction option is the action to call.\r\n * <\/p>\r\n * @param mixed $input_headers [optional] <p>\r\n * An array of headers to be sent along with the SOAP request.\r\n * <\/p>\r\n * @param array $output_headers [optional] <p>\r\n * If supplied, this array will be filled with the headers from the SOAP response.\r\n * <\/p>\r\n * @return mixed SOAP functions may return one, or multiple values. If only one value is returned\r\n * by the SOAP function, the return value of __soapCall will be\r\n * a simple value (e.g. an integer, a string, etc). If multiple values are\r\n * returned, __soapCall will return\r\n * an associative array of named output parameters.\r\n * <\/p>\r\n * <p>\r\n * On error, if the SoapClient object was constructed with the exceptions\r\n * option set to <b>FALSE<\/b>, a SoapFault object will be returned.\r\n *\/"
            },
            {
                "name": "__getLastRequest",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * Returns last SOAP request\r\n * @link http:\/\/php.net\/manual\/en\/soapclient.getlastrequest.php\r\n * @return string The last SOAP request, as an XML string.\r\n *\/"
            },
            {
                "name": "__getLastResponse",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * Returns last SOAP response\r\n * @link http:\/\/php.net\/manual\/en\/soapclient.getlastresponse.php\r\n * @return string The last SOAP response, as an XML string.\r\n *\/"
            },
            {
                "name": "__getLastRequestHeaders",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * Returns the SOAP headers from the last request\r\n * @link http:\/\/php.net\/manual\/en\/soapclient.getlastrequestheaders.php\r\n * @return string The last SOAP request headers.\r\n *\/"
            },
            {
                "name": "__getLastResponseHeaders",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * Returns the SOAP headers from the last response\r\n * @link http:\/\/php.net\/manual\/en\/soapclient.getlastresponseheaders.php\r\n * @return string The last SOAP response headers.\r\n *\/"
            },
            {
                "name": "__getFunctions",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * Returns list of available SOAP functions\r\n * @link http:\/\/php.net\/manual\/en\/soapclient.getfunctions.php\r\n * @return array The array of SOAP function prototypes, detailing the return type,\r\n * the function name and type-hinted paramaters.\r\n *\/"
            },
            {
                "name": "__getTypes",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * Returns a list of SOAP types\r\n * @link http:\/\/php.net\/manual\/en\/soapclient.gettypes.php\r\n * @return array The array of SOAP types, detailing all structures and types.\r\n *\/"
            },
            {
                "name": "__doRequest",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "request",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "location",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "action",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "version",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "one_way",
                        "type": null,
                        "byRef": false,
                        "default": 0
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * Performs a SOAP request\r\n * @link http:\/\/php.net\/manual\/en\/soapclient.dorequest.php\r\n * @param string $request <p>\r\n * The XML SOAP request.\r\n * <\/p>\r\n * @param string $location <p>\r\n * The URL to request.\r\n * <\/p>\r\n * @param string $action <p>\r\n * The SOAP action.\r\n * <\/p>\r\n * @param int $version <p>\r\n * The SOAP version.\r\n * <\/p>\r\n * @param int $one_way [optional] <p>\r\n * If one_way is set to 1, this method returns nothing.\r\n * Use this where a response is not expected.\r\n * <\/p>\r\n * @return string The XML SOAP response.\r\n *\/"
            },
            {
                "name": "__setCookie",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.4)<br\/>\r\n * The __setCookie purpose\r\n * @link http:\/\/php.net\/manual\/en\/soapclient.setcookie.php\r\n * @param string $name <p>\r\n * The name of the cookie.\r\n * <\/p>\r\n * @param string $value [optional] <p>\r\n * The value of the cookie. If not specified, the cookie will be deleted.\r\n * <\/p>\r\n * @return void No value is returned.\r\n *\/"
            },
            {
                "name": "__setLocation",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "new_location",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * Sets the location of the Web service to use\r\n * @link http:\/\/php.net\/manual\/en\/soapclient.setlocation.php\r\n * @param string $new_location [optional] <p>\r\n * The new endpoint URL.\r\n * <\/p>\r\n * @return string The old endpoint URL.\r\n *\/"
            },
            {
                "name": "__setSoapHeaders",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "soapheaders",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.5)<br\/>\r\n * Sets SOAP headers for subsequent calls\r\n * @link http:\/\/php.net\/manual\/en\/soapclient.setsoapheaders.php\r\n * @param mixed $soapheaders [optional] <p>\r\n * The headers to be set. It could be <b>SoapHeader<\/b>\r\n * object or array of <b>SoapHeader<\/b> objects.\r\n * If not specified or set to <b>NULL<\/b>, the headers will be deleted.\r\n * <\/p>\r\n * @return bool <b>TRUE<\/b> on success or <b>FALSE<\/b> on failure.\r\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "SoapVar",
        "fqn": "\\SoapVar",
        "type": 0,
        "extends": "",
        "methods": [
            {
                "name": "SoapVar",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "data",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "encoding",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "type_name",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "type_namespace",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "node_name",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "node_namespace",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * SoapVar constructor\r\n * @link http:\/\/php.net\/manual\/en\/soapvar.soapvar.php\r\n * @param mixed $data <p>\r\n * The data to pass or return.\r\n * <\/p>\r\n * @param string $encoding <p>\r\n * The encoding ID, one of the XSD_... constants.\r\n * <\/p>\r\n * @param string $type_name [optional] <p>\r\n * The type name.\r\n * <\/p>\r\n * @param string $type_namespace [optional] <p>\r\n * The type namespace.\r\n * <\/p>\r\n * @param string $node_name [optional] <p>\r\n * The XML node name.\r\n * <\/p>\r\n * @param string $node_namespace [optional] <p>\r\n * The XML node namespace.\r\n * <\/p>\r\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "SoapServer",
        "fqn": "\\SoapServer",
        "type": 0,
        "extends": "",
        "methods": [
            {
                "name": "SoapServer",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "wsdl",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "options",
                        "type": "array",
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * SoapServer constructor\r\n * @link http:\/\/php.net\/manual\/en\/soapserver.soapserver.php\r\n * @param mixed $wsdl <p>\r\n * To use the SoapServer in WSDL mode, pass the URI of a WSDL file.\r\n * Otherwise, pass <b>NULL<\/b> and set the uri option to the\r\n * target namespace for the server.\r\n * <\/p>\r\n * @param array $options [optional] <p>\r\n * Allow setting a default SOAP version (soap_version),\r\n * internal character encoding (encoding),\r\n * and actor URI (actor).\r\n * <\/p>\r\n * <p>\r\n * The classmap option can be used to map some WSDL\r\n * types to PHP classes. This option must be an array with WSDL types\r\n * as keys and names of PHP classes as values.\r\n * <\/p>\r\n * <p>\r\n * The typemap option is an array of type mappings.\r\n * Type mapping is an array with keys type_name,\r\n * type_ns (namespace URI), from_xml\r\n * (callback accepting one string parameter) and to_xml\r\n * (callback accepting one object parameter).\r\n * <\/p>\r\n * <p>\r\n * The cache_wsdl option is one of\r\n * <b>WSDL_CACHE_NONE<\/b>,\r\n * <b>WSDL_CACHE_DISK<\/b>,\r\n * <b>WSDL_CACHE_MEMORY<\/b> or\r\n * <b>WSDL_CACHE_BOTH<\/b>.\r\n * <\/p>\r\n * <p>\r\n * There is also a features option which can be set to\r\n * <b>SOAP_WAIT_ONE_WAY_CALLS<\/b>,\r\n * <b>SOAP_SINGLE_ELEMENT_ARRAYS<\/b>,\r\n * <b>SOAP_USE_XSI_ARRAY_TYPE<\/b>.\r\n * <\/p>\r\n *\/"
            },
            {
                "name": "setPersistence",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "mode",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.2)<br\/>\r\n * Sets SoapServer persistence mode\r\n * @link http:\/\/php.net\/manual\/en\/soapserver.setpersistence.php\r\n * @param int $mode <p>\r\n * One of the SOAP_PERSISTENCE_XXX constants.\r\n * <\/p>\r\n * <p>\r\n * <b>SOAP_PERSISTENCE_REQUEST<\/b> - SoapServer data does not persist between\r\n * requests. This is the default behavior of any SoapServer\r\n * object after setClass is called.\r\n * <\/p>\r\n * <p>\r\n * <b>SOAP_PERSISTENCE_SESSION<\/b> - SoapServer data persists between requests.\r\n * This is accomplished by serializing the SoapServer class data into\r\n * $_SESSION['_bogus_session_name'], because of this\r\n * <b>session_start<\/b> must be called before this persistence mode is set.\r\n * <\/p>\r\n * @return void No value is returned.\r\n *\/"
            },
            {
                "name": "setClass",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "class_name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "args",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "_",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * Sets the class which handles SOAP requests\r\n * @link http:\/\/php.net\/manual\/en\/soapserver.setclass.php\r\n * @param string $class_name <p>\r\n * The name of the exported class.\r\n * <\/p>\r\n * @param mixed $args [optional] <p>\r\n * These optional parameters will be passed to the default class constructor\r\n * during object creation.\r\n * <\/p>\r\n * @param mixed $_ [optional]\r\n * @return void No value is returned.\r\n *\/"
            },
            {
                "name": "setObject",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "object",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.2.0)<br\/>\r\n * Sets the object which will be used to handle SOAP requests\r\n * @link http:\/\/php.net\/manual\/en\/soapserver.setobject.php\r\n * @param object $object <p>\r\n * The object to handle the requests.\r\n * <\/p>\r\n * @return void No value is returned.\r\n *\/"
            },
            {
                "name": "addFunction",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "functions",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * Adds one or more functions to handle SOAP requests\r\n * @link http:\/\/php.net\/manual\/en\/soapserver.addfunction.php\r\n * @param mixed $functions <p>\r\n * To export one function, pass the function name into this parameter as\r\n * a string.\r\n * <\/p>\r\n * <p>\r\n * To export several functions, pass an array of function names.\r\n * <\/p>\r\n * <p>\r\n * To export all the functions, pass a special constant <b>SOAP_FUNCTIONS_ALL<\/b>.\r\n * <\/p>\r\n * <p>\r\n * <i>functions<\/i> must receive all input arguments in the same\r\n * order as defined in the WSDL file (They should not receive any output parameters\r\n * as arguments) and return one or more values. To return several values they must\r\n * return an array with named output parameters.\r\n * <\/p>\r\n * @return void No value is returned.\r\n *\/"
            },
            {
                "name": "getFunctions",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * Returns list of defined functions\r\n * @link http:\/\/php.net\/manual\/en\/soapserver.getfunctions.php\r\n * @return array An array of the defined functions.\r\n *\/"
            },
            {
                "name": "handle",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "soap_request",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * Handles a SOAP request\r\n * @link http:\/\/php.net\/manual\/en\/soapserver.handle.php\r\n * @param string $soap_request [optional] <p>\r\n * The SOAP request. If this argument is omitted, the request is assumed to be\r\n * in the raw POST data of the HTTP request.\r\n * <\/p>\r\n * @return void No value is returned.\r\n *\/"
            },
            {
                "name": "fault",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "code",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "string",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "actor",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "details",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * Issue SoapServer fault indicating an error\r\n * @link http:\/\/php.net\/manual\/en\/soapserver.fault.php\r\n * @param string $code <p>\r\n * The error code to return\r\n * <\/p>\r\n * @param string $string <p>\r\n * A brief description of the error\r\n * <\/p>\r\n * @param string $actor [optional] <p>\r\n * A string identifying the actor that caused the fault.\r\n * <\/p>\r\n * @param string $details [optional] <p>\r\n * More details of the fault\r\n * <\/p>\r\n * @param string $name [optional] <p>\r\n * The name of the fault. This can be used to select a name from a WSDL file.\r\n * <\/p>\r\n * @return void No value is returned.\r\n *\/"
            },
            {
                "name": "addSoapHeader",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "object",
                        "type": "SoapHeader",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * Add a SOAP header to the response\r\n * @link http:\/\/php.net\/manual\/en\/soapserver.addsoapheader.php\r\n * @param SoapHeader $object <p>\r\n * The header to be returned.\r\n * <\/p>\r\n * @return void No value is returned.\r\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "SoapFault",
        "fqn": "\\SoapFault",
        "type": 0,
        "extends": "Exception",
        "methods": [
            {
                "name": "SoapFault",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "faultcode",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "faultstring",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "faultactor",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "detail",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "faultname",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "headerfault",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * SoapFault constructor\r\n * @link http:\/\/php.net\/manual\/en\/soapfault.soapfault.php\r\n * @param string $faultcode <p>\r\n * The error code of the <b>SoapFault<\/b>.\r\n * <\/p>\r\n * @param string $faultstring <p>\r\n * The error message of the <b>SoapFault<\/b>.\r\n * <\/p>\r\n * @param string $faultactor [optional] <p>\r\n * A string identifying the actor that caused the error.\r\n * <\/p>\r\n * @param string $detail [optional] <p>\r\n * More details about the cause of the error.\r\n * <\/p>\r\n * @param string $faultname [optional] <p>\r\n * Can be used to select the proper fault encoding from WSDL.\r\n * <\/p>\r\n * @param string $headerfault [optional] <p>\r\n * Can be used during SOAP header handling to report an error in the\r\n * response header.\r\n * <\/p>\r\n *\/"
            },
            {
                "name": "__toString",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * Obtain a string representation of a SoapFault\r\n * @link http:\/\/php.net\/manual\/en\/soapfault.tostring.php\r\n * @return string A string describing the SoapFault.\r\n *\/"
            },
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "message",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "code",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "previous",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Construct the exception\r\n * @link http:\/\/php.net\/manual\/en\/exception.construct.php\r\n * @param $message [optional]\r\n * @param $code [optional]\r\n * @param $previous [optional]\r\n *\/"
            },
            {
                "name": "getMessage",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the Exception message\r\n * @link http:\/\/php.net\/manual\/en\/exception.getmessage.php\r\n * @return string the Exception message as a string.\r\n *\/"
            },
            {
                "name": "getCode",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the Exception code\r\n * @link http:\/\/php.net\/manual\/en\/exception.getcode.php\r\n * @return mixed the exception code as integer in\r\n * <b>Exception<\/b> but possibly as other type in\r\n * <b>Exception<\/b> descendants (for example as\r\n * string in <b>PDOException<\/b>).\r\n *\/"
            },
            {
                "name": "getFile",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the file in which the exception occurred\r\n * @link http:\/\/php.net\/manual\/en\/exception.getfile.php\r\n * @return string the filename in which the exception was created.\r\n *\/"
            },
            {
                "name": "getLine",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the line in which the exception occurred\r\n * @link http:\/\/php.net\/manual\/en\/exception.getline.php\r\n * @return int the line number where the exception was created.\r\n *\/"
            },
            {
                "name": "getTrace",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the stack trace\r\n * @link http:\/\/php.net\/manual\/en\/exception.gettrace.php\r\n * @return array the Exception stack trace as an array.\r\n *\/"
            },
            {
                "name": "getPrevious",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.3.0)<br\/>\r\n * Returns previous Exception\r\n * @link http:\/\/php.net\/manual\/en\/exception.getprevious.php\r\n * @return Exception the previous <b>Exception<\/b> if available\r\n * or <b>NULL<\/b> otherwise.\r\n *\/"
            },
            {
                "name": "getTraceAsString",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.1.0)<br\/>\r\n * Gets the stack trace as a string\r\n * @link http:\/\/php.net\/manual\/en\/exception.gettraceasstring.php\r\n * @return string the Exception stack trace as a string.\r\n *\/"
            }
        ],
        "properties": [
            {
                "name": "message",
                "doc": null
            },
            {
                "name": "code",
                "doc": null
            },
            {
                "name": "file",
                "doc": null
            },
            {
                "name": "line",
                "doc": null
            }
        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "SoapParam",
        "fqn": "\\SoapParam",
        "type": 0,
        "extends": "",
        "methods": [
            {
                "name": "SoapParam",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "data",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * SoapParam constructor\r\n * @link http:\/\/php.net\/manual\/en\/soapparam.soapparam.php\r\n * @param mixed $data <p>\r\n * The data to pass or return. This parameter can be passed directly as PHP\r\n * value, but in this case it will be named as paramN and\r\n * the SOAP service may not understand it.\r\n * <\/p>\r\n * @param string $name <p>\r\n * The parameter name.\r\n * <\/p>\r\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "SoapHeader",
        "fqn": "\\SoapHeader",
        "type": 0,
        "extends": "",
        "methods": [
            {
                "name": "SoapHeader",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "namespace",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "data",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "mustunderstand",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "actor",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\r\n * (PHP 5 &gt;= 5.0.1)<br\/>\r\n * SoapHeader constructor\r\n * @link http:\/\/php.net\/manual\/en\/soapheader.soapheader.php\r\n * @param string $namespace <p>\r\n * The namespace of the SOAP header element.\r\n * <\/p>\r\n * @param string $name <p>\r\n * The name of the SoapHeader object.\r\n * <\/p>\r\n * @param mixed $data [optional] <p>\r\n * A SOAP header's content. It can be a PHP value or a\r\n * <b>SoapVar<\/b> object.\r\n * <\/p>\r\n * @param bool $mustunderstand [optional]\r\n * @param string $actor [optional] <p>\r\n * Value of the actor attribute of the SOAP header\r\n * element.\r\n * <\/p>\r\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "use_soap_error_handler",
        "params": [
            {
                "name": "handler",
                "type": null,
                "byRef": false,
                "default": null
            }
        ]
    },
    {
        "stmtType": "Function",
        "name": "is_soap_fault",
        "params": [
            {
                "name": "object",
                "type": null,
                "byRef": false,
                "default": ""
            }
        ]
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_1_1",
        "value": 1
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_1_2",
        "value": 2
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_PERSISTENCE_SESSION",
        "value": 1
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_PERSISTENCE_REQUEST",
        "value": 2
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_FUNCTIONS_ALL",
        "value": 999
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_ENCODED",
        "value": 1
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_LITERAL",
        "value": 2
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_RPC",
        "value": 1
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_DOCUMENT",
        "value": 2
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_ACTOR_NEXT",
        "value": 1
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_ACTOR_NONE",
        "value": 2
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_ACTOR_UNLIMATERECEIVER",
        "value": 3
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_COMPRESSION_ACCEPT",
        "value": 32
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_COMPRESSION_GZIP",
        "value": 0
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_COMPRESSION_DEFLATE",
        "value": 16
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_AUTHENTICATION_BASIC",
        "value": 0
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_AUTHENTICATION_DIGEST",
        "value": 1
    },
    {
        "stmtType": "Constant",
        "name": "UNKNOWN_TYPE",
        "value": 999998
    },
    {
        "stmtType": "Constant",
        "name": "XSD_STRING",
        "value": 101
    },
    {
        "stmtType": "Constant",
        "name": "XSD_BOOLEAN",
        "value": 102
    },
    {
        "stmtType": "Constant",
        "name": "XSD_DECIMAL",
        "value": 103
    },
    {
        "stmtType": "Constant",
        "name": "XSD_FLOAT",
        "value": 104
    },
    {
        "stmtType": "Constant",
        "name": "XSD_DOUBLE",
        "value": 105
    },
    {
        "stmtType": "Constant",
        "name": "XSD_DURATION",
        "value": 106
    },
    {
        "stmtType": "Constant",
        "name": "XSD_DATETIME",
        "value": 107
    },
    {
        "stmtType": "Constant",
        "name": "XSD_TIME",
        "value": 108
    },
    {
        "stmtType": "Constant",
        "name": "XSD_DATE",
        "value": 109
    },
    {
        "stmtType": "Constant",
        "name": "XSD_GYEARMONTH",
        "value": 110
    },
    {
        "stmtType": "Constant",
        "name": "XSD_GYEAR",
        "value": 111
    },
    {
        "stmtType": "Constant",
        "name": "XSD_GMONTHDAY",
        "value": 112
    },
    {
        "stmtType": "Constant",
        "name": "XSD_GDAY",
        "value": 113
    },
    {
        "stmtType": "Constant",
        "name": "XSD_GMONTH",
        "value": 114
    },
    {
        "stmtType": "Constant",
        "name": "XSD_HEXBINARY",
        "value": 115
    },
    {
        "stmtType": "Constant",
        "name": "XSD_BASE64BINARY",
        "value": 116
    },
    {
        "stmtType": "Constant",
        "name": "XSD_ANYURI",
        "value": 117
    },
    {
        "stmtType": "Constant",
        "name": "XSD_QNAME",
        "value": 118
    },
    {
        "stmtType": "Constant",
        "name": "XSD_NOTATION",
        "value": 119
    },
    {
        "stmtType": "Constant",
        "name": "XSD_NORMALIZEDSTRING",
        "value": 120
    },
    {
        "stmtType": "Constant",
        "name": "XSD_TOKEN",
        "value": 121
    },
    {
        "stmtType": "Constant",
        "name": "XSD_LANGUAGE",
        "value": 122
    },
    {
        "stmtType": "Constant",
        "name": "XSD_NMTOKEN",
        "value": 123
    },
    {
        "stmtType": "Constant",
        "name": "XSD_NAME",
        "value": 124
    },
    {
        "stmtType": "Constant",
        "name": "XSD_NCNAME",
        "value": 125
    },
    {
        "stmtType": "Constant",
        "name": "XSD_ID",
        "value": 126
    },
    {
        "stmtType": "Constant",
        "name": "XSD_IDREF",
        "value": 127
    },
    {
        "stmtType": "Constant",
        "name": "XSD_IDREFS",
        "value": 128
    },
    {
        "stmtType": "Constant",
        "name": "XSD_ENTITY",
        "value": 129
    },
    {
        "stmtType": "Constant",
        "name": "XSD_ENTITIES",
        "value": 130
    },
    {
        "stmtType": "Constant",
        "name": "XSD_INTEGER",
        "value": 131
    },
    {
        "stmtType": "Constant",
        "name": "XSD_NONPOSITIVEINTEGER",
        "value": 132
    },
    {
        "stmtType": "Constant",
        "name": "XSD_NEGATIVEINTEGER",
        "value": 133
    },
    {
        "stmtType": "Constant",
        "name": "XSD_LONG",
        "value": 134
    },
    {
        "stmtType": "Constant",
        "name": "XSD_INT",
        "value": 135
    },
    {
        "stmtType": "Constant",
        "name": "XSD_SHORT",
        "value": 136
    },
    {
        "stmtType": "Constant",
        "name": "XSD_BYTE",
        "value": 137
    },
    {
        "stmtType": "Constant",
        "name": "XSD_NONNEGATIVEINTEGER",
        "value": 138
    },
    {
        "stmtType": "Constant",
        "name": "XSD_UNSIGNEDLONG",
        "value": 139
    },
    {
        "stmtType": "Constant",
        "name": "XSD_UNSIGNEDINT",
        "value": 140
    },
    {
        "stmtType": "Constant",
        "name": "XSD_UNSIGNEDSHORT",
        "value": 141
    },
    {
        "stmtType": "Constant",
        "name": "XSD_UNSIGNEDBYTE",
        "value": 142
    },
    {
        "stmtType": "Constant",
        "name": "XSD_POSITIVEINTEGER",
        "value": 143
    },
    {
        "stmtType": "Constant",
        "name": "XSD_NMTOKENS",
        "value": 144
    },
    {
        "stmtType": "Constant",
        "name": "XSD_ANYTYPE",
        "value": 145
    },
    {
        "stmtType": "Constant",
        "name": "XSD_ANYXML",
        "value": 147
    },
    {
        "stmtType": "Constant",
        "name": "APACHE_MAP",
        "value": 200
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_ENC_OBJECT",
        "value": 301
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_ENC_ARRAY",
        "value": 300
    },
    {
        "stmtType": "Constant",
        "name": "XSD_1999_TIMEINSTANT",
        "value": 401
    },
    {
        "stmtType": "Constant",
        "name": "XSD_NAMESPACE",
        "value": "http:\/\/www.w3.org\/2001\/XMLSchema"
    },
    {
        "stmtType": "Constant",
        "name": "XSD_1999_NAMESPACE",
        "value": "http:\/\/www.w3.org\/1999\/XMLSchema"
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_SINGLE_ELEMENT_ARRAYS",
        "value": 1
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_WAIT_ONE_WAY_CALLS",
        "value": 2
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_USE_XSI_ARRAY_TYPE",
        "value": 4
    },
    {
        "stmtType": "Constant",
        "name": "WSDL_CACHE_NONE",
        "value": 0
    },
    {
        "stmtType": "Constant",
        "name": "WSDL_CACHE_DISK",
        "value": 1
    },
    {
        "stmtType": "Constant",
        "name": "WSDL_CACHE_MEMORY",
        "value": 2
    },
    {
        "stmtType": "Constant",
        "name": "WSDL_CACHE_BOTH",
        "value": 3
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_SSL_METHOD_TLS",
        "value": 0
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_SSL_METHOD_SSLv2",
        "value": 1
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_SSL_METHOD_SSLv3",
        "value": 2
    },
    {
        "stmtType": "Constant",
        "name": "SOAP_SSL_METHOD_SSLv23",
        "value": 3
    }
]
